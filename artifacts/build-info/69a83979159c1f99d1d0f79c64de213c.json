{
	"id": "69a83979159c1f99d1d0f79c64de213c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeFiStakingPlatform.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract DeFiStaking is ReentrancyGuard, Ownable, Pausable {\r\n    using SafeERC20 for IERC20;\r\n    \r\n    struct StakingPool {\r\n        IERC20 stakingToken;\r\n        IERC20 rewardToken;\r\n        uint256 rewardRate; // Reward per second per token staked\r\n        uint256 lastUpdateTime;\r\n        uint256 rewardPerTokenStored;\r\n        uint256 totalSupply;\r\n        uint256 minimumStake;\r\n        uint256 lockPeriod; // Lock period in seconds\r\n        bool active;\r\n    }\r\n    \r\n    struct UserInfo {\r\n        uint256 balance;\r\n        uint256 userRewardPerTokenPaid;\r\n        uint256 rewards;\r\n        uint256 stakedTime;\r\n    }\r\n    \r\n    mapping(uint256 => StakingPool) public pools;\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    \r\n    uint256 public poolCount;\r\n    uint256 public constant REWARD_PRECISION = 1e18;\r\n    \r\n    constructor() Ownable(msg.sender) {}\r\n    \r\n    event PoolCreated(\r\n        uint256 indexed poolId,\r\n        address stakingToken,\r\n        address rewardToken,\r\n        uint256 rewardRate,\r\n        uint256 minimumStake,\r\n        uint256 lockPeriod\r\n    );\r\n    \r\n    event Staked(address indexed user, uint256 indexed poolId, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 indexed poolId, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 indexed poolId, uint256 reward);\r\n    event RewardRateUpdated(uint256 indexed poolId, uint256 newRate);\r\n    event PoolStatusChanged(uint256 indexed poolId, bool active);\r\n    \r\n    modifier updateReward(uint256 poolId, address account) {\r\n        StakingPool storage pool = pools[poolId];\r\n        pool.rewardPerTokenStored = rewardPerToken(poolId);\r\n        pool.lastUpdateTime = block.timestamp;\r\n        \r\n        if (account != address(0)) {\r\n            UserInfo storage user = userInfo[poolId][account];\r\n            user.rewards = earned(poolId, account);\r\n            user.userRewardPerTokenPaid = pool.rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier poolExists(uint256 poolId) {\r\n        require(poolId < poolCount, \"Pool does not exist\");\r\n        _;\r\n    }\r\n    \r\n    modifier poolActive(uint256 poolId) {\r\n        require(pools[poolId].active, \"Pool is not active\");\r\n        _;\r\n    }\r\n    \r\n    function createPool(\r\n        address _stakingToken,\r\n        address _rewardToken,\r\n        uint256 _rewardRate,\r\n        uint256 _minimumStake,\r\n        uint256 _lockPeriod\r\n    ) external onlyOwner {\r\n        require(_stakingToken != address(0), \"Invalid staking token\");\r\n        require(_rewardToken != address(0), \"Invalid reward token\");\r\n        require(_rewardRate > 0, \"Reward rate must be greater than 0\");\r\n        \r\n        pools[poolCount] = StakingPool({\r\n            stakingToken: IERC20(_stakingToken),\r\n            rewardToken: IERC20(_rewardToken),\r\n            rewardRate: _rewardRate,\r\n            lastUpdateTime: block.timestamp,\r\n            rewardPerTokenStored: 0,\r\n            totalSupply: 0,\r\n            minimumStake: _minimumStake,\r\n            lockPeriod: _lockPeriod,\r\n            active: true\r\n        });\r\n        \r\n        emit PoolCreated(\r\n            poolCount,\r\n            _stakingToken,\r\n            _rewardToken,\r\n            _rewardRate,\r\n            _minimumStake,\r\n            _lockPeriod\r\n        );\r\n        \r\n        poolCount++;\r\n    }\r\n    \r\n    function rewardPerToken(uint256 poolId) public view returns (uint256) {\r\n        StakingPool storage pool = pools[poolId];\r\n        if (pool.totalSupply == 0) {\r\n            return pool.rewardPerTokenStored;\r\n        }\r\n        \r\n        return pool.rewardPerTokenStored + (\r\n            ((block.timestamp - pool.lastUpdateTime) * pool.rewardRate * REWARD_PRECISION) / pool.totalSupply\r\n        );\r\n    }\r\n    \r\n    function earned(uint256 poolId, address account) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[poolId][account];\r\n        return (user.balance * (rewardPerToken(poolId) - user.userRewardPerTokenPaid)) / REWARD_PRECISION + user.rewards;\r\n    }\r\n    \r\n    function stake(uint256 poolId, uint256 amount) \r\n        external \r\n        nonReentrant \r\n        whenNotPaused \r\n        poolExists(poolId) \r\n        poolActive(poolId) \r\n        updateReward(poolId, msg.sender) \r\n    {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        \r\n        StakingPool storage pool = pools[poolId];\r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        \r\n        require(amount >= pool.minimumStake, \"Amount below minimum stake\");\r\n        \r\n        pool.totalSupply += amount;\r\n        user.balance += amount;\r\n        user.stakedTime = block.timestamp;\r\n        \r\n        pool.stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        \r\n        emit Staked(msg.sender, poolId, amount);\r\n    }\r\n    \r\n    function withdraw(uint256 poolId, uint256 amount) \r\n        public \r\n        nonReentrant \r\n        poolExists(poolId) \r\n        updateReward(poolId, msg.sender) \r\n    {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        \r\n        StakingPool storage pool = pools[poolId];\r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        \r\n        require(user.balance >= amount, \"Insufficient balance\");\r\n        require(\r\n            block.timestamp >= user.stakedTime + pool.lockPeriod,\r\n            \"Tokens are still locked\"\r\n        );\r\n        \r\n        pool.totalSupply -= amount;\r\n        user.balance -= amount;\r\n        \r\n        pool.stakingToken.safeTransfer(msg.sender, amount);\r\n        \r\n        emit Withdrawn(msg.sender, poolId, amount);\r\n    }\r\n    \r\n    function getReward(uint256 poolId) \r\n        public \r\n        nonReentrant \r\n        poolExists(poolId) \r\n        updateReward(poolId, msg.sender) \r\n    {\r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        uint256 reward = user.rewards;\r\n        \r\n        if (reward > 0) {\r\n            user.rewards = 0;\r\n            pools[poolId].rewardToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, poolId, reward);\r\n        }\r\n    }\r\n    \r\n    function exit(uint256 poolId) external {\r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        withdraw(poolId, user.balance);\r\n        getReward(poolId);\r\n    }\r\n    \r\n    function compound(uint256 poolId) \r\n        external \r\n        nonReentrant \r\n        poolExists(poolId) \r\n        poolActive(poolId) \r\n        updateReward(poolId, msg.sender) \r\n    {\r\n        require(\r\n            address(pools[poolId].stakingToken) == address(pools[poolId].rewardToken),\r\n            \"Cannot compound different tokens\"\r\n        );\r\n        \r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        uint256 reward = user.rewards;\r\n        \r\n        if (reward > 0) {\r\n            user.rewards = 0;\r\n            \r\n            // Stake the reward\r\n            pools[poolId].totalSupply += reward;\r\n            user.balance += reward;\r\n            user.stakedTime = block.timestamp;\r\n            \r\n            emit RewardPaid(msg.sender, poolId, reward);\r\n            emit Staked(msg.sender, poolId, reward);\r\n        }\r\n    }\r\n    \r\n    function emergencyWithdraw(uint256 poolId) \r\n        external \r\n        nonReentrant \r\n        poolExists(poolId) \r\n    {\r\n        UserInfo storage user = userInfo[poolId][msg.sender];\r\n        uint256 amount = user.balance;\r\n        \r\n        require(amount > 0, \"No tokens to withdraw\");\r\n        \r\n        pools[poolId].totalSupply -= amount;\r\n        user.balance = 0;\r\n        user.rewards = 0;\r\n        \r\n        pools[poolId].stakingToken.safeTransfer(msg.sender, amount);\r\n        \r\n        emit Withdrawn(msg.sender, poolId, amount);\r\n    }\r\n    \r\n    function updateRewardRate(uint256 poolId, uint256 newRate) \r\n        external \r\n        onlyOwner \r\n        poolExists(poolId) \r\n        updateReward(poolId, address(0)) \r\n    {\r\n        require(newRate > 0, \"Reward rate must be greater than 0\");\r\n        pools[poolId].rewardRate = newRate;\r\n        emit RewardRateUpdated(poolId, newRate);\r\n    }\r\n    \r\n    function setPoolStatus(uint256 poolId, bool active) \r\n        external \r\n        onlyOwner \r\n        poolExists(poolId) \r\n    {\r\n        pools[poolId].active = active;\r\n        emit PoolStatusChanged(poolId, active);\r\n    }\r\n    \r\n    function getPoolInfo(uint256 poolId) \r\n        external \r\n        view \r\n        poolExists(poolId) \r\n        returns (\r\n            address stakingToken,\r\n            address rewardToken,\r\n            uint256 rewardRate,\r\n            uint256 totalSupply,\r\n            uint256 minimumStake,\r\n            uint256 lockPeriod,\r\n            bool active\r\n        ) \r\n    {\r\n        StakingPool storage pool = pools[poolId];\r\n        return (\r\n            address(pool.stakingToken),\r\n            address(pool.rewardToken),\r\n            pool.rewardRate,\r\n            pool.totalSupply,\r\n            pool.minimumStake,\r\n            pool.lockPeriod,\r\n            pool.active\r\n        );\r\n    }\r\n    \r\n    function getUserInfo(uint256 poolId, address user) \r\n        external \r\n        view \r\n        poolExists(poolId) \r\n        returns (\r\n            uint256 balance,\r\n            uint256 earnedAmount,\r\n            uint256 stakedTime,\r\n            uint256 unlockTime\r\n        ) \r\n    {\r\n        UserInfo storage userStake = userInfo[poolId][user];\r\n        return (\r\n            userStake.balance,\r\n            earned(poolId, user),\r\n            userStake.stakedTime,\r\n            userStake.stakedTime + pools[poolId].lockPeriod\r\n        );\r\n    }\r\n    \r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n    \r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 255,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 356,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/DeFiStakingPlatform.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeFiStakingPlatform.sol": {
				"DeFiStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minimumStake",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "RewardRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minimumStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockPeriod",
									"type": "uint256"
								}
							],
							"name": "createPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "earnedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "pools",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdateTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardPerTokenStored",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "setPoolStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "updateRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userRewardPerTokenPaid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakedTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeFiStakingPlatform.sol\":363:10088  contract DeFiStaking is ReentrancyGuard, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DeFiStakingPlatform.sol\":1220:1256  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/DeFiStakingPlatform.sol\":1242:1252  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x01\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeFiStakingPlatform.sol\":363:10088  contract DeFiStaking is ReentrancyGuard, Ownable, Pausable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_17:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_18:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_23\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_19:\n    /* \"#utility.yul\":328:352   */\n  tag_25\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_18\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_10:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_27\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DeFiStakingPlatform.sol\":363:10088  contract DeFiStaking is ReentrancyGuard, Ownable, Pausable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeFiStakingPlatform.sol\":363:10088  contract DeFiStaking is ReentrancyGuard, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xac4afa38\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xac4afa38\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb32534cf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbbcaf3fe\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe39c08fc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf525cb68\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x85ac165a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x441a3e70\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7f8661a1\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x1069f3b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1c4b774b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3d6aa5e1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/DeFiStakingPlatform.sol\":9387:9931  function getUserInfo(uint256 poolId, address user) ... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":5989:6463  function getReward(uint256 poolId) ... */\n    tag_4:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":8691:9375  function getPoolInfo(uint256 poolId) ... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":1160:1207  uint256 public constant REWARD_PRECISION = 1e18 */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":10018:10085  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":5200:5977  function withdraw(uint256 poolId, uint256 amount) ... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":7535:8084  function emergencyWithdraw(uint256 poolId) ... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":4427:5188  function stake(uint256 poolId, uint256 amount) ... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":6475:6654  function exit(uint256 poolId) external {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":9943:10006  function pause() external onlyOwner {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":2634:3717  function createPool(... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":3729:4133  function rewardPerToken(uint256 poolId) public view returns (uint256) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":1052:1116  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":6666:7523  function compound(uint256 poolId) ... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":1001:1045  mapping(uint256 => StakingPool) public pools */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":8096:8444  function updateRewardRate(uint256 poolId, uint256 newRate) ... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":8456:8679  function setPoolStatus(uint256 poolId, bool active) ... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":4145:4415  function earned(uint256 poolId, address account) public view returns (uint256) {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/DeFiStakingPlatform.sol\":1129:1153  uint256 public poolCount */\n    tag_25:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFiStakingPlatform.sol\":9387:9931  function getUserInfo(uint256 poolId, address user) ... */\n    tag_32:\n        /* \"contracts/DeFiStakingPlatform.sol\":9534:9549  uint256 balance */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9564:9584  uint256 earnedAmount */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9599:9617  uint256 stakedTime */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9632:9650  uint256 unlockTime */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9493:9499  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/DeFiStakingPlatform.sol\":9679:9705  UserInfo storage userStake */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9708:9716  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":9708:9724  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9717:9723  poolId */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":9708:9724  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":9708:9730  userInfo[poolId][user] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9725:9729  user */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":9708:9730  userInfo[poolId][user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":9679:9730  UserInfo storage userStake = userInfo[poolId][user] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":9763:9772  userStake */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":9763:9780  userStake.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9795:9815  earned(poolId, user) */\n      tag_118\n        /* \"contracts/DeFiStakingPlatform.sol\":9802:9808  poolId */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":9810:9814  user */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":9795:9801  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":9795:9815  earned(poolId, user) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/DeFiStakingPlatform.sol\":9830:9839  userStake */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":9830:9850  userStake.stakedTime */\n      0x03\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9888:9893  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":9888:9901  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9894:9900  poolId */\n      dup13\n        /* \"contracts/DeFiStakingPlatform.sol\":9888:9901  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":9888:9912  pools[poolId].lockPeriod */\n      0x07\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9865:9874  userStake */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":9865:9885  userStake.stakedTime */\n      0x03\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9865:9912  userStake.stakedTime + pools[poolId].lockPeriod */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/DeFiStakingPlatform.sol\":9741:9923  return (... */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":9387:9931  function getUserInfo(uint256 poolId, address user) ... */\n      pop\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":5989:6463  function getReward(uint256 poolId) ... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/DeFiStakingPlatform.sol\":6085:6091  poolId */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_116\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/DeFiStakingPlatform.sol\":6116:6122  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":6124:6134  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1972  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1980  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1981:1987  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1988  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      tag_128\n        /* \"contracts/DeFiStakingPlatform.sol\":2042:2048  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2041  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2003  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2024  pool.rewardPerTokenStored */\n      0x04\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2049  pool.rewardPerTokenStored = rewardPerToken(poolId) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2082:2097  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2064  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2079  pool.lastUpdateTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2097  pool.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2141:2142  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2129  account */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n      tag_129\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2181  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2192  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2193:2199  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2201:2208  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2209  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      tag_130\n        /* \"contracts/DeFiStakingPlatform.sol\":2246:2252  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2254:2261  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2245  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2228  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2236  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2262  user.rewards = earned(poolId, account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2311  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2332  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2281  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2304  user.userRewardPerTokenPaid */\n      0x01\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2332  user.userRewardPerTokenPaid = pool.rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2145:2344  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n    tag_129:\n        /* \"contracts/DeFiStakingPlatform.sol\":6153:6174  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6177:6185  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":6177:6193  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6186:6192  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":6177:6193  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6177:6205  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6194:6204  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":6177:6205  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6153:6205  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":6216:6230  uint256 reward */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6233:6237  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":6233:6245  user.rewards */\n      0x02\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":6216:6245  uint256 reward = user.rewards */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":6279:6280  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6270:6276  reward */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":6270:6280  reward > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":6266:6456  if (reward > 0) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":6312:6313  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6297:6301  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6297:6309  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":6297:6313  user.rewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6386  pools[poolId].rewardToken.safeTransfer(msg.sender, reward) */\n      tag_133\n        /* \"contracts/DeFiStakingPlatform.sol\":6367:6377  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":6379:6385  reward */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6333  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6341  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6334:6340  poolId */\n      dup12\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6341  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6353  pools[poolId].rewardToken */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6366  pools[poolId].rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"contracts/DeFiStakingPlatform.sol\":6328:6386  pools[poolId].rewardToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/DeFiStakingPlatform.sol\":6429:6435  poolId */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":6417:6427  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":6406:6444  RewardPaid(msg.sender, poolId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51\n        /* \"contracts/DeFiStakingPlatform.sol\":6437:6443  reward */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":6406:6444  RewardPaid(msg.sender, poolId, reward) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":6266:6456  if (reward > 0) {... */\n    tag_132:\n        /* \"contracts/DeFiStakingPlatform.sol\":6142:6463  {... */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":1937:2363  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2483:2484  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/DeFiStakingPlatform.sol\":5989:6463  function getReward(uint256 poolId) ... */\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":8691:9375  function getPoolInfo(uint256 poolId) ... */\n    tag_41:\n        /* \"contracts/DeFiStakingPlatform.sol\":8824:8844  address stakingToken */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8859:8878  address rewardToken */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8893:8911  uint256 rewardRate */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8926:8945  uint256 totalSupply */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8960:8980  uint256 minimumStake */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8995:9013  uint256 lockPeriod */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9028:9039  bool active */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8783:8789  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_116\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/DeFiStakingPlatform.sol\":9068:9092  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9095:9100  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":9095:9108  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":9101:9107  poolId */\n      dup12\n        /* \"contracts/DeFiStakingPlatform.sol\":9095:9108  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":9068:9108  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":9149:9153  pool */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":9149:9166  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":9190:9194  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":9190:9206  pool.rewardToken */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":9222:9226  pool */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":9222:9237  pool.rewardRate */\n      0x02\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9252:9256  pool */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":9252:9268  pool.totalSupply */\n      0x05\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9283:9287  pool */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":9283:9300  pool.minimumStake */\n      0x06\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9315:9319  pool */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":9315:9330  pool.lockPeriod */\n      0x07\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":9345:9349  pool */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":9345:9356  pool.active */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":9119:9367  return (... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":8691:9375  function getPoolInfo(uint256 poolId) ... */\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":1160:1207  uint256 public constant REWARD_PRECISION = 1e18 */\n    tag_45:\n        /* \"contracts/DeFiStakingPlatform.sol\":1203:1207  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeFiStakingPlatform.sol\":1160:1207  uint256 public constant REWARD_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":10018:10085  function unpause() external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/DeFiStakingPlatform.sol\":10067:10077  _unpause() */\n      tag_146\n        /* \"contracts/DeFiStakingPlatform.sol\":10067:10075  _unpause */\n      tag_147\n        /* \"contracts/DeFiStakingPlatform.sol\":10067:10077  _unpause() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/DeFiStakingPlatform.sol\":10018:10085  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":5200:5977  function withdraw(uint256 poolId, uint256 amount) ... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/DeFiStakingPlatform.sol\":5311:5317  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_116\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/DeFiStakingPlatform.sol\":5342:5348  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":5350:5360  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1972  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1980  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1981:1987  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1988  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      tag_154\n        /* \"contracts/DeFiStakingPlatform.sol\":2042:2048  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2041  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2003  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2024  pool.rewardPerTokenStored */\n      0x04\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2049  pool.rewardPerTokenStored = rewardPerToken(poolId) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2082:2097  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2064  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2079  pool.lastUpdateTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2097  pool.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2141:2142  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2129  account */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n      tag_155\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2181  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2192  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2193:2199  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2201:2208  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2209  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      tag_156\n        /* \"contracts/DeFiStakingPlatform.sol\":2246:2252  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2254:2261  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2245  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2228  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2236  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2262  user.rewards = earned(poolId, account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2311  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2332  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2281  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2304  user.userRewardPerTokenPaid */\n      0x01\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2332  user.userRewardPerTokenPaid = pool.rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2145:2344  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n    tag_155:\n        /* \"contracts/DeFiStakingPlatform.sol\":5396:5397  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5387:5393  amount */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":5387:5397  amount > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":5379:5419  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/DeFiStakingPlatform.sol\":5440:5464  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5467:5472  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":5467:5480  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5473:5479  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":5467:5480  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":5440:5480  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5491:5512  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5515:5523  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":5515:5531  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5524:5530  poolId */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":5515:5531  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":5515:5543  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5532:5542  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":5515:5543  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":5491:5543  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5588:5594  amount */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":5572:5576  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":5572:5584  user.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":5572:5594  user.balance >= amount */\n      lt\n      iszero\n        /* \"contracts/DeFiStakingPlatform.sol\":5564:5619  require(user.balance >= amount, \"Insufficient balance\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/DeFiStakingPlatform.sol\":5689:5693  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":5689:5704  pool.lockPeriod */\n      0x07\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":5671:5675  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":5671:5686  user.stakedTime */\n      0x03\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":5671:5704  user.stakedTime + pool.lockPeriod */\n      tag_164\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"contracts/DeFiStakingPlatform.sol\":5652:5667  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":5652:5704  block.timestamp >= user.stakedTime + pool.lockPeriod */\n      lt\n      iszero\n        /* \"contracts/DeFiStakingPlatform.sol\":5630:5755  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/DeFiStakingPlatform.sol\":5796:5802  amount */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":5776:5780  pool */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":5776:5792  pool.totalSupply */\n      0x05\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5776:5802  pool.totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5829:5835  amount */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":5813:5817  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":5813:5825  user.balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":5813:5835  user.balance -= amount */\n      dup3\n      dup3\n      sload\n      tag_170\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_170:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5856:5906  pool.stakingToken.safeTransfer(msg.sender, amount) */\n      tag_171\n        /* \"contracts/DeFiStakingPlatform.sol\":5887:5897  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":5899:5905  amount */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":5856:5860  pool */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":5856:5873  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":5856:5886  pool.stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"contracts/DeFiStakingPlatform.sol\":5856:5906  pool.stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/DeFiStakingPlatform.sol\":5954:5960  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":5942:5952  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":5932:5969  Withdrawn(msg.sender, poolId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/DeFiStakingPlatform.sol\":5962:5968  amount */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":5932:5969  Withdrawn(msg.sender, poolId, amount) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":5368:5977  {... */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":1937:2363  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2483:2484  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/DeFiStakingPlatform.sol\":5200:5977  function withdraw(uint256 poolId, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":7535:8084  function emergencyWithdraw(uint256 poolId) ... */\n    tag_56:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/DeFiStakingPlatform.sol\":7641:7647  poolId */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_116\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/DeFiStakingPlatform.sol\":7666:7687  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7690:7698  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":7690:7706  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7699:7705  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":7690:7706  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7690:7718  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7707:7717  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":7690:7718  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7666:7718  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7729:7743  uint256 amount */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7746:7750  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":7746:7758  user.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":7729:7758  uint256 amount = user.balance */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7796:7797  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7787:7793  amount */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":7787:7797  amount > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":7779:7823  require(amount > 0, \"No tokens to withdraw\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/DeFiStakingPlatform.sol\":7873:7879  amount */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":7844:7849  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":7844:7857  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7850:7856  poolId */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":7844:7857  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7844:7869  pools[poolId].totalSupply */\n      0x05\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7844:7879  pools[poolId].totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7905:7906  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7890:7894  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7890:7902  user.balance */\n      0x00\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":7890:7906  user.balance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7932:7933  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7917:7921  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7917:7929  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":7917:7933  user.rewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:8013  pools[poolId].stakingToken.safeTransfer(msg.sender, amount) */\n      tag_184\n        /* \"contracts/DeFiStakingPlatform.sol\":7994:8004  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":8006:8012  amount */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:7959  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:7967  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7960:7966  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:7967  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:7980  pools[poolId].stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:7993  pools[poolId].stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"contracts/DeFiStakingPlatform.sol\":7954:8013  pools[poolId].stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/DeFiStakingPlatform.sol\":8061:8067  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":8049:8059  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":8039:8076  Withdrawn(msg.sender, poolId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/DeFiStakingPlatform.sol\":8069:8075  amount */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":8039:8076  Withdrawn(msg.sender, poolId, amount) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":7655:8084  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_186\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/DeFiStakingPlatform.sol\":7535:8084  function emergencyWithdraw(uint256 poolId) ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":4427:5188  function stake(uint256 poolId, uint256 amount) ... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_196\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_197\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/DeFiStakingPlatform.sol\":4561:4567  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_116\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/DeFiStakingPlatform.sol\":4590:4596  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2564  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2572  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2565:2571  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2572  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2579  pools[poolId].active */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2551:2602  require(pools[poolId].active, \"Pool is not active\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/DeFiStakingPlatform.sol\":4621:4627  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":4629:4639  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1972  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1980  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1981:1987  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1988  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      tag_206\n        /* \"contracts/DeFiStakingPlatform.sol\":2042:2048  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2041  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2003  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2024  pool.rewardPerTokenStored */\n      0x04\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2049  pool.rewardPerTokenStored = rewardPerToken(poolId) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2082:2097  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2064  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2079  pool.lastUpdateTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2097  pool.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2141:2142  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2129  account */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n      tag_207\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2181  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2192  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2193:2199  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2201:2208  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2209  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      tag_208\n        /* \"contracts/DeFiStakingPlatform.sol\":2246:2252  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2254:2261  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2245  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2228  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2236  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2262  user.rewards = earned(poolId, account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2311  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2332  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2281  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2304  user.userRewardPerTokenPaid */\n      0x01\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2332  user.userRewardPerTokenPaid = pool.rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2145:2344  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n    tag_207:\n        /* \"contracts/DeFiStakingPlatform.sol\":4675:4676  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4666:4672  amount */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":4666:4676  amount > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":4658:4695  require(amount > 0, \"Cannot stake 0\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/DeFiStakingPlatform.sol\":4716:4740  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4743:4748  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":4743:4756  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4749:4755  poolId */\n      dup10\n        /* \"contracts/DeFiStakingPlatform.sol\":4743:4756  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":4716:4756  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":4767:4788  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4791:4799  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":4791:4807  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4800:4806  poolId */\n      dup11\n        /* \"contracts/DeFiStakingPlatform.sol\":4791:4807  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":4791:4819  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4808:4818  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":4791:4819  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":4767:4819  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":4858:4862  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":4858:4875  pool.minimumStake */\n      0x06\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":4848:4854  amount */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":4848:4875  amount >= pool.minimumStake */\n      lt\n      iszero\n        /* \"contracts/DeFiStakingPlatform.sol\":4840:4906  require(amount >= pool.minimumStake, \"Amount below minimum stake\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/DeFiStakingPlatform.sol\":4947:4953  amount */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":4927:4931  pool */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":4927:4943  pool.totalSupply */\n      0x05\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4927:4953  pool.totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_216\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_216:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":4980:4986  amount */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":4964:4968  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":4964:4976  user.balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4964:4986  user.balance += amount */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5015:5030  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":4997:5001  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":4997:5012  user.stakedTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":4997:5030  user.stakedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":5051:5120  pool.stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_218\n        /* \"contracts/DeFiStakingPlatform.sol\":5086:5096  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":5106:5110  this */\n      address\n        /* \"contracts/DeFiStakingPlatform.sol\":5113:5119  amount */\n      dup11\n        /* \"contracts/DeFiStakingPlatform.sol\":5051:5055  pool */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":5051:5068  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":5051:5085  pool.stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap1\n        /* \"contracts/DeFiStakingPlatform.sol\":5051:5120  pool.stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/DeFiStakingPlatform.sol\":5165:5171  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":5153:5163  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":5146:5180  Staked(msg.sender, poolId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/DeFiStakingPlatform.sol\":5173:5179  amount */\n      dup11\n        /* \"contracts/DeFiStakingPlatform.sol\":5146:5180  Staked(msg.sender, poolId, amount) */\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":4647:5188  {... */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":1937:2363  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2613:2614  _ */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2483:2484  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/DeFiStakingPlatform.sol\":4427:5188  function stake(uint256 poolId, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":6475:6654  function exit(uint256 poolId) external {... */\n    tag_68:\n        /* \"contracts/DeFiStakingPlatform.sol\":6525:6546  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6549:6557  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":6549:6565  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6558:6564  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":6549:6565  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6549:6577  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6566:6576  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":6549:6577  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6525:6577  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":6588:6618  withdraw(poolId, user.balance) */\n      tag_223\n        /* \"contracts/DeFiStakingPlatform.sol\":6597:6603  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6605:6609  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6605:6617  user.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":6588:6596  withdraw */\n      tag_53\n        /* \"contracts/DeFiStakingPlatform.sol\":6588:6618  withdraw(poolId, user.balance) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/DeFiStakingPlatform.sol\":6629:6646  getReward(poolId) */\n      tag_224\n        /* \"contracts/DeFiStakingPlatform.sol\":6639:6645  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6629:6638  getReward */\n      tag_38\n        /* \"contracts/DeFiStakingPlatform.sol\":6629:6646  getReward(poolId) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/DeFiStakingPlatform.sol\":6514:6654  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":6475:6654  function exit(uint256 poolId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":9943:10006  function pause() external onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/DeFiStakingPlatform.sol\":9990:9998  _pause() */\n      tag_228\n        /* \"contracts/DeFiStakingPlatform.sol\":9990:9996  _pause */\n      tag_229\n        /* \"contracts/DeFiStakingPlatform.sol\":9990:9998  _pause() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/DeFiStakingPlatform.sol\":9943:10006  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":2634:3717  function createPool(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/DeFiStakingPlatform.sol\":2879:2880  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2854:2881  _stakingToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2854:2867  _stakingToken */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2854:2881  _stakingToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/DeFiStakingPlatform.sol\":2846:2907  require(_stakingToken != address(0), \"Invalid staking token\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"contracts/DeFiStakingPlatform.sol\":2950:2951  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2926:2952  _rewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2926:2938  _rewardToken */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2926:2952  _rewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/DeFiStakingPlatform.sol\":2918:2977  require(_rewardToken != address(0), \"Invalid reward token\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/DeFiStakingPlatform.sol\":3010:3011  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2996:3007  _rewardRate */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2996:3011  _rewardRate > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":2988:3050  require(_rewardRate > 0, \"Reward rate must be greater than 0\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":3138:3151  _stakingToken */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3187:3199  _rewardToken */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3227:3238  _rewardRate */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3269:3284  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3321:3322  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3350:3351  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3380:3393  _minimumStake */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3420:3431  _lockPeriod */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":3454:3458  true */\n      0x01\n        /* \"contracts/DeFiStakingPlatform.sol\":3090:3470  StakingPool({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":3071:3076  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":3071:3087  pools[poolCount] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3077:3086  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":3071:3087  pools[poolCount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":3071:3470  pools[poolCount] = StakingPool({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":3522:3531  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":3496:3677  PoolCreated(... */\n      0xb203c0a4a9d84ddde23dba31a828c25525b2e0b5fe6a0e356d983aed95961ca1\n        /* \"contracts/DeFiStakingPlatform.sol\":3546:3559  _stakingToken */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3574:3586  _rewardToken */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3601:3612  _rewardRate */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3627:3640  _minimumStake */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3655:3666  _lockPeriod */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":3496:3677  PoolCreated(... */\n      mload(0x40)\n      tag_242\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeFiStakingPlatform.sol\":3698:3707  poolCount */\n      0x04\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3698:3709  poolCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2634:3717  function createPool(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":3729:4133  function rewardPerToken(uint256 poolId) public view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/DeFiStakingPlatform.sol\":3790:3797  uint256 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3810:3834  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3837:3842  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":3837:3850  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3843:3849  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":3837:3850  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":3810:3850  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":3885:3886  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":3865:3869  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":3865:3881  pool.totalSupply */\n      0x05\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":3865:3886  pool.totalSupply == 0 */\n      sub\n        /* \"contracts/DeFiStakingPlatform.sol\":3861:3947  if (pool.totalSupply == 0) {... */\n      tag_247\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":3910:3914  pool */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":3910:3935  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":3903:3935  return pool.rewardPerTokenStored */\n      swap2\n      pop\n      pop\n      jump(tag_246)\n        /* \"contracts/DeFiStakingPlatform.sol\":3861:3947  if (pool.totalSupply == 0) {... */\n    tag_247:\n        /* \"contracts/DeFiStakingPlatform.sol\":4098:4102  pool */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":4098:4114  pool.totalSupply */\n      0x05\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":1203:1207  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeFiStakingPlatform.sol\":4060:4064  pool */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":4060:4075  pool.rewardRate */\n      0x02\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":4037:4041  pool */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":4037:4056  pool.lastUpdateTime */\n      0x03\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":4019:4034  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":4019:4056  block.timestamp - pool.lastUpdateTime */\n      tag_248\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_248:\n        /* \"contracts/DeFiStakingPlatform.sol\":4018:4075  (block.timestamp - pool.lastUpdateTime) * pool.rewardRate */\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"contracts/DeFiStakingPlatform.sol\":4018:4094  (block.timestamp - pool.lastUpdateTime) * pool.rewardRate * REWARD_PRECISION */\n      tag_251\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_251:\n        /* \"contracts/DeFiStakingPlatform.sol\":4017:4114  ((block.timestamp - pool.lastUpdateTime) * pool.rewardRate * REWARD_PRECISION) / pool.totalSupply */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/DeFiStakingPlatform.sol\":3974:3978  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":3974:3999  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":3974:4125  pool.rewardPerTokenStored + (... */\n      tag_254\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_254:\n        /* \"contracts/DeFiStakingPlatform.sol\":3967:4125  return pool.rewardPerTokenStored + (... */\n      swap2\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":3729:4133  function rewardPerToken(uint256 poolId) public view returns (uint256) {... */\n    tag_246:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":1052:1116  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_85:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":6666:7523  function compound(uint256 poolId) ... */\n    tag_89:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_257\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/DeFiStakingPlatform.sol\":6763:6769  poolId */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_116\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/DeFiStakingPlatform.sol\":6792:6798  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2564  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2572  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2565:2571  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2572  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2559:2579  pools[poolId].active */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2551:2602  require(pools[poolId].active, \"Pool is not active\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_204\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/DeFiStakingPlatform.sol\":6823:6829  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":6831:6841  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1972  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1980  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1981:1987  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1988  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      tag_265\n        /* \"contracts/DeFiStakingPlatform.sol\":2042:2048  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2041  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2003  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2024  pool.rewardPerTokenStored */\n      0x04\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2049  pool.rewardPerTokenStored = rewardPerToken(poolId) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2082:2097  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2064  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2079  pool.lastUpdateTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2097  pool.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2141:2142  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2129  account */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n      tag_266\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2181  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2192  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2193:2199  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2201:2208  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2209  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      tag_267\n        /* \"contracts/DeFiStakingPlatform.sol\":2246:2252  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2254:2261  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2245  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2228  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2236  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2262  user.rewards = earned(poolId, account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2311  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2332  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2281  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2304  user.userRewardPerTokenPaid */\n      0x01\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2332  user.userRewardPerTokenPaid = pool.rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2145:2344  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n    tag_266:\n        /* \"contracts/DeFiStakingPlatform.sol\":6929:6934  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":6929:6942  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6935:6941  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":6929:6942  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6929:6954  pools[poolId].rewardToken */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":6882:6955  address(pools[poolId].stakingToken) == address(pools[poolId].rewardToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":6890:6895  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":6890:6903  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":6896:6902  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":6890:6903  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":6890:6916  pools[poolId].stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":6882:6955  address(pools[poolId].stakingToken) == address(pools[poolId].rewardToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":6860:7015  require(... */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/DeFiStakingPlatform.sol\":7036:7057  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7060:7068  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":7060:7076  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7069:7075  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":7060:7076  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7060:7088  userInfo[poolId][msg.sender] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7077:7087  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":7060:7088  userInfo[poolId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7036:7088  UserInfo storage user = userInfo[poolId][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7099:7113  uint256 reward */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7116:7120  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":7116:7128  user.rewards */\n      0x02\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":7099:7128  uint256 reward = user.rewards */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7162:7163  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7153:7159  reward */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":7153:7163  reward > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":7149:7516  if (reward > 0) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":7195:7196  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7180:7184  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7180:7192  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":7180:7196  user.rewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7287:7293  reward */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":7258:7263  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":7258:7271  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7264:7270  poolId */\n      dup11\n        /* \"contracts/DeFiStakingPlatform.sol\":7258:7271  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":7258:7283  pools[poolId].totalSupply */\n      0x05\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7258:7293  pools[poolId].totalSupply += reward */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_273:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7324:7330  reward */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":7308:7312  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7308:7320  user.balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":7308:7330  user.balance += reward */\n      dup3\n      dup3\n      sload\n      tag_274\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_274:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7363:7378  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":7345:7349  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":7345:7360  user.stakedTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":7345:7378  user.stakedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":7435:7441  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":7423:7433  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":7412:7450  RewardPaid(msg.sender, poolId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51\n        /* \"contracts/DeFiStakingPlatform.sol\":7443:7449  reward */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":7412:7450  RewardPaid(msg.sender, poolId, reward) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":7489:7495  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":7477:7487  msg.sender */\n      caller\n        /* \"contracts/DeFiStakingPlatform.sol\":7470:7504  Staked(msg.sender, poolId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/DeFiStakingPlatform.sol\":7497:7503  reward */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":7470:7504  Staked(msg.sender, poolId, reward) */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFiStakingPlatform.sol\":7149:7516  if (reward > 0) {... */\n    tag_272:\n        /* \"contracts/DeFiStakingPlatform.sol\":6849:7523  {... */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":1937:2363  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2613:2614  _ */\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2483:2484  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_277\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_277:\n        /* \"contracts/DeFiStakingPlatform.sol\":6666:7523  function compound(uint256 poolId) ... */\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":1001:1045  mapping(uint256 => StakingPool) public pools */\n    tag_92:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup10\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":8096:8444  function updateRewardRate(uint256 poolId, uint256 newRate) ... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/DeFiStakingPlatform.sol\":8215:8221  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_116\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"contracts/DeFiStakingPlatform.sol\":8246:8252  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":8262:8263  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1972  StakingPool storage pool */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1980  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":1981:1987  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":1975:1988  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":1948:1988  StakingPool storage pool = pools[poolId] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      tag_284\n        /* \"contracts/DeFiStakingPlatform.sol\":2042:2048  poolId */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2041  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":2027:2049  rewardPerToken(poolId) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2003  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2024  pool.rewardPerTokenStored */\n      0x04\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":1999:2049  pool.rewardPerTokenStored = rewardPerToken(poolId) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2082:2097  block.timestamp */\n      timestamp\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2064  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2079  pool.lastUpdateTime */\n      0x03\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2060:2097  pool.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2141:2142  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2129  account */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":2122:2143  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n      tag_285\n      jumpi\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2181  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2192  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2193:2199  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2200  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":2201:2208  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2184:2209  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":2160:2209  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      tag_286\n        /* \"contracts/DeFiStakingPlatform.sol\":2246:2252  poolId */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2254:2261  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2245  earned */\n      tag_104\n        /* \"contracts/DeFiStakingPlatform.sol\":2239:2262  earned(poolId, account) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2228  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2236  user.rewards */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2224:2262  user.rewards = earned(poolId, account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2311  pool */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2307:2332  pool.rewardPerTokenStored */\n      0x04\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2281  user */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2304  user.userRewardPerTokenPaid */\n      0x01\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":2277:2332  user.userRewardPerTokenPaid = pool.rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2145:2344  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2118:2344  if (account != address(0)) {... */\n    tag_285:\n        /* \"contracts/DeFiStakingPlatform.sol\":8301:8302  0 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8291:8298  newRate */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":8291:8302  newRate > 0 */\n      gt\n        /* \"contracts/DeFiStakingPlatform.sol\":8283:8341  require(newRate > 0, \"Reward rate must be greater than 0\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_241\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/DeFiStakingPlatform.sol\":8379:8386  newRate */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":8352:8357  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":8352:8365  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8358:8364  poolId */\n      dup9\n        /* \"contracts/DeFiStakingPlatform.sol\":8352:8365  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":8352:8376  pools[poolId].rewardRate */\n      0x02\n      add\n        /* \"contracts/DeFiStakingPlatform.sol\":8352:8386  pools[poolId].rewardRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":8420:8426  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":8402:8436  RewardRateUpdated(poolId, newRate) */\n      0xc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee50\n        /* \"contracts/DeFiStakingPlatform.sol\":8428:8435  newRate */\n      dup7\n        /* \"contracts/DeFiStakingPlatform.sol\":8402:8436  RewardRateUpdated(poolId, newRate) */\n      mload(0x40)\n      tag_290\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeFiStakingPlatform.sol\":1937:2363  {... */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":2483:2484  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":8096:8444  function updateRewardRate(uint256 poolId, uint256 newRate) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":8456:8679  function setPoolStatus(uint256 poolId, bool active) ... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/DeFiStakingPlatform.sol\":8568:8574  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2439:2448  poolCount */\n      sload(0x04)\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2436  poolId */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":2430:2448  poolId < poolCount */\n      lt\n        /* \"contracts/DeFiStakingPlatform.sol\":2422:2472  require(poolId < poolCount, \"Pool does not exist\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_116\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"contracts/DeFiStakingPlatform.sol\":8616:8622  active */\n      dup2\n        /* \"contracts/DeFiStakingPlatform.sol\":8593:8598  pools */\n      0x02\n        /* \"contracts/DeFiStakingPlatform.sol\":8593:8606  pools[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8599:8605  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":8593:8606  pools[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":8593:8613  pools[poolId].active */\n      0x08\n      add\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":8593:8622  pools[poolId].active = active */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":8656:8662  poolId */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":8638:8671  PoolStatusChanged(poolId, active) */\n      0xb3c3c605d1520cd5bf41301dd5c04929e0ff021b02a10ea259b5a5b2d521a29c\n        /* \"contracts/DeFiStakingPlatform.sol\":8664:8670  active */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":8638:8671  PoolStatusChanged(poolId, active) */\n      mload(0x40)\n      tag_297\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":8456:8679  function setPoolStatus(uint256 poolId, bool active) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":4145:4415  function earned(uint256 poolId, address account) public view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/DeFiStakingPlatform.sol\":4215:4222  uint256 */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4235:4256  UserInfo storage user */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4259:4267  userInfo */\n      0x03\n        /* \"contracts/DeFiStakingPlatform.sol\":4259:4275  userInfo[poolId] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4268:4274  poolId */\n      dup6\n        /* \"contracts/DeFiStakingPlatform.sol\":4259:4275  userInfo[poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":4259:4284  userInfo[poolId][account] */\n      0x00\n        /* \"contracts/DeFiStakingPlatform.sol\":4276:4283  account */\n      dup5\n        /* \"contracts/DeFiStakingPlatform.sol\":4259:4284  userInfo[poolId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFiStakingPlatform.sol\":4235:4284  UserInfo storage user = userInfo[poolId][account] */\n      swap1\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":4395:4399  user */\n      dup1\n        /* \"contracts/DeFiStakingPlatform.sol\":4395:4407  user.rewards */\n      0x02\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":1203:1207  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeFiStakingPlatform.sol\":4344:4348  user */\n      dup3\n        /* \"contracts/DeFiStakingPlatform.sol\":4344:4371  user.userRewardPerTokenPaid */\n      0x01\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":4319:4341  rewardPerToken(poolId) */\n      tag_299\n        /* \"contracts/DeFiStakingPlatform.sol\":4334:4340  poolId */\n      dup8\n        /* \"contracts/DeFiStakingPlatform.sol\":4319:4333  rewardPerToken */\n      tag_77\n        /* \"contracts/DeFiStakingPlatform.sol\":4319:4341  rewardPerToken(poolId) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/DeFiStakingPlatform.sol\":4319:4371  rewardPerToken(poolId) - user.userRewardPerTokenPaid */\n      tag_300\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_300:\n        /* \"contracts/DeFiStakingPlatform.sol\":4303:4307  user */\n      dup4\n        /* \"contracts/DeFiStakingPlatform.sol\":4303:4315  user.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/DeFiStakingPlatform.sol\":4303:4372  user.balance * (rewardPerToken(poolId) - user.userRewardPerTokenPaid) */\n      tag_301\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_301:\n        /* \"contracts/DeFiStakingPlatform.sol\":4302:4392  (user.balance * (rewardPerToken(poolId) - user.userRewardPerTokenPaid)) / REWARD_PRECISION */\n      tag_302\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_302:\n        /* \"contracts/DeFiStakingPlatform.sol\":4302:4407  (user.balance * (rewardPerToken(poolId) - user.userRewardPerTokenPaid)) / REWARD_PRECISION + user.rewards */\n      tag_303\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_303:\n        /* \"contracts/DeFiStakingPlatform.sol\":4295:4407  return (user.balance * (rewardPerToken(poolId) - user.userRewardPerTokenPaid)) / REWARD_PRECISION + user.rewards */\n      swap2\n      pop\n      pop\n        /* \"contracts/DeFiStakingPlatform.sol\":4145:4415  function earned(uint256 poolId, address account) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeFiStakingPlatform.sol\":1129:1153  uint256 public poolCount */\n    tag_111:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_316\n      swap3\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_323\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_328\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_329\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x01\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_331\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_322\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_332\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_335\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_58\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_341\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_344\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_197\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_346\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_322\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_347\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_351)\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_356\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_58\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_361:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_363:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_364:\n        /* \"#utility.yul\":490:514   */\n      tag_420\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_363\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_421:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_365:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_423\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_364\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_366:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_367:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_426\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_366\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_368:\n        /* \"#utility.yul\":997:1021   */\n      tag_428\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_367\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_429:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_369:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_431\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_368\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_31:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_434\n      tag_361\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1290:1409   */\n    tag_433:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_435\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_365\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_436\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_369\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_370:\n        /* \"#utility.yul\":1764:1788   */\n      tag_438\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_363\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2354   */\n    tag_34:\n        /* \"#utility.yul\":1978:1982   */\n      0x00\n        /* \"#utility.yul\":2016:2019   */\n      0x80\n        /* \"#utility.yul\":2005:2014   */\n      dup3\n        /* \"#utility.yul\":2001:2020   */\n      add\n        /* \"#utility.yul\":1993:2020   */\n      swap1\n      pop\n        /* \"#utility.yul\":2030:2101   */\n      tag_440\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2087:2096   */\n      dup4\n        /* \"#utility.yul\":2083:2100   */\n      add\n        /* \"#utility.yul\":2074:2080   */\n      dup8\n        /* \"#utility.yul\":2030:2101   */\n      tag_370\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2111:2183   */\n      tag_441\n        /* \"#utility.yul\":2179:2181   */\n      0x20\n        /* \"#utility.yul\":2168:2177   */\n      dup4\n        /* \"#utility.yul\":2164:2182   */\n      add\n        /* \"#utility.yul\":2155:2161   */\n      dup7\n        /* \"#utility.yul\":2111:2183   */\n      tag_370\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2193:2265   */\n      tag_442\n        /* \"#utility.yul\":2261:2263   */\n      0x40\n        /* \"#utility.yul\":2250:2259   */\n      dup4\n        /* \"#utility.yul\":2246:2264   */\n      add\n        /* \"#utility.yul\":2237:2243   */\n      dup6\n        /* \"#utility.yul\":2193:2265   */\n      tag_370\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2275:2347   */\n      tag_443\n        /* \"#utility.yul\":2343:2345   */\n      0x60\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2328:2346   */\n      add\n        /* \"#utility.yul\":2319:2325   */\n      dup5\n        /* \"#utility.yul\":2275:2347   */\n      tag_370\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1801:2354   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2689   */\n    tag_37:\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2468:2470   */\n      0x20\n        /* \"#utility.yul\":2456:2465   */\n      dup3\n        /* \"#utility.yul\":2447:2454   */\n      dup5\n        /* \"#utility.yul\":2443:2466   */\n      sub\n        /* \"#utility.yul\":2439:2471   */\n      slt\n        /* \"#utility.yul\":2436:2555   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2474:2553   */\n      tag_446\n      tag_361\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2436:2555   */\n    tag_445:\n        /* \"#utility.yul\":2594:2595   */\n      0x00\n        /* \"#utility.yul\":2619:2672   */\n      tag_447\n        /* \"#utility.yul\":2664:2671   */\n      dup5\n        /* \"#utility.yul\":2655:2661   */\n      dup3\n        /* \"#utility.yul\":2644:2653   */\n      dup6\n        /* \"#utility.yul\":2640:2662   */\n      add\n        /* \"#utility.yul\":2619:2672   */\n      tag_365\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2609:2672   */\n      swap2\n      pop\n        /* \"#utility.yul\":2565:2682   */\n      pop\n        /* \"#utility.yul\":2360:2689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2695:2813   */\n    tag_371:\n        /* \"#utility.yul\":2782:2806   */\n      tag_449\n        /* \"#utility.yul\":2800:2805   */\n      dup2\n        /* \"#utility.yul\":2782:2806   */\n      tag_367\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2777:2780   */\n      dup3\n        /* \"#utility.yul\":2770:2807   */\n      mstore\n        /* \"#utility.yul\":2695:2813   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2819:2909   */\n    tag_372:\n        /* \"#utility.yul\":2853:2860   */\n      0x00\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2889:2902   */\n      iszero\n        /* \"#utility.yul\":2882:2903   */\n      iszero\n        /* \"#utility.yul\":2871:2903   */\n      swap1\n      pop\n        /* \"#utility.yul\":2819:2909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3024   */\n    tag_373:\n        /* \"#utility.yul\":2996:3017   */\n      tag_452\n        /* \"#utility.yul\":3011:3016   */\n      dup2\n        /* \"#utility.yul\":2996:3017   */\n      tag_372\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2991:2994   */\n      dup3\n        /* \"#utility.yul\":2984:3018   */\n      mstore\n        /* \"#utility.yul\":2915:3024   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3030:3904   */\n    tag_43:\n        /* \"#utility.yul\":3285:3289   */\n      0x00\n        /* \"#utility.yul\":3323:3326   */\n      0xe0\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3308:3327   */\n      add\n        /* \"#utility.yul\":3300:3327   */\n      swap1\n      pop\n        /* \"#utility.yul\":3337:3408   */\n      tag_454\n        /* \"#utility.yul\":3405:3406   */\n      0x00\n        /* \"#utility.yul\":3394:3403   */\n      dup4\n        /* \"#utility.yul\":3390:3407   */\n      add\n        /* \"#utility.yul\":3381:3387   */\n      dup11\n        /* \"#utility.yul\":3337:3408   */\n      tag_371\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3418:3490   */\n      tag_455\n        /* \"#utility.yul\":3486:3488   */\n      0x20\n        /* \"#utility.yul\":3475:3484   */\n      dup4\n        /* \"#utility.yul\":3471:3489   */\n      add\n        /* \"#utility.yul\":3462:3468   */\n      dup10\n        /* \"#utility.yul\":3418:3490   */\n      tag_371\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3500:3572   */\n      tag_456\n        /* \"#utility.yul\":3568:3570   */\n      0x40\n        /* \"#utility.yul\":3557:3566   */\n      dup4\n        /* \"#utility.yul\":3553:3571   */\n      add\n        /* \"#utility.yul\":3544:3550   */\n      dup9\n        /* \"#utility.yul\":3500:3572   */\n      tag_370\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3582:3654   */\n      tag_457\n        /* \"#utility.yul\":3650:3652   */\n      0x60\n        /* \"#utility.yul\":3639:3648   */\n      dup4\n        /* \"#utility.yul\":3635:3653   */\n      add\n        /* \"#utility.yul\":3626:3632   */\n      dup8\n        /* \"#utility.yul\":3582:3654   */\n      tag_370\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3664:3737   */\n      tag_458\n        /* \"#utility.yul\":3732:3735   */\n      0x80\n        /* \"#utility.yul\":3721:3730   */\n      dup4\n        /* \"#utility.yul\":3717:3736   */\n      add\n        /* \"#utility.yul\":3708:3714   */\n      dup7\n        /* \"#utility.yul\":3664:3737   */\n      tag_370\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3747:3820   */\n      tag_459\n        /* \"#utility.yul\":3815:3818   */\n      0xa0\n        /* \"#utility.yul\":3804:3813   */\n      dup4\n        /* \"#utility.yul\":3800:3819   */\n      add\n        /* \"#utility.yul\":3791:3797   */\n      dup6\n        /* \"#utility.yul\":3747:3820   */\n      tag_370\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3830:3897   */\n      tag_460\n        /* \"#utility.yul\":3892:3895   */\n      0xc0\n        /* \"#utility.yul\":3881:3890   */\n      dup4\n        /* \"#utility.yul\":3877:3896   */\n      add\n        /* \"#utility.yul\":3868:3874   */\n      dup5\n        /* \"#utility.yul\":3830:3897   */\n      tag_373\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3030:3904   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3910:4132   */\n    tag_47:\n        /* \"#utility.yul\":4003:4007   */\n      0x00\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4030:4039   */\n      dup3\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"#utility.yul\":4018:4044   */\n      swap1\n      pop\n        /* \"#utility.yul\":4054:4125   */\n      tag_462\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4111:4120   */\n      dup4\n        /* \"#utility.yul\":4107:4124   */\n      add\n        /* \"#utility.yul\":4098:4104   */\n      dup5\n        /* \"#utility.yul\":4054:4125   */\n      tag_370\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3910:4132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4138:4612   */\n    tag_52:\n        /* \"#utility.yul\":4206:4212   */\n      0x00\n        /* \"#utility.yul\":4214:4220   */\n      0x00\n        /* \"#utility.yul\":4263:4265   */\n      0x40\n        /* \"#utility.yul\":4251:4260   */\n      dup4\n        /* \"#utility.yul\":4242:4249   */\n      dup6\n        /* \"#utility.yul\":4238:4261   */\n      sub\n        /* \"#utility.yul\":4234:4266   */\n      slt\n        /* \"#utility.yul\":4231:4350   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4269:4348   */\n      tag_465\n      tag_361\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4231:4350   */\n    tag_464:\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4414:4467   */\n      tag_466\n        /* \"#utility.yul\":4459:4466   */\n      dup6\n        /* \"#utility.yul\":4450:4456   */\n      dup3\n        /* \"#utility.yul\":4439:4448   */\n      dup7\n        /* \"#utility.yul\":4435:4457   */\n      add\n        /* \"#utility.yul\":4414:4467   */\n      tag_365\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4404:4467   */\n      swap3\n      pop\n        /* \"#utility.yul\":4360:4477   */\n      pop\n        /* \"#utility.yul\":4516:4518   */\n      0x20\n        /* \"#utility.yul\":4542:4595   */\n      tag_467\n        /* \"#utility.yul\":4587:4594   */\n      dup6\n        /* \"#utility.yul\":4578:4584   */\n      dup3\n        /* \"#utility.yul\":4567:4576   */\n      dup7\n        /* \"#utility.yul\":4563:4585   */\n      add\n        /* \"#utility.yul\":4542:4595   */\n      tag_365\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4532:4595   */\n      swap2\n      pop\n        /* \"#utility.yul\":4487:4605   */\n      pop\n        /* \"#utility.yul\":4138:4612   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4618:4828   */\n    tag_60:\n        /* \"#utility.yul\":4705:4709   */\n      0x00\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4732:4741   */\n      dup3\n        /* \"#utility.yul\":4728:4746   */\n      add\n        /* \"#utility.yul\":4720:4746   */\n      swap1\n      pop\n        /* \"#utility.yul\":4756:4821   */\n      tag_469\n        /* \"#utility.yul\":4818:4819   */\n      0x00\n        /* \"#utility.yul\":4807:4816   */\n      dup4\n        /* \"#utility.yul\":4803:4820   */\n      add\n        /* \"#utility.yul\":4794:4800   */\n      dup5\n        /* \"#utility.yul\":4756:4821   */\n      tag_373\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4618:4828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4834:5745   */\n    tag_73:\n        /* \"#utility.yul\":4929:4935   */\n      0x00\n        /* \"#utility.yul\":4937:4943   */\n      0x00\n        /* \"#utility.yul\":4945:4951   */\n      0x00\n        /* \"#utility.yul\":4953:4959   */\n      0x00\n        /* \"#utility.yul\":4961:4967   */\n      0x00\n        /* \"#utility.yul\":5010:5013   */\n      0xa0\n        /* \"#utility.yul\":4998:5007   */\n      dup7\n        /* \"#utility.yul\":4989:4996   */\n      dup9\n        /* \"#utility.yul\":4985:5008   */\n      sub\n        /* \"#utility.yul\":4981:5014   */\n      slt\n        /* \"#utility.yul\":4978:5098   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5017:5096   */\n      tag_472\n      tag_361\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4978:5098   */\n    tag_471:\n        /* \"#utility.yul\":5137:5138   */\n      0x00\n        /* \"#utility.yul\":5162:5215   */\n      tag_473\n        /* \"#utility.yul\":5207:5214   */\n      dup9\n        /* \"#utility.yul\":5198:5204   */\n      dup3\n        /* \"#utility.yul\":5187:5196   */\n      dup10\n        /* \"#utility.yul\":5183:5205   */\n      add\n        /* \"#utility.yul\":5162:5215   */\n      tag_369\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5152:5215   */\n      swap6\n      pop\n        /* \"#utility.yul\":5108:5225   */\n      pop\n        /* \"#utility.yul\":5264:5266   */\n      0x20\n        /* \"#utility.yul\":5290:5343   */\n      tag_474\n        /* \"#utility.yul\":5335:5342   */\n      dup9\n        /* \"#utility.yul\":5326:5332   */\n      dup3\n        /* \"#utility.yul\":5315:5324   */\n      dup10\n        /* \"#utility.yul\":5311:5333   */\n      add\n        /* \"#utility.yul\":5290:5343   */\n      tag_369\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5280:5343   */\n      swap5\n      pop\n        /* \"#utility.yul\":5235:5353   */\n      pop\n        /* \"#utility.yul\":5392:5394   */\n      0x40\n        /* \"#utility.yul\":5418:5471   */\n      tag_475\n        /* \"#utility.yul\":5463:5470   */\n      dup9\n        /* \"#utility.yul\":5454:5460   */\n      dup3\n        /* \"#utility.yul\":5443:5452   */\n      dup10\n        /* \"#utility.yul\":5439:5461   */\n      add\n        /* \"#utility.yul\":5418:5471   */\n      tag_365\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5408:5471   */\n      swap4\n      pop\n        /* \"#utility.yul\":5363:5481   */\n      pop\n        /* \"#utility.yul\":5520:5522   */\n      0x60\n        /* \"#utility.yul\":5546:5599   */\n      tag_476\n        /* \"#utility.yul\":5591:5598   */\n      dup9\n        /* \"#utility.yul\":5582:5588   */\n      dup3\n        /* \"#utility.yul\":5571:5580   */\n      dup10\n        /* \"#utility.yul\":5567:5589   */\n      add\n        /* \"#utility.yul\":5546:5599   */\n      tag_365\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5536:5599   */\n      swap3\n      pop\n        /* \"#utility.yul\":5491:5609   */\n      pop\n        /* \"#utility.yul\":5648:5651   */\n      0x80\n        /* \"#utility.yul\":5675:5728   */\n      tag_477\n        /* \"#utility.yul\":5720:5727   */\n      dup9\n        /* \"#utility.yul\":5711:5717   */\n      dup3\n        /* \"#utility.yul\":5700:5709   */\n      dup10\n        /* \"#utility.yul\":5696:5718   */\n      add\n        /* \"#utility.yul\":5675:5728   */\n      tag_365\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5665:5728   */\n      swap2\n      pop\n        /* \"#utility.yul\":5619:5738   */\n      pop\n        /* \"#utility.yul\":4834:5745   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:5973   */\n    tag_82:\n        /* \"#utility.yul\":5844:5848   */\n      0x00\n        /* \"#utility.yul\":5882:5884   */\n      0x20\n        /* \"#utility.yul\":5871:5880   */\n      dup3\n        /* \"#utility.yul\":5867:5885   */\n      add\n        /* \"#utility.yul\":5859:5885   */\n      swap1\n      pop\n        /* \"#utility.yul\":5895:5966   */\n      tag_479\n        /* \"#utility.yul\":5963:5964   */\n      0x00\n        /* \"#utility.yul\":5952:5961   */\n      dup4\n        /* \"#utility.yul\":5948:5965   */\n      add\n        /* \"#utility.yul\":5939:5945   */\n      dup5\n        /* \"#utility.yul\":5895:5966   */\n      tag_371\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5751:5973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6039   */\n    tag_374:\n        /* \"#utility.yul\":6007:6010   */\n      0x00\n        /* \"#utility.yul\":6028:6033   */\n      dup2\n        /* \"#utility.yul\":6021:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6187   */\n    tag_375:\n        /* \"#utility.yul\":6095:6104   */\n      0x00\n        /* \"#utility.yul\":6128:6181   */\n      tag_482\n        /* \"#utility.yul\":6146:6180   */\n      tag_483\n        /* \"#utility.yul\":6155:6179   */\n      tag_484\n        /* \"#utility.yul\":6173:6178   */\n      dup5\n        /* \"#utility.yul\":6155:6179   */\n      tag_366\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6146:6180   */\n      tag_374\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6128:6181   */\n      tag_366\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6115:6181   */\n      swap1\n      pop\n        /* \"#utility.yul\":6045:6187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6193:6319   */\n    tag_376:\n        /* \"#utility.yul\":6243:6252   */\n      0x00\n        /* \"#utility.yul\":6276:6313   */\n      tag_486\n        /* \"#utility.yul\":6307:6312   */\n      dup3\n        /* \"#utility.yul\":6276:6313   */\n      tag_375\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6263:6313   */\n      swap1\n      pop\n        /* \"#utility.yul\":6193:6319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6325:6465   */\n    tag_377:\n        /* \"#utility.yul\":6389:6398   */\n      0x00\n        /* \"#utility.yul\":6422:6459   */\n      tag_488\n        /* \"#utility.yul\":6453:6458   */\n      dup3\n        /* \"#utility.yul\":6422:6459   */\n      tag_376\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6409:6459   */\n      swap1\n      pop\n        /* \"#utility.yul\":6325:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6630   */\n    tag_378:\n        /* \"#utility.yul\":6572:6623   */\n      tag_490\n        /* \"#utility.yul\":6617:6622   */\n      dup2\n        /* \"#utility.yul\":6572:6623   */\n      tag_377\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6567:6570   */\n      dup3\n        /* \"#utility.yul\":6560:6624   */\n      mstore\n        /* \"#utility.yul\":6471:6630   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6636:7788   */\n    tag_94:\n        /* \"#utility.yul\":6975:6979   */\n      0x00\n        /* \"#utility.yul\":7013:7016   */\n      0x0120\n        /* \"#utility.yul\":7002:7011   */\n      dup3\n        /* \"#utility.yul\":6998:7017   */\n      add\n        /* \"#utility.yul\":6990:7017   */\n      swap1\n      pop\n        /* \"#utility.yul\":7027:7112   */\n      tag_492\n        /* \"#utility.yul\":7109:7110   */\n      0x00\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7111   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup13\n        /* \"#utility.yul\":7027:7112   */\n      tag_378\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7122:7208   */\n      tag_493\n        /* \"#utility.yul\":7204:7206   */\n      0x20\n        /* \"#utility.yul\":7193:7202   */\n      dup4\n        /* \"#utility.yul\":7189:7207   */\n      add\n        /* \"#utility.yul\":7180:7186   */\n      dup12\n        /* \"#utility.yul\":7122:7208   */\n      tag_378\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7218:7290   */\n      tag_494\n        /* \"#utility.yul\":7286:7288   */\n      0x40\n        /* \"#utility.yul\":7275:7284   */\n      dup4\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7262:7268   */\n      dup11\n        /* \"#utility.yul\":7218:7290   */\n      tag_370\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7300:7372   */\n      tag_495\n        /* \"#utility.yul\":7368:7370   */\n      0x60\n        /* \"#utility.yul\":7357:7366   */\n      dup4\n        /* \"#utility.yul\":7353:7371   */\n      add\n        /* \"#utility.yul\":7344:7350   */\n      dup10\n        /* \"#utility.yul\":7300:7372   */\n      tag_370\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7382:7455   */\n      tag_496\n        /* \"#utility.yul\":7450:7453   */\n      0x80\n        /* \"#utility.yul\":7439:7448   */\n      dup4\n        /* \"#utility.yul\":7435:7454   */\n      add\n        /* \"#utility.yul\":7426:7432   */\n      dup9\n        /* \"#utility.yul\":7382:7455   */\n      tag_370\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7465:7538   */\n      tag_497\n        /* \"#utility.yul\":7533:7536   */\n      0xa0\n        /* \"#utility.yul\":7522:7531   */\n      dup4\n        /* \"#utility.yul\":7518:7537   */\n      add\n        /* \"#utility.yul\":7509:7515   */\n      dup8\n        /* \"#utility.yul\":7465:7538   */\n      tag_370\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7548:7621   */\n      tag_498\n        /* \"#utility.yul\":7616:7619   */\n      0xc0\n        /* \"#utility.yul\":7605:7614   */\n      dup4\n        /* \"#utility.yul\":7601:7620   */\n      add\n        /* \"#utility.yul\":7592:7598   */\n      dup7\n        /* \"#utility.yul\":7548:7621   */\n      tag_370\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7631:7704   */\n      tag_499\n        /* \"#utility.yul\":7699:7702   */\n      0xe0\n        /* \"#utility.yul\":7688:7697   */\n      dup4\n        /* \"#utility.yul\":7684:7703   */\n      add\n        /* \"#utility.yul\":7675:7681   */\n      dup6\n        /* \"#utility.yul\":7631:7704   */\n      tag_370\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7714:7781   */\n      tag_500\n        /* \"#utility.yul\":7776:7779   */\n      0x0100\n        /* \"#utility.yul\":7765:7774   */\n      dup4\n        /* \"#utility.yul\":7761:7780   */\n      add\n        /* \"#utility.yul\":7752:7758   */\n      dup5\n        /* \"#utility.yul\":7714:7781   */\n      tag_373\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6636:7788   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7794:7910   */\n    tag_379:\n        /* \"#utility.yul\":7864:7885   */\n      tag_502\n        /* \"#utility.yul\":7879:7884   */\n      dup2\n        /* \"#utility.yul\":7864:7885   */\n      tag_372\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7857:7862   */\n      dup2\n        /* \"#utility.yul\":7854:7886   */\n      eq\n        /* \"#utility.yul\":7844:7904   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":7900:7901   */\n      0x00\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7890:7902   */\n      revert\n        /* \"#utility.yul\":7844:7904   */\n    tag_503:\n        /* \"#utility.yul\":7794:7910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8049   */\n    tag_380:\n        /* \"#utility.yul\":7959:7964   */\n      0x00\n        /* \"#utility.yul\":7997:8003   */\n      dup2\n        /* \"#utility.yul\":7984:8004   */\n      calldataload\n        /* \"#utility.yul\":7975:8004   */\n      swap1\n      pop\n        /* \"#utility.yul\":8013:8043   */\n      tag_505\n        /* \"#utility.yul\":8037:8042   */\n      dup2\n        /* \"#utility.yul\":8013:8043   */\n      tag_379\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":7916:8049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8523   */\n    tag_100:\n        /* \"#utility.yul\":8120:8126   */\n      0x00\n        /* \"#utility.yul\":8128:8134   */\n      0x00\n        /* \"#utility.yul\":8177:8179   */\n      0x40\n        /* \"#utility.yul\":8165:8174   */\n      dup4\n        /* \"#utility.yul\":8156:8163   */\n      dup6\n        /* \"#utility.yul\":8152:8175   */\n      sub\n        /* \"#utility.yul\":8148:8180   */\n      slt\n        /* \"#utility.yul\":8145:8264   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8183:8262   */\n      tag_508\n      tag_361\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8145:8264   */\n    tag_507:\n        /* \"#utility.yul\":8303:8304   */\n      0x00\n        /* \"#utility.yul\":8328:8381   */\n      tag_509\n        /* \"#utility.yul\":8373:8380   */\n      dup6\n        /* \"#utility.yul\":8364:8370   */\n      dup3\n        /* \"#utility.yul\":8353:8362   */\n      dup7\n        /* \"#utility.yul\":8349:8371   */\n      add\n        /* \"#utility.yul\":8328:8381   */\n      tag_365\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8318:8381   */\n      swap3\n      pop\n        /* \"#utility.yul\":8274:8391   */\n      pop\n        /* \"#utility.yul\":8430:8432   */\n      0x20\n        /* \"#utility.yul\":8456:8506   */\n      tag_510\n        /* \"#utility.yul\":8498:8505   */\n      dup6\n        /* \"#utility.yul\":8489:8495   */\n      dup3\n        /* \"#utility.yul\":8478:8487   */\n      dup7\n        /* \"#utility.yul\":8474:8496   */\n      add\n        /* \"#utility.yul\":8456:8506   */\n      tag_380\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8446:8506   */\n      swap2\n      pop\n        /* \"#utility.yul\":8401:8516   */\n      pop\n        /* \"#utility.yul\":8055:8523   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8529:8858   */\n    tag_108:\n        /* \"#utility.yul\":8588:8594   */\n      0x00\n        /* \"#utility.yul\":8637:8639   */\n      0x20\n        /* \"#utility.yul\":8625:8634   */\n      dup3\n        /* \"#utility.yul\":8616:8623   */\n      dup5\n        /* \"#utility.yul\":8612:8635   */\n      sub\n        /* \"#utility.yul\":8608:8640   */\n      slt\n        /* \"#utility.yul\":8605:8724   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8643:8722   */\n      tag_513\n      tag_361\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8605:8724   */\n    tag_512:\n        /* \"#utility.yul\":8763:8764   */\n      0x00\n        /* \"#utility.yul\":8788:8841   */\n      tag_514\n        /* \"#utility.yul\":8833:8840   */\n      dup5\n        /* \"#utility.yul\":8824:8830   */\n      dup3\n        /* \"#utility.yul\":8813:8822   */\n      dup6\n        /* \"#utility.yul\":8809:8831   */\n      add\n        /* \"#utility.yul\":8788:8841   */\n      tag_369\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8778:8841   */\n      swap2\n      pop\n        /* \"#utility.yul\":8734:8851   */\n      pop\n        /* \"#utility.yul\":8529:8858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:9033   */\n    tag_381:\n        /* \"#utility.yul\":8948:8959   */\n      0x00\n        /* \"#utility.yul\":8982:8988   */\n      dup3\n        /* \"#utility.yul\":8977:8980   */\n      dup3\n        /* \"#utility.yul\":8970:8989   */\n      mstore\n        /* \"#utility.yul\":9022:9026   */\n      0x20\n        /* \"#utility.yul\":9017:9020   */\n      dup3\n        /* \"#utility.yul\":9013:9027   */\n      add\n        /* \"#utility.yul\":8998:9027   */\n      swap1\n      pop\n        /* \"#utility.yul\":8864:9033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9039:9208   */\n    tag_382:\n        /* \"#utility.yul\":9179:9200   */\n      0x506f6f6c20646f6573206e6f7420657869737400000000000000000000000000\n        /* \"#utility.yul\":9175:9176   */\n      0x00\n        /* \"#utility.yul\":9167:9173   */\n      dup3\n        /* \"#utility.yul\":9163:9177   */\n      add\n        /* \"#utility.yul\":9156:9201   */\n      mstore\n        /* \"#utility.yul\":9039:9208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9580   */\n    tag_383:\n        /* \"#utility.yul\":9356:9359   */\n      0x00\n        /* \"#utility.yul\":9377:9444   */\n      tag_518\n        /* \"#utility.yul\":9441:9443   */\n      0x13\n        /* \"#utility.yul\":9436:9439   */\n      dup4\n        /* \"#utility.yul\":9377:9444   */\n      tag_381\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9370:9444   */\n      swap2\n      pop\n        /* \"#utility.yul\":9453:9546   */\n      tag_519\n        /* \"#utility.yul\":9542:9545   */\n      dup3\n        /* \"#utility.yul\":9453:9546   */\n      tag_382\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9571:9573   */\n      0x20\n        /* \"#utility.yul\":9566:9569   */\n      dup3\n        /* \"#utility.yul\":9562:9574   */\n      add\n        /* \"#utility.yul\":9555:9574   */\n      swap1\n      pop\n        /* \"#utility.yul\":9214:9580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9586:10005   */\n    tag_116:\n        /* \"#utility.yul\":9752:9756   */\n      0x00\n        /* \"#utility.yul\":9790:9792   */\n      0x20\n        /* \"#utility.yul\":9779:9788   */\n      dup3\n        /* \"#utility.yul\":9775:9793   */\n      add\n        /* \"#utility.yul\":9767:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9839:9848   */\n      dup2\n        /* \"#utility.yul\":9833:9837   */\n      dup2\n        /* \"#utility.yul\":9829:9849   */\n      sub\n        /* \"#utility.yul\":9825:9826   */\n      0x00\n        /* \"#utility.yul\":9814:9823   */\n      dup4\n        /* \"#utility.yul\":9810:9827   */\n      add\n        /* \"#utility.yul\":9803:9850   */\n      mstore\n        /* \"#utility.yul\":9867:9998   */\n      tag_521\n        /* \"#utility.yul\":9993:9997   */\n      dup2\n        /* \"#utility.yul\":9867:9998   */\n      tag_383\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":9859:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9586:10005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10011:10191   */\n    tag_384:\n        /* \"#utility.yul\":10059:10136   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10056:10057   */\n      0x00\n        /* \"#utility.yul\":10049:10137   */\n      mstore\n        /* \"#utility.yul\":10156:10160   */\n      0x11\n        /* \"#utility.yul\":10153:10154   */\n      0x04\n        /* \"#utility.yul\":10146:10161   */\n      mstore\n        /* \"#utility.yul\":10180:10184   */\n      0x24\n        /* \"#utility.yul\":10177:10178   */\n      0x00\n        /* \"#utility.yul\":10170:10185   */\n      revert\n        /* \"#utility.yul\":10197:10388   */\n    tag_120:\n        /* \"#utility.yul\":10237:10240   */\n      0x00\n        /* \"#utility.yul\":10256:10276   */\n      tag_524\n        /* \"#utility.yul\":10274:10275   */\n      dup3\n        /* \"#utility.yul\":10256:10276   */\n      tag_363\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10251:10276   */\n      swap2\n      pop\n        /* \"#utility.yul\":10290:10310   */\n      tag_525\n        /* \"#utility.yul\":10308:10309   */\n      dup4\n        /* \"#utility.yul\":10290:10310   */\n      tag_363\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10285:10310   */\n      swap3\n      pop\n        /* \"#utility.yul\":10333:10334   */\n      dup3\n        /* \"#utility.yul\":10330:10331   */\n      dup3\n        /* \"#utility.yul\":10326:10335   */\n      add\n        /* \"#utility.yul\":10319:10335   */\n      swap1\n      pop\n        /* \"#utility.yul\":10354:10357   */\n      dup1\n        /* \"#utility.yul\":10351:10352   */\n      dup3\n        /* \"#utility.yul\":10348:10358   */\n      gt\n        /* \"#utility.yul\":10345:10381   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":10361:10379   */\n      tag_527\n      tag_384\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10345:10381   */\n    tag_526:\n        /* \"#utility.yul\":10197:10388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10394:10561   */\n    tag_385:\n        /* \"#utility.yul\":10534:10553   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":10530:10531   */\n      0x00\n        /* \"#utility.yul\":10522:10528   */\n      dup3\n        /* \"#utility.yul\":10518:10532   */\n      add\n        /* \"#utility.yul\":10511:10554   */\n      mstore\n        /* \"#utility.yul\":10394:10561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10567:10933   */\n    tag_386:\n        /* \"#utility.yul\":10709:10712   */\n      0x00\n        /* \"#utility.yul\":10730:10797   */\n      tag_530\n        /* \"#utility.yul\":10794:10796   */\n      0x11\n        /* \"#utility.yul\":10789:10792   */\n      dup4\n        /* \"#utility.yul\":10730:10797   */\n      tag_381\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10723:10797   */\n      swap2\n      pop\n        /* \"#utility.yul\":10806:10899   */\n      tag_531\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10806:10899   */\n      tag_385\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10919:10922   */\n      dup3\n        /* \"#utility.yul\":10915:10927   */\n      add\n        /* \"#utility.yul\":10908:10927   */\n      swap1\n      pop\n        /* \"#utility.yul\":10567:10933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10939:11358   */\n    tag_160:\n        /* \"#utility.yul\":11105:11109   */\n      0x00\n        /* \"#utility.yul\":11143:11145   */\n      0x20\n        /* \"#utility.yul\":11132:11141   */\n      dup3\n        /* \"#utility.yul\":11128:11146   */\n      add\n        /* \"#utility.yul\":11120:11146   */\n      swap1\n      pop\n        /* \"#utility.yul\":11192:11201   */\n      dup2\n        /* \"#utility.yul\":11186:11190   */\n      dup2\n        /* \"#utility.yul\":11182:11202   */\n      sub\n        /* \"#utility.yul\":11178:11179   */\n      0x00\n        /* \"#utility.yul\":11167:11176   */\n      dup4\n        /* \"#utility.yul\":11163:11180   */\n      add\n        /* \"#utility.yul\":11156:11203   */\n      mstore\n        /* \"#utility.yul\":11220:11351   */\n      tag_533\n        /* \"#utility.yul\":11346:11350   */\n      dup2\n        /* \"#utility.yul\":11220:11351   */\n      tag_386\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11212:11351   */\n      swap1\n      pop\n        /* \"#utility.yul\":10939:11358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11364:11534   */\n    tag_387:\n        /* \"#utility.yul\":11504:11526   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":11500:11501   */\n      0x00\n        /* \"#utility.yul\":11492:11498   */\n      dup3\n        /* \"#utility.yul\":11488:11502   */\n      add\n        /* \"#utility.yul\":11481:11527   */\n      mstore\n        /* \"#utility.yul\":11364:11534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11540:11906   */\n    tag_388:\n        /* \"#utility.yul\":11682:11685   */\n      0x00\n        /* \"#utility.yul\":11703:11770   */\n      tag_536\n        /* \"#utility.yul\":11767:11769   */\n      0x14\n        /* \"#utility.yul\":11762:11765   */\n      dup4\n        /* \"#utility.yul\":11703:11770   */\n      tag_381\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11696:11770   */\n      swap2\n      pop\n        /* \"#utility.yul\":11779:11872   */\n      tag_537\n        /* \"#utility.yul\":11868:11871   */\n      dup3\n        /* \"#utility.yul\":11779:11872   */\n      tag_387\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11897:11899   */\n      0x20\n        /* \"#utility.yul\":11892:11895   */\n      dup3\n        /* \"#utility.yul\":11888:11900   */\n      add\n        /* \"#utility.yul\":11881:11900   */\n      swap1\n      pop\n        /* \"#utility.yul\":11540:11906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11912:12331   */\n    tag_163:\n        /* \"#utility.yul\":12078:12082   */\n      0x00\n        /* \"#utility.yul\":12116:12118   */\n      0x20\n        /* \"#utility.yul\":12105:12114   */\n      dup3\n        /* \"#utility.yul\":12101:12119   */\n      add\n        /* \"#utility.yul\":12093:12119   */\n      swap1\n      pop\n        /* \"#utility.yul\":12165:12174   */\n      dup2\n        /* \"#utility.yul\":12159:12163   */\n      dup2\n        /* \"#utility.yul\":12155:12175   */\n      sub\n        /* \"#utility.yul\":12151:12152   */\n      0x00\n        /* \"#utility.yul\":12140:12149   */\n      dup4\n        /* \"#utility.yul\":12136:12153   */\n      add\n        /* \"#utility.yul\":12129:12176   */\n      mstore\n        /* \"#utility.yul\":12193:12324   */\n      tag_539\n        /* \"#utility.yul\":12319:12323   */\n      dup2\n        /* \"#utility.yul\":12193:12324   */\n      tag_388\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12185:12324   */\n      swap1\n      pop\n        /* \"#utility.yul\":11912:12331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12337:12510   */\n    tag_389:\n        /* \"#utility.yul\":12477:12502   */\n      0x546f6b656e7320617265207374696c6c206c6f636b6564000000000000000000\n        /* \"#utility.yul\":12473:12474   */\n      0x00\n        /* \"#utility.yul\":12465:12471   */\n      dup3\n        /* \"#utility.yul\":12461:12475   */\n      add\n        /* \"#utility.yul\":12454:12503   */\n      mstore\n        /* \"#utility.yul\":12337:12510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12516:12882   */\n    tag_390:\n        /* \"#utility.yul\":12658:12661   */\n      0x00\n        /* \"#utility.yul\":12679:12746   */\n      tag_542\n        /* \"#utility.yul\":12743:12745   */\n      0x17\n        /* \"#utility.yul\":12738:12741   */\n      dup4\n        /* \"#utility.yul\":12679:12746   */\n      tag_381\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12672:12746   */\n      swap2\n      pop\n        /* \"#utility.yul\":12755:12848   */\n      tag_543\n        /* \"#utility.yul\":12844:12847   */\n      dup3\n        /* \"#utility.yul\":12755:12848   */\n      tag_389\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12873:12875   */\n      0x20\n        /* \"#utility.yul\":12868:12871   */\n      dup3\n        /* \"#utility.yul\":12864:12876   */\n      add\n        /* \"#utility.yul\":12857:12876   */\n      swap1\n      pop\n        /* \"#utility.yul\":12516:12882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13307   */\n    tag_167:\n        /* \"#utility.yul\":13054:13058   */\n      0x00\n        /* \"#utility.yul\":13092:13094   */\n      0x20\n        /* \"#utility.yul\":13081:13090   */\n      dup3\n        /* \"#utility.yul\":13077:13095   */\n      add\n        /* \"#utility.yul\":13069:13095   */\n      swap1\n      pop\n        /* \"#utility.yul\":13141:13150   */\n      dup2\n        /* \"#utility.yul\":13135:13139   */\n      dup2\n        /* \"#utility.yul\":13131:13151   */\n      sub\n        /* \"#utility.yul\":13127:13128   */\n      0x00\n        /* \"#utility.yul\":13116:13125   */\n      dup4\n        /* \"#utility.yul\":13112:13129   */\n      add\n        /* \"#utility.yul\":13105:13152   */\n      mstore\n        /* \"#utility.yul\":13169:13300   */\n      tag_545\n        /* \"#utility.yul\":13295:13299   */\n      dup2\n        /* \"#utility.yul\":13169:13300   */\n      tag_390\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13161:13300   */\n      swap1\n      pop\n        /* \"#utility.yul\":12888:13307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13313:13507   */\n    tag_169:\n        /* \"#utility.yul\":13353:13357   */\n      0x00\n        /* \"#utility.yul\":13373:13393   */\n      tag_547\n        /* \"#utility.yul\":13391:13392   */\n      dup3\n        /* \"#utility.yul\":13373:13393   */\n      tag_363\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13368:13393   */\n      swap2\n      pop\n        /* \"#utility.yul\":13407:13427   */\n      tag_548\n        /* \"#utility.yul\":13425:13426   */\n      dup4\n        /* \"#utility.yul\":13407:13427   */\n      tag_363\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13402:13427   */\n      swap3\n      pop\n        /* \"#utility.yul\":13451:13452   */\n      dup3\n        /* \"#utility.yul\":13448:13449   */\n      dup3\n        /* \"#utility.yul\":13444:13453   */\n      sub\n        /* \"#utility.yul\":13436:13453   */\n      swap1\n      pop\n        /* \"#utility.yul\":13475:13476   */\n      dup2\n        /* \"#utility.yul\":13469:13473   */\n      dup2\n        /* \"#utility.yul\":13466:13477   */\n      gt\n        /* \"#utility.yul\":13463:13500   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":13480:13498   */\n      tag_550\n      tag_384\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13463:13500   */\n    tag_549:\n        /* \"#utility.yul\":13313:13507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13513:13684   */\n    tag_391:\n        /* \"#utility.yul\":13653:13676   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":13649:13650   */\n      0x00\n        /* \"#utility.yul\":13641:13647   */\n      dup3\n        /* \"#utility.yul\":13637:13651   */\n      add\n        /* \"#utility.yul\":13630:13677   */\n      mstore\n        /* \"#utility.yul\":13513:13684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13690:14056   */\n    tag_392:\n        /* \"#utility.yul\":13832:13835   */\n      0x00\n        /* \"#utility.yul\":13853:13920   */\n      tag_553\n        /* \"#utility.yul\":13917:13919   */\n      0x15\n        /* \"#utility.yul\":13912:13915   */\n      dup4\n        /* \"#utility.yul\":13853:13920   */\n      tag_381\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13846:13920   */\n      swap2\n      pop\n        /* \"#utility.yul\":13929:14022   */\n      tag_554\n        /* \"#utility.yul\":14018:14021   */\n      dup3\n        /* \"#utility.yul\":13929:14022   */\n      tag_391\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14047:14049   */\n      0x20\n        /* \"#utility.yul\":14042:14045   */\n      dup3\n        /* \"#utility.yul\":14038:14050   */\n      add\n        /* \"#utility.yul\":14031:14050   */\n      swap1\n      pop\n        /* \"#utility.yul\":13690:14056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14062:14481   */\n    tag_182:\n        /* \"#utility.yul\":14228:14232   */\n      0x00\n        /* \"#utility.yul\":14266:14268   */\n      0x20\n        /* \"#utility.yul\":14255:14264   */\n      dup3\n        /* \"#utility.yul\":14251:14269   */\n      add\n        /* \"#utility.yul\":14243:14269   */\n      swap1\n      pop\n        /* \"#utility.yul\":14315:14324   */\n      dup2\n        /* \"#utility.yul\":14309:14313   */\n      dup2\n        /* \"#utility.yul\":14305:14325   */\n      sub\n        /* \"#utility.yul\":14301:14302   */\n      0x00\n        /* \"#utility.yul\":14290:14299   */\n      dup4\n        /* \"#utility.yul\":14286:14303   */\n      add\n        /* \"#utility.yul\":14279:14326   */\n      mstore\n        /* \"#utility.yul\":14343:14474   */\n      tag_556\n        /* \"#utility.yul\":14469:14473   */\n      dup2\n        /* \"#utility.yul\":14343:14474   */\n      tag_392\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14335:14474   */\n      swap1\n      pop\n        /* \"#utility.yul\":14062:14481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14487:14655   */\n    tag_393:\n        /* \"#utility.yul\":14627:14647   */\n      0x506f6f6c206973206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":14623:14624   */\n      0x00\n        /* \"#utility.yul\":14615:14621   */\n      dup3\n        /* \"#utility.yul\":14611:14625   */\n      add\n        /* \"#utility.yul\":14604:14648   */\n      mstore\n        /* \"#utility.yul\":14487:14655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14661:15027   */\n    tag_394:\n        /* \"#utility.yul\":14803:14806   */\n      0x00\n        /* \"#utility.yul\":14824:14891   */\n      tag_559\n        /* \"#utility.yul\":14888:14890   */\n      0x12\n        /* \"#utility.yul\":14883:14886   */\n      dup4\n        /* \"#utility.yul\":14824:14891   */\n      tag_381\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14817:14891   */\n      swap2\n      pop\n        /* \"#utility.yul\":14900:14993   */\n      tag_560\n        /* \"#utility.yul\":14989:14992   */\n      dup3\n        /* \"#utility.yul\":14900:14993   */\n      tag_393\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15018:15020   */\n      0x20\n        /* \"#utility.yul\":15013:15016   */\n      dup3\n        /* \"#utility.yul\":15009:15021   */\n      add\n        /* \"#utility.yul\":15002:15021   */\n      swap1\n      pop\n        /* \"#utility.yul\":14661:15027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15033:15452   */\n    tag_204:\n        /* \"#utility.yul\":15199:15203   */\n      0x00\n        /* \"#utility.yul\":15237:15239   */\n      0x20\n        /* \"#utility.yul\":15226:15235   */\n      dup3\n        /* \"#utility.yul\":15222:15240   */\n      add\n        /* \"#utility.yul\":15214:15240   */\n      swap1\n      pop\n        /* \"#utility.yul\":15286:15295   */\n      dup2\n        /* \"#utility.yul\":15280:15284   */\n      dup2\n        /* \"#utility.yul\":15276:15296   */\n      sub\n        /* \"#utility.yul\":15272:15273   */\n      0x00\n        /* \"#utility.yul\":15261:15270   */\n      dup4\n        /* \"#utility.yul\":15257:15274   */\n      add\n        /* \"#utility.yul\":15250:15297   */\n      mstore\n        /* \"#utility.yul\":15314:15445   */\n      tag_562\n        /* \"#utility.yul\":15440:15444   */\n      dup2\n        /* \"#utility.yul\":15314:15445   */\n      tag_394\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15306:15445   */\n      swap1\n      pop\n        /* \"#utility.yul\":15033:15452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15458:15622   */\n    tag_395:\n        /* \"#utility.yul\":15598:15614   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":15594:15595   */\n      0x00\n        /* \"#utility.yul\":15586:15592   */\n      dup3\n        /* \"#utility.yul\":15582:15596   */\n      add\n        /* \"#utility.yul\":15575:15615   */\n      mstore\n        /* \"#utility.yul\":15458:15622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15628:15994   */\n    tag_396:\n        /* \"#utility.yul\":15770:15773   */\n      0x00\n        /* \"#utility.yul\":15791:15858   */\n      tag_565\n        /* \"#utility.yul\":15855:15857   */\n      0x0e\n        /* \"#utility.yul\":15850:15853   */\n      dup4\n        /* \"#utility.yul\":15791:15858   */\n      tag_381\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15784:15858   */\n      swap2\n      pop\n        /* \"#utility.yul\":15867:15960   */\n      tag_566\n        /* \"#utility.yul\":15956:15959   */\n      dup3\n        /* \"#utility.yul\":15867:15960   */\n      tag_395\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15985:15987   */\n      0x20\n        /* \"#utility.yul\":15980:15983   */\n      dup3\n        /* \"#utility.yul\":15976:15988   */\n      add\n        /* \"#utility.yul\":15969:15988   */\n      swap1\n      pop\n        /* \"#utility.yul\":15628:15994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16000:16419   */\n    tag_212:\n        /* \"#utility.yul\":16166:16170   */\n      0x00\n        /* \"#utility.yul\":16204:16206   */\n      0x20\n        /* \"#utility.yul\":16193:16202   */\n      dup3\n        /* \"#utility.yul\":16189:16207   */\n      add\n        /* \"#utility.yul\":16181:16207   */\n      swap1\n      pop\n        /* \"#utility.yul\":16253:16262   */\n      dup2\n        /* \"#utility.yul\":16247:16251   */\n      dup2\n        /* \"#utility.yul\":16243:16263   */\n      sub\n        /* \"#utility.yul\":16239:16240   */\n      0x00\n        /* \"#utility.yul\":16228:16237   */\n      dup4\n        /* \"#utility.yul\":16224:16241   */\n      add\n        /* \"#utility.yul\":16217:16264   */\n      mstore\n        /* \"#utility.yul\":16281:16412   */\n      tag_568\n        /* \"#utility.yul\":16407:16411   */\n      dup2\n        /* \"#utility.yul\":16281:16412   */\n      tag_396\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16273:16412   */\n      swap1\n      pop\n        /* \"#utility.yul\":16000:16419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16425:16601   */\n    tag_397:\n        /* \"#utility.yul\":16565:16593   */\n      0x416d6f756e742062656c6f77206d696e696d756d207374616b65000000000000\n        /* \"#utility.yul\":16561:16562   */\n      0x00\n        /* \"#utility.yul\":16553:16559   */\n      dup3\n        /* \"#utility.yul\":16549:16563   */\n      add\n        /* \"#utility.yul\":16542:16594   */\n      mstore\n        /* \"#utility.yul\":16425:16601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16607:16973   */\n    tag_398:\n        /* \"#utility.yul\":16749:16752   */\n      0x00\n        /* \"#utility.yul\":16770:16837   */\n      tag_571\n        /* \"#utility.yul\":16834:16836   */\n      0x1a\n        /* \"#utility.yul\":16829:16832   */\n      dup4\n        /* \"#utility.yul\":16770:16837   */\n      tag_381\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16763:16837   */\n      swap2\n      pop\n        /* \"#utility.yul\":16846:16939   */\n      tag_572\n        /* \"#utility.yul\":16935:16938   */\n      dup3\n        /* \"#utility.yul\":16846:16939   */\n      tag_397\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16964:16966   */\n      0x20\n        /* \"#utility.yul\":16959:16962   */\n      dup3\n        /* \"#utility.yul\":16955:16967   */\n      add\n        /* \"#utility.yul\":16948:16967   */\n      swap1\n      pop\n        /* \"#utility.yul\":16607:16973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16979:17398   */\n    tag_215:\n        /* \"#utility.yul\":17145:17149   */\n      0x00\n        /* \"#utility.yul\":17183:17185   */\n      0x20\n        /* \"#utility.yul\":17172:17181   */\n      dup3\n        /* \"#utility.yul\":17168:17186   */\n      add\n        /* \"#utility.yul\":17160:17186   */\n      swap1\n      pop\n        /* \"#utility.yul\":17232:17241   */\n      dup2\n        /* \"#utility.yul\":17226:17230   */\n      dup2\n        /* \"#utility.yul\":17222:17242   */\n      sub\n        /* \"#utility.yul\":17218:17219   */\n      0x00\n        /* \"#utility.yul\":17207:17216   */\n      dup4\n        /* \"#utility.yul\":17203:17220   */\n      add\n        /* \"#utility.yul\":17196:17243   */\n      mstore\n        /* \"#utility.yul\":17260:17391   */\n      tag_574\n        /* \"#utility.yul\":17386:17390   */\n      dup2\n        /* \"#utility.yul\":17260:17391   */\n      tag_398\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17252:17391   */\n      swap1\n      pop\n        /* \"#utility.yul\":16979:17398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17404:17575   */\n    tag_399:\n        /* \"#utility.yul\":17544:17567   */\n      0x496e76616c6964207374616b696e6720746f6b656e0000000000000000000000\n        /* \"#utility.yul\":17540:17541   */\n      0x00\n        /* \"#utility.yul\":17532:17538   */\n      dup3\n        /* \"#utility.yul\":17528:17542   */\n      add\n        /* \"#utility.yul\":17521:17568   */\n      mstore\n        /* \"#utility.yul\":17404:17575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17581:17947   */\n    tag_400:\n        /* \"#utility.yul\":17723:17726   */\n      0x00\n        /* \"#utility.yul\":17744:17811   */\n      tag_577\n        /* \"#utility.yul\":17808:17810   */\n      0x15\n        /* \"#utility.yul\":17803:17806   */\n      dup4\n        /* \"#utility.yul\":17744:17811   */\n      tag_381\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17737:17811   */\n      swap2\n      pop\n        /* \"#utility.yul\":17820:17913   */\n      tag_578\n        /* \"#utility.yul\":17909:17912   */\n      dup3\n        /* \"#utility.yul\":17820:17913   */\n      tag_399\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17938:17940   */\n      0x20\n        /* \"#utility.yul\":17933:17936   */\n      dup3\n        /* \"#utility.yul\":17929:17941   */\n      add\n        /* \"#utility.yul\":17922:17941   */\n      swap1\n      pop\n        /* \"#utility.yul\":17581:17947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17953:18372   */\n    tag_235:\n        /* \"#utility.yul\":18119:18123   */\n      0x00\n        /* \"#utility.yul\":18157:18159   */\n      0x20\n        /* \"#utility.yul\":18146:18155   */\n      dup3\n        /* \"#utility.yul\":18142:18160   */\n      add\n        /* \"#utility.yul\":18134:18160   */\n      swap1\n      pop\n        /* \"#utility.yul\":18206:18215   */\n      dup2\n        /* \"#utility.yul\":18200:18204   */\n      dup2\n        /* \"#utility.yul\":18196:18216   */\n      sub\n        /* \"#utility.yul\":18192:18193   */\n      0x00\n        /* \"#utility.yul\":18181:18190   */\n      dup4\n        /* \"#utility.yul\":18177:18194   */\n      add\n        /* \"#utility.yul\":18170:18217   */\n      mstore\n        /* \"#utility.yul\":18234:18365   */\n      tag_580\n        /* \"#utility.yul\":18360:18364   */\n      dup2\n        /* \"#utility.yul\":18234:18365   */\n      tag_400\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18226:18365   */\n      swap1\n      pop\n        /* \"#utility.yul\":17953:18372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18378:18548   */\n    tag_401:\n        /* \"#utility.yul\":18518:18540   */\n      0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n        /* \"#utility.yul\":18514:18515   */\n      0x00\n        /* \"#utility.yul\":18506:18512   */\n      dup3\n        /* \"#utility.yul\":18502:18516   */\n      add\n        /* \"#utility.yul\":18495:18541   */\n      mstore\n        /* \"#utility.yul\":18378:18548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18554:18920   */\n    tag_402:\n        /* \"#utility.yul\":18696:18699   */\n      0x00\n        /* \"#utility.yul\":18717:18784   */\n      tag_583\n        /* \"#utility.yul\":18781:18783   */\n      0x14\n        /* \"#utility.yul\":18776:18779   */\n      dup4\n        /* \"#utility.yul\":18717:18784   */\n      tag_381\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18710:18784   */\n      swap2\n      pop\n        /* \"#utility.yul\":18793:18886   */\n      tag_584\n        /* \"#utility.yul\":18882:18885   */\n      dup3\n        /* \"#utility.yul\":18793:18886   */\n      tag_401\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18911:18913   */\n      0x20\n        /* \"#utility.yul\":18906:18909   */\n      dup3\n        /* \"#utility.yul\":18902:18914   */\n      add\n        /* \"#utility.yul\":18895:18914   */\n      swap1\n      pop\n        /* \"#utility.yul\":18554:18920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18926:19345   */\n    tag_238:\n        /* \"#utility.yul\":19092:19096   */\n      0x00\n        /* \"#utility.yul\":19130:19132   */\n      0x20\n        /* \"#utility.yul\":19119:19128   */\n      dup3\n        /* \"#utility.yul\":19115:19133   */\n      add\n        /* \"#utility.yul\":19107:19133   */\n      swap1\n      pop\n        /* \"#utility.yul\":19179:19188   */\n      dup2\n        /* \"#utility.yul\":19173:19177   */\n      dup2\n        /* \"#utility.yul\":19169:19189   */\n      sub\n        /* \"#utility.yul\":19165:19166   */\n      0x00\n        /* \"#utility.yul\":19154:19163   */\n      dup4\n        /* \"#utility.yul\":19150:19167   */\n      add\n        /* \"#utility.yul\":19143:19190   */\n      mstore\n        /* \"#utility.yul\":19207:19338   */\n      tag_586\n        /* \"#utility.yul\":19333:19337   */\n      dup2\n        /* \"#utility.yul\":19207:19338   */\n      tag_402\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":19199:19338   */\n      swap1\n      pop\n        /* \"#utility.yul\":18926:19345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19351:19572   */\n    tag_403:\n        /* \"#utility.yul\":19491:19525   */\n      0x5265776172642072617465206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":19487:19488   */\n      0x00\n        /* \"#utility.yul\":19479:19485   */\n      dup3\n        /* \"#utility.yul\":19475:19489   */\n      add\n        /* \"#utility.yul\":19468:19526   */\n      mstore\n        /* \"#utility.yul\":19560:19564   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19555:19557   */\n      0x20\n        /* \"#utility.yul\":19547:19553   */\n      dup3\n        /* \"#utility.yul\":19543:19558   */\n      add\n        /* \"#utility.yul\":19536:19565   */\n      mstore\n        /* \"#utility.yul\":19351:19572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19578:19944   */\n    tag_404:\n        /* \"#utility.yul\":19720:19723   */\n      0x00\n        /* \"#utility.yul\":19741:19808   */\n      tag_589\n        /* \"#utility.yul\":19805:19807   */\n      0x22\n        /* \"#utility.yul\":19800:19803   */\n      dup4\n        /* \"#utility.yul\":19741:19808   */\n      tag_381\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19734:19808   */\n      swap2\n      pop\n        /* \"#utility.yul\":19817:19910   */\n      tag_590\n        /* \"#utility.yul\":19906:19909   */\n      dup3\n        /* \"#utility.yul\":19817:19910   */\n      tag_403\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19935:19937   */\n      0x40\n        /* \"#utility.yul\":19930:19933   */\n      dup3\n        /* \"#utility.yul\":19926:19938   */\n      add\n        /* \"#utility.yul\":19919:19938   */\n      swap1\n      pop\n        /* \"#utility.yul\":19578:19944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19950:20369   */\n    tag_241:\n        /* \"#utility.yul\":20116:20120   */\n      0x00\n        /* \"#utility.yul\":20154:20156   */\n      0x20\n        /* \"#utility.yul\":20143:20152   */\n      dup3\n        /* \"#utility.yul\":20139:20157   */\n      add\n        /* \"#utility.yul\":20131:20157   */\n      swap1\n      pop\n        /* \"#utility.yul\":20203:20212   */\n      dup2\n        /* \"#utility.yul\":20197:20201   */\n      dup2\n        /* \"#utility.yul\":20193:20213   */\n      sub\n        /* \"#utility.yul\":20189:20190   */\n      0x00\n        /* \"#utility.yul\":20178:20187   */\n      dup4\n        /* \"#utility.yul\":20174:20191   */\n      add\n        /* \"#utility.yul\":20167:20214   */\n      mstore\n        /* \"#utility.yul\":20231:20362   */\n      tag_592\n        /* \"#utility.yul\":20357:20361   */\n      dup2\n        /* \"#utility.yul\":20231:20362   */\n      tag_404\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":20223:20362   */\n      swap1\n      pop\n        /* \"#utility.yul\":19950:20369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20375:21039   */\n    tag_243:\n        /* \"#utility.yul\":20580:20584   */\n      0x00\n        /* \"#utility.yul\":20618:20621   */\n      0xa0\n        /* \"#utility.yul\":20607:20616   */\n      dup3\n        /* \"#utility.yul\":20603:20622   */\n      add\n        /* \"#utility.yul\":20595:20622   */\n      swap1\n      pop\n        /* \"#utility.yul\":20632:20703   */\n      tag_594\n        /* \"#utility.yul\":20700:20701   */\n      0x00\n        /* \"#utility.yul\":20689:20698   */\n      dup4\n        /* \"#utility.yul\":20685:20702   */\n      add\n        /* \"#utility.yul\":20676:20682   */\n      dup9\n        /* \"#utility.yul\":20632:20703   */\n      tag_371\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20713:20785   */\n      tag_595\n        /* \"#utility.yul\":20781:20783   */\n      0x20\n        /* \"#utility.yul\":20770:20779   */\n      dup4\n        /* \"#utility.yul\":20766:20784   */\n      add\n        /* \"#utility.yul\":20757:20763   */\n      dup8\n        /* \"#utility.yul\":20713:20785   */\n      tag_371\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":20795:20867   */\n      tag_596\n        /* \"#utility.yul\":20863:20865   */\n      0x40\n        /* \"#utility.yul\":20852:20861   */\n      dup4\n        /* \"#utility.yul\":20848:20866   */\n      add\n        /* \"#utility.yul\":20839:20845   */\n      dup7\n        /* \"#utility.yul\":20795:20867   */\n      tag_370\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20877:20949   */\n      tag_597\n        /* \"#utility.yul\":20945:20947   */\n      0x60\n        /* \"#utility.yul\":20934:20943   */\n      dup4\n        /* \"#utility.yul\":20930:20948   */\n      add\n        /* \"#utility.yul\":20921:20927   */\n      dup6\n        /* \"#utility.yul\":20877:20949   */\n      tag_370\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20959:21032   */\n      tag_598\n        /* \"#utility.yul\":21027:21030   */\n      0x80\n        /* \"#utility.yul\":21016:21025   */\n      dup4\n        /* \"#utility.yul\":21012:21031   */\n      add\n        /* \"#utility.yul\":21003:21009   */\n      dup5\n        /* \"#utility.yul\":20959:21032   */\n      tag_370\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":20375:21039   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21045:21278   */\n    tag_245:\n        /* \"#utility.yul\":21084:21087   */\n      0x00\n        /* \"#utility.yul\":21107:21131   */\n      tag_600\n        /* \"#utility.yul\":21125:21130   */\n      dup3\n        /* \"#utility.yul\":21107:21131   */\n      tag_363\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21098:21131   */\n      swap2\n      pop\n        /* \"#utility.yul\":21153:21219   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21146:21151   */\n      dup3\n        /* \"#utility.yul\":21143:21220   */\n      sub\n        /* \"#utility.yul\":21140:21243   */\n      tag_601\n      jumpi\n        /* \"#utility.yul\":21223:21241   */\n      tag_602\n      tag_384\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":21140:21243   */\n    tag_601:\n        /* \"#utility.yul\":21270:21271   */\n      0x01\n        /* \"#utility.yul\":21263:21268   */\n      dup3\n        /* \"#utility.yul\":21259:21272   */\n      add\n        /* \"#utility.yul\":21252:21272   */\n      swap1\n      pop\n        /* \"#utility.yul\":21045:21278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21284:21694   */\n    tag_250:\n        /* \"#utility.yul\":21324:21331   */\n      0x00\n        /* \"#utility.yul\":21347:21367   */\n      tag_604\n        /* \"#utility.yul\":21365:21366   */\n      dup3\n        /* \"#utility.yul\":21347:21367   */\n      tag_363\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":21342:21367   */\n      swap2\n      pop\n        /* \"#utility.yul\":21381:21401   */\n      tag_605\n        /* \"#utility.yul\":21399:21400   */\n      dup4\n        /* \"#utility.yul\":21381:21401   */\n      tag_363\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":21376:21401   */\n      swap3\n      pop\n        /* \"#utility.yul\":21436:21437   */\n      dup3\n        /* \"#utility.yul\":21433:21434   */\n      dup3\n        /* \"#utility.yul\":21429:21438   */\n      mul\n        /* \"#utility.yul\":21458:21488   */\n      tag_606\n        /* \"#utility.yul\":21476:21487   */\n      dup2\n        /* \"#utility.yul\":21458:21488   */\n      tag_363\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":21447:21488   */\n      swap2\n      pop\n        /* \"#utility.yul\":21637:21638   */\n      dup3\n        /* \"#utility.yul\":21628:21635   */\n      dup3\n        /* \"#utility.yul\":21624:21639   */\n      div\n        /* \"#utility.yul\":21621:21622   */\n      dup5\n        /* \"#utility.yul\":21618:21640   */\n      eq\n        /* \"#utility.yul\":21598:21599   */\n      dup4\n        /* \"#utility.yul\":21591:21600   */\n      iszero\n        /* \"#utility.yul\":21571:21654   */\n      or\n        /* \"#utility.yul\":21548:21687   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":21667:21685   */\n      tag_608\n      tag_384\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21548:21687   */\n    tag_607:\n        /* \"#utility.yul\":21332:21694   */\n      pop\n        /* \"#utility.yul\":21284:21694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21700:21880   */\n    tag_405:\n        /* \"#utility.yul\":21748:21825   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21745:21746   */\n      0x00\n        /* \"#utility.yul\":21738:21826   */\n      mstore\n        /* \"#utility.yul\":21845:21849   */\n      0x12\n        /* \"#utility.yul\":21842:21843   */\n      0x04\n        /* \"#utility.yul\":21835:21850   */\n      mstore\n        /* \"#utility.yul\":21869:21873   */\n      0x24\n        /* \"#utility.yul\":21866:21867   */\n      0x00\n        /* \"#utility.yul\":21859:21874   */\n      revert\n        /* \"#utility.yul\":21886:22071   */\n    tag_253:\n        /* \"#utility.yul\":21926:21927   */\n      0x00\n        /* \"#utility.yul\":21943:21963   */\n      tag_611\n        /* \"#utility.yul\":21961:21962   */\n      dup3\n        /* \"#utility.yul\":21943:21963   */\n      tag_363\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21938:21963   */\n      swap2\n      pop\n        /* \"#utility.yul\":21977:21997   */\n      tag_612\n        /* \"#utility.yul\":21995:21996   */\n      dup4\n        /* \"#utility.yul\":21977:21997   */\n      tag_363\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21972:21997   */\n      swap3\n      pop\n        /* \"#utility.yul\":22016:22017   */\n      dup3\n        /* \"#utility.yul\":22006:22041   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":22021:22039   */\n      tag_614\n      tag_405\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":22006:22041   */\n    tag_613:\n        /* \"#utility.yul\":22063:22064   */\n      dup3\n        /* \"#utility.yul\":22060:22061   */\n      dup3\n        /* \"#utility.yul\":22056:22065   */\n      div\n        /* \"#utility.yul\":22051:22065   */\n      swap1\n      pop\n        /* \"#utility.yul\":21886:22071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22077:22259   */\n    tag_406:\n        /* \"#utility.yul\":22217:22251   */\n      0x43616e6e6f7420636f6d706f756e6420646966666572656e7420746f6b656e73\n        /* \"#utility.yul\":22213:22214   */\n      0x00\n        /* \"#utility.yul\":22205:22211   */\n      dup3\n        /* \"#utility.yul\":22201:22215   */\n      add\n        /* \"#utility.yul\":22194:22252   */\n      mstore\n        /* \"#utility.yul\":22077:22259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22265:22631   */\n    tag_407:\n        /* \"#utility.yul\":22407:22410   */\n      0x00\n        /* \"#utility.yul\":22428:22495   */\n      tag_617\n        /* \"#utility.yul\":22492:22494   */\n      0x20\n        /* \"#utility.yul\":22487:22490   */\n      dup4\n        /* \"#utility.yul\":22428:22495   */\n      tag_381\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":22421:22495   */\n      swap2\n      pop\n        /* \"#utility.yul\":22504:22597   */\n      tag_618\n        /* \"#utility.yul\":22593:22596   */\n      dup3\n        /* \"#utility.yul\":22504:22597   */\n      tag_406\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":22622:22624   */\n      0x20\n        /* \"#utility.yul\":22617:22620   */\n      dup3\n        /* \"#utility.yul\":22613:22625   */\n      add\n        /* \"#utility.yul\":22606:22625   */\n      swap1\n      pop\n        /* \"#utility.yul\":22265:22631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22637:23056   */\n    tag_271:\n        /* \"#utility.yul\":22803:22807   */\n      0x00\n        /* \"#utility.yul\":22841:22843   */\n      0x20\n        /* \"#utility.yul\":22830:22839   */\n      dup3\n        /* \"#utility.yul\":22826:22844   */\n      add\n        /* \"#utility.yul\":22818:22844   */\n      swap1\n      pop\n        /* \"#utility.yul\":22890:22899   */\n      dup2\n        /* \"#utility.yul\":22884:22888   */\n      dup2\n        /* \"#utility.yul\":22880:22900   */\n      sub\n        /* \"#utility.yul\":22876:22877   */\n      0x00\n        /* \"#utility.yul\":22865:22874   */\n      dup4\n        /* \"#utility.yul\":22861:22878   */\n      add\n        /* \"#utility.yul\":22854:22901   */\n      mstore\n        /* \"#utility.yul\":22918:23049   */\n      tag_620\n        /* \"#utility.yul\":23044:23048   */\n      dup2\n        /* \"#utility.yul\":22918:23049   */\n      tag_407\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":22910:23049   */\n      swap1\n      pop\n        /* \"#utility.yul\":22637:23056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23062:23243   */\n    tag_408:\n        /* \"#utility.yul\":23202:23235   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":23198:23199   */\n      0x00\n        /* \"#utility.yul\":23190:23196   */\n      dup3\n        /* \"#utility.yul\":23186:23200   */\n      add\n        /* \"#utility.yul\":23179:23236   */\n      mstore\n        /* \"#utility.yul\":23062:23243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23249:23615   */\n    tag_409:\n        /* \"#utility.yul\":23391:23394   */\n      0x00\n        /* \"#utility.yul\":23412:23479   */\n      tag_623\n        /* \"#utility.yul\":23476:23478   */\n      0x1f\n        /* \"#utility.yul\":23471:23474   */\n      dup4\n        /* \"#utility.yul\":23412:23479   */\n      tag_381\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":23405:23479   */\n      swap2\n      pop\n        /* \"#utility.yul\":23488:23581   */\n      tag_624\n        /* \"#utility.yul\":23577:23580   */\n      dup3\n        /* \"#utility.yul\":23488:23581   */\n      tag_408\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":23606:23608   */\n      0x20\n        /* \"#utility.yul\":23601:23604   */\n      dup3\n        /* \"#utility.yul\":23597:23609   */\n      add\n        /* \"#utility.yul\":23590:23609   */\n      swap1\n      pop\n        /* \"#utility.yul\":23249:23615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23621:24040   */\n    tag_313:\n        /* \"#utility.yul\":23787:23791   */\n      0x00\n        /* \"#utility.yul\":23825:23827   */\n      0x20\n        /* \"#utility.yul\":23814:23823   */\n      dup3\n        /* \"#utility.yul\":23810:23828   */\n      add\n        /* \"#utility.yul\":23802:23828   */\n      swap1\n      pop\n        /* \"#utility.yul\":23874:23883   */\n      dup2\n        /* \"#utility.yul\":23868:23872   */\n      dup2\n        /* \"#utility.yul\":23864:23884   */\n      sub\n        /* \"#utility.yul\":23860:23861   */\n      0x00\n        /* \"#utility.yul\":23849:23858   */\n      dup4\n        /* \"#utility.yul\":23845:23862   */\n      add\n        /* \"#utility.yul\":23838:23885   */\n      mstore\n        /* \"#utility.yul\":23902:24033   */\n      tag_626\n        /* \"#utility.yul\":24028:24032   */\n      dup2\n        /* \"#utility.yul\":23902:24033   */\n      tag_409\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":23894:24033   */\n      swap1\n      pop\n        /* \"#utility.yul\":23621:24040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24046:24378   */\n    tag_317:\n        /* \"#utility.yul\":24167:24171   */\n      0x00\n        /* \"#utility.yul\":24205:24207   */\n      0x40\n        /* \"#utility.yul\":24194:24203   */\n      dup3\n        /* \"#utility.yul\":24190:24208   */\n      add\n        /* \"#utility.yul\":24182:24208   */\n      swap1\n      pop\n        /* \"#utility.yul\":24218:24289   */\n      tag_628\n        /* \"#utility.yul\":24286:24287   */\n      0x00\n        /* \"#utility.yul\":24275:24284   */\n      dup4\n        /* \"#utility.yul\":24271:24288   */\n      add\n        /* \"#utility.yul\":24262:24268   */\n      dup6\n        /* \"#utility.yul\":24218:24289   */\n      tag_371\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":24299:24371   */\n      tag_629\n        /* \"#utility.yul\":24367:24369   */\n      0x20\n        /* \"#utility.yul\":24356:24365   */\n      dup4\n        /* \"#utility.yul\":24352:24370   */\n      add\n        /* \"#utility.yul\":24343:24349   */\n      dup5\n        /* \"#utility.yul\":24299:24371   */\n      tag_370\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":24046:24378   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24384:24550   */\n    tag_410:\n        /* \"#utility.yul\":24524:24542   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":24520:24521   */\n      0x00\n        /* \"#utility.yul\":24512:24518   */\n      dup3\n        /* \"#utility.yul\":24508:24522   */\n      add\n        /* \"#utility.yul\":24501:24543   */\n      mstore\n        /* \"#utility.yul\":24384:24550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24556:24922   */\n    tag_411:\n        /* \"#utility.yul\":24698:24701   */\n      0x00\n        /* \"#utility.yul\":24719:24786   */\n      tag_632\n        /* \"#utility.yul\":24783:24785   */\n      0x10\n        /* \"#utility.yul\":24778:24781   */\n      dup4\n        /* \"#utility.yul\":24719:24786   */\n      tag_381\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":24712:24786   */\n      swap2\n      pop\n        /* \"#utility.yul\":24795:24888   */\n      tag_633\n        /* \"#utility.yul\":24884:24887   */\n      dup3\n        /* \"#utility.yul\":24795:24888   */\n      tag_410\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":24913:24915   */\n      0x20\n        /* \"#utility.yul\":24908:24911   */\n      dup3\n        /* \"#utility.yul\":24904:24916   */\n      add\n        /* \"#utility.yul\":24897:24916   */\n      swap1\n      pop\n        /* \"#utility.yul\":24556:24922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24928:25347   */\n    tag_338:\n        /* \"#utility.yul\":25094:25098   */\n      0x00\n        /* \"#utility.yul\":25132:25134   */\n      0x20\n        /* \"#utility.yul\":25121:25130   */\n      dup3\n        /* \"#utility.yul\":25117:25135   */\n      add\n        /* \"#utility.yul\":25109:25135   */\n      swap1\n      pop\n        /* \"#utility.yul\":25181:25190   */\n      dup2\n        /* \"#utility.yul\":25175:25179   */\n      dup2\n        /* \"#utility.yul\":25171:25191   */\n      sub\n        /* \"#utility.yul\":25167:25168   */\n      0x00\n        /* \"#utility.yul\":25156:25165   */\n      dup4\n        /* \"#utility.yul\":25152:25169   */\n      add\n        /* \"#utility.yul\":25145:25192   */\n      mstore\n        /* \"#utility.yul\":25209:25340   */\n      tag_635\n        /* \"#utility.yul\":25335:25339   */\n      dup2\n        /* \"#utility.yul\":25209:25340   */\n      tag_411\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":25201:25340   */\n      swap1\n      pop\n        /* \"#utility.yul\":24928:25347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25353:25795   */\n    tag_342:\n        /* \"#utility.yul\":25502:25506   */\n      0x00\n        /* \"#utility.yul\":25540:25542   */\n      0x60\n        /* \"#utility.yul\":25529:25538   */\n      dup3\n        /* \"#utility.yul\":25525:25543   */\n      add\n        /* \"#utility.yul\":25517:25543   */\n      swap1\n      pop\n        /* \"#utility.yul\":25553:25624   */\n      tag_637\n        /* \"#utility.yul\":25621:25622   */\n      0x00\n        /* \"#utility.yul\":25610:25619   */\n      dup4\n        /* \"#utility.yul\":25606:25623   */\n      add\n        /* \"#utility.yul\":25597:25603   */\n      dup7\n        /* \"#utility.yul\":25553:25624   */\n      tag_371\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":25634:25706   */\n      tag_638\n        /* \"#utility.yul\":25702:25704   */\n      0x20\n        /* \"#utility.yul\":25691:25700   */\n      dup4\n        /* \"#utility.yul\":25687:25705   */\n      add\n        /* \"#utility.yul\":25678:25684   */\n      dup6\n        /* \"#utility.yul\":25634:25706   */\n      tag_371\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":25716:25788   */\n      tag_639\n        /* \"#utility.yul\":25784:25786   */\n      0x40\n        /* \"#utility.yul\":25773:25782   */\n      dup4\n        /* \"#utility.yul\":25769:25787   */\n      add\n        /* \"#utility.yul\":25760:25766   */\n      dup5\n        /* \"#utility.yul\":25716:25788   */\n      tag_370\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":25353:25795   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25801:25971   */\n    tag_412:\n        /* \"#utility.yul\":25941:25963   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":25937:25938   */\n      0x00\n        /* \"#utility.yul\":25929:25935   */\n      dup3\n        /* \"#utility.yul\":25925:25939   */\n      add\n        /* \"#utility.yul\":25918:25964   */\n      mstore\n        /* \"#utility.yul\":25801:25971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25977:26343   */\n    tag_413:\n        /* \"#utility.yul\":26119:26122   */\n      0x00\n        /* \"#utility.yul\":26140:26207   */\n      tag_642\n        /* \"#utility.yul\":26204:26206   */\n      0x14\n        /* \"#utility.yul\":26199:26202   */\n      dup4\n        /* \"#utility.yul\":26140:26207   */\n      tag_381\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":26133:26207   */\n      swap2\n      pop\n        /* \"#utility.yul\":26216:26309   */\n      tag_643\n        /* \"#utility.yul\":26305:26308   */\n      dup3\n        /* \"#utility.yul\":26216:26309   */\n      tag_412\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":26334:26336   */\n      0x20\n        /* \"#utility.yul\":26329:26332   */\n      dup3\n        /* \"#utility.yul\":26325:26337   */\n      add\n        /* \"#utility.yul\":26318:26337   */\n      swap1\n      pop\n        /* \"#utility.yul\":25977:26343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26349:26768   */\n    tag_359:\n        /* \"#utility.yul\":26515:26519   */\n      0x00\n        /* \"#utility.yul\":26553:26555   */\n      0x20\n        /* \"#utility.yul\":26542:26551   */\n      dup3\n        /* \"#utility.yul\":26538:26556   */\n      add\n        /* \"#utility.yul\":26530:26556   */\n      swap1\n      pop\n        /* \"#utility.yul\":26602:26611   */\n      dup2\n        /* \"#utility.yul\":26596:26600   */\n      dup2\n        /* \"#utility.yul\":26592:26612   */\n      sub\n        /* \"#utility.yul\":26588:26589   */\n      0x00\n        /* \"#utility.yul\":26577:26586   */\n      dup4\n        /* \"#utility.yul\":26573:26590   */\n      add\n        /* \"#utility.yul\":26566:26613   */\n      mstore\n        /* \"#utility.yul\":26630:26761   */\n      tag_645\n        /* \"#utility.yul\":26756:26760   */\n      dup2\n        /* \"#utility.yul\":26630:26761   */\n      tag_413\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":26622:26761   */\n      swap1\n      pop\n        /* \"#utility.yul\":26349:26768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048955b86420344f9d49ca0ace674696553f984e6b7be37c8ea7a1db289cbf68164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 183,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:11",
										"nodeType": "YulBlock",
										"src": "0:590:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:11",
													"nodeType": "YulBlock",
													"src": "52:81:11",
													"statements": [
														{
															"nativeSrc": "62:65:11",
															"nodeType": "YulAssignment",
															"src": "62:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:11",
																		"nodeType": "YulLiteral",
																		"src": "84:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:11"
																},
																"nativeSrc": "73:54:11",
																"nodeType": "YulFunctionCall",
																"src": "73:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:126:11"
											},
											{
												"body": {
													"nativeSrc": "184:51:11",
													"nodeType": "YulBlock",
													"src": "184:51:11",
													"statements": [
														{
															"nativeSrc": "194:35:11",
															"nodeType": "YulAssignment",
															"src": "194:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:11"
																},
																"nativeSrc": "205:24:11",
																"nodeType": "YulFunctionCall",
																"src": "205:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:11",
														"nodeType": "YulTypedName",
														"src": "166:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:11",
														"nodeType": "YulTypedName",
														"src": "176:7:11",
														"type": ""
													}
												],
												"src": "139:96:11"
											},
											{
												"body": {
													"nativeSrc": "306:53:11",
													"nodeType": "YulBlock",
													"src": "306:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:11"
																		},
																		"nativeSrc": "328:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:11"
																},
																"nativeSrc": "316:37:11",
																"nodeType": "YulFunctionCall",
																"src": "316:37:11"
															},
															"nativeSrc": "316:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:11",
														"nodeType": "YulTypedName",
														"src": "294:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:11",
														"nodeType": "YulTypedName",
														"src": "301:3:11",
														"type": ""
													}
												],
												"src": "241:118:11"
											},
											{
												"body": {
													"nativeSrc": "463:124:11",
													"nodeType": "YulBlock",
													"src": "463:124:11",
													"statements": [
														{
															"nativeSrc": "473:26:11",
															"nodeType": "YulAssignment",
															"src": "473:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:11",
																		"nodeType": "YulLiteral",
																		"src": "496:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:11"
																},
																"nativeSrc": "481:18:11",
																"nodeType": "YulFunctionCall",
																"src": "481:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:11",
																				"nodeType": "YulLiteral",
																				"src": "577:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:11"
																		},
																		"nativeSrc": "562:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:11"
																},
																"nativeSrc": "509:71:11",
																"nodeType": "YulFunctionCall",
																"src": "509:71:11"
															},
															"nativeSrc": "509:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:11",
														"nodeType": "YulTypedName",
														"src": "435:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:11",
														"nodeType": "YulTypedName",
														"src": "447:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:11",
														"nodeType": "YulTypedName",
														"src": "458:4:11",
														"type": ""
													}
												],
												"src": "365:222:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b503360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610088575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007f91906101b9565b60405180910390fd5b610097816100b760201b60201c565b505f600160146101000a81548160ff0219169083151502179055506101d2565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a38261017a565b9050919050565b6101b381610199565b82525050565b5f6020820190506101cc5f8301846101aa565b92915050565b612edd806101df5f395ff3fe608060405234801561000f575f5ffd5b506004361061014b575f3560e01c80638456cb59116100c1578063ac4afa381161007a578063ac4afa3814610357578063b32534cf1461038f578063bbcaf3fe146103ab578063e39c08fc146103c7578063f2fde38b146103f7578063f525cb68146104135761014b565b80638456cb591461029457806385ac165a1461029e578063874c120b146102ba5780638da5cb5b146102ea57806393f1a40b14610308578063aa5f7e261461033b5761014b565b8063441a3e7011610113578063441a3e70146101fc5780635312ea8e146102185780635c975abb14610234578063715018a6146102525780637b0472f01461025c5780637f8661a1146102785761014b565b80631069f3b51461014f5780631c4b774b146101825780632f380b351461019e5780633d6aa5e1146101d45780633f4ba83a146101f2575b5f5ffd5b6101696004803603810190610164919061226a565b610431565b60405161017994939291906122b7565b60405180910390f35b61019c600480360381019061019791906122fa565b610513565b005b6101b860048036038101906101b391906122fa565b61075a565b6040516101cb979695949392919061234e565b60405180910390f35b6101dc610841565b6040516101e991906123bb565b60405180910390f35b6101fa61084d565b005b610216600480360381019061021191906123d4565b61085f565b005b610232600480360381019061022d91906122fa565b610ba1565b005b61023c610d7b565b6040516102499190612412565b60405180910390f35b61025a610d91565b005b610276600480360381019061027191906123d4565b610da4565b005b610292600480360381019061028d91906122fa565b611106565b005b61029c61116f565b005b6102b860048036038101906102b3919061242b565b611181565b005b6102d460048036038101906102cf91906122fa565b611472565b6040516102e191906123bb565b60405180910390f35b6102f26114f8565b6040516102ff91906124a2565b60405180910390f35b610322600480360381019061031d919061226a565b611520565b60405161033294939291906122b7565b60405180910390f35b610355600480360381019061035091906122fa565b611557565b005b610371600480360381019061036c91906122fa565b611910565b60405161038699989796959493929190612516565b60405180910390f35b6103a960048036038101906103a491906123d4565b6119a4565b005b6103c560048036038101906103c091906125cb565b611b5f565b005b6103e160048036038101906103dc919061226a565b611c14565b6040516103ee91906123bb565b60405180910390f35b610411600480360381019061040c9190612609565b611cb5565b005b61041b611d39565b60405161042891906123bb565b60405180910390f35b5f5f5f5f85600454811061047a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104719061268e565b60405180910390fd5b5f60035f8981526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f01546104d78989611c14565b826003015460025f8c81526020019081526020015f2060070154846003015461050091906126d9565b9550955095509550505092959194509250565b61051b611d3f565b806004548110610560576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105579061268e565b60405180910390fd5b81335f60025f8481526020019081526020015f20905061057f83611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610633575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905061061c8484611c14565b816002018190555081600401548160010181905550505b5f60035f8781526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015490505f811115610749575f82600201819055506106f9338260025f8b81526020019081526020015f206001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b863373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f518360405161074091906123bb565b60405180910390a35b505050505050610757611e0b565b50565b5f5f5f5f5f5f5f8760045481106107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061268e565b60405180910390fd5b5f60025f8b81526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020154836005015484600601548560070154866008015f9054906101000a900460ff1698509850985098509850985098505050919395979092949650565b670de0b6b3a764000081565b610855611e14565b61085d611e9b565b565b610867611d3f565b8160045481106108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061268e565b60405180910390fd5b82335f60025f8481526020019081526020015f2090506108cb83611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461097f575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109688484611c14565b816002018190555081600401548160010181905550505b5f85116109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890612756565b60405180910390fd5b5f60025f8881526020019081526020015f2090505f60035f8981526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905086815f01541015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a61906127be565b60405180910390fd5b81600701548160030154610a7e91906126d9565b421015610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790612826565b60405180910390fd5b86826005015f828254610ad39190612844565b9250508190555086815f015f828254610aec9190612844565b92505081905550610b403388845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b873373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc689604051610b8791906123bb565b60405180910390a3505050505050610b9d611e0b565b5050565b610ba9611d3f565b806004548110610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be59061268e565b60405180910390fd5b5f60035f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f8111610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d906128c1565b60405180910390fd5b8060025f8681526020019081526020015f206005015f828254610ca99190612844565b925050819055505f825f01819055505f8260020181905550610d1e338260025f8881526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc683604051610d6591906123bb565b60405180910390a3505050610d78611e0b565b50565b5f600160149054906101000a900460ff16905090565b610d99611e14565b610da25f611efd565b565b610dac611d3f565b610db4611fc0565b816004548110610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df09061268e565b60405180910390fd5b8260025f8281526020019081526020015f206008015f9054906101000a900460ff16610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5190612929565b60405180910390fd5b83335f60025f8481526020019081526020015f209050610e7983611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610f2d575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610f168484611c14565b816002018190555081600401548160010181905550505b5f8611610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6690612991565b60405180910390fd5b5f60025f8981526020019081526020015f2090505f60035f8a81526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090508160060154881015611019576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611010906129f9565b60405180910390fd5b87826005015f82825461102c91906126d9565b9250508190555087815f015f82825461104591906126d9565b925050819055504281600301819055506110a433308a855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661200a909392919063ffffffff16565b883373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908a6040516110eb91906123bb565b60405180910390a350505050505050611102611e0b565b5050565b5f60035f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905061116282825f015461085f565b61116b82610513565b5050565b611177611e14565b61117f61208c565b565b611189611e14565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ee90612a61565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125c90612ac9565b60405180910390fd5b5f83116112a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129e90612b57565b60405180910390fd5b6040518061012001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281526020015f81526020015f81526020018381526020018281526020016001151581525060025f60045481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015f6101000a81548160ff0219169083151502179055509050506004547fb203c0a4a9d84ddde23dba31a828c25525b2e0b5fe6a0e356d983aed95961ca1868686868660405161144c959493929190612b75565b60405180910390a260045f81548092919061146690612bc6565b91905055505050505050565b5f5f60025f8481526020019081526020015f2090505f81600501540361149f5780600401549150506114f3565b8060050154670de0b6b3a764000082600201548360030154426114c29190612844565b6114cc9190612c0d565b6114d69190612c0d565b6114e09190612c7b565b81600401546114ef91906126d9565b9150505b919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154908060020154908060030154905084565b61155f611d3f565b8060045481106115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b9061268e565b60405180910390fd5b8160025f8281526020019081526020015f206008015f9054906101000a900460ff16611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fc90612929565b60405180910390fd5b82335f60025f8481526020019081526020015f20905061162483611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146116d8575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506116c18484611c14565b816002018190555081600401548160010181905550505b60025f8781526020019081526020015f206001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660025f8881526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a290612cf5565b60405180910390fd5b5f60035f8881526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015490505f8111156118fe575f82600201819055508060025f8a81526020019081526020015f206005015f82825461183691906126d9565b9250508190555080825f015f82825461184f91906126d9565b92505081905550428260030181905550873373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51836040516118a691906123bb565b60405180910390a3873373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90836040516118f591906123bb565b60405180910390a35b5050505050505061190d611e0b565b50565b6002602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015490806007015490806008015f9054906101000a900460ff16905089565b6119ac611e14565b8160045481106119f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e89061268e565b60405180910390fd5b825f5f60025f8481526020019081526020015f209050611a1083611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611ac4575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050611aad8484611c14565b816002018190555081600401548160010181905550505b5f8511611b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afd90612b57565b60405180910390fd5b8460025f8881526020019081526020015f2060020181905550857fc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee5086604051611b4f91906123bb565b60405180910390a2505050505050565b611b67611e14565b816004548110611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba39061268e565b60405180910390fd5b8160025f8581526020019081526020015f206008015f6101000a81548160ff021916908315150217905550827fb3c3c605d1520cd5bf41301dd5c04929e0ff021b02a10ea259b5a5b2d521a29c83604051611c079190612412565b60405180910390a2505050565b5f5f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090508060020154670de0b6b3a76400008260010154611c8087611472565b611c8a9190612844565b835f0154611c989190612c0d565b611ca29190612c7b565b611cac91906126d9565b91505092915050565b611cbd611e14565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d2491906124a2565b60405180910390fd5b611d3681611efd565b50565b60045481565b60025f5403611d83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7a90612d5d565b60405180910390fd5b60025f81905550565b611e06838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611dbf929190612d7b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ee565b505050565b60015f81905550565b611e1c612189565b73ffffffffffffffffffffffffffffffffffffffff16611e3a6114f8565b73ffffffffffffffffffffffffffffffffffffffff1614611e9957611e5d612189565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611e9091906124a2565b60405180910390fd5b565b611ea3612190565b5f600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ee6612189565b604051611ef391906124a2565b60405180910390a1565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fc8610d7b565b15612008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fff90612dec565b60405180910390fd5b565b612086848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161203f93929190612e0a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ee565b50505050565b612094611fc0565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120d7612189565b6040516120e491906124a2565b60405180910390a1565b5f5f60205f8451602086015f885af18061210d576040513d5f823e3d81fd5b3d92505f519150505f8214612126576001811415612141565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561218357836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161217a91906124a2565b60405180910390fd5b50505050565b5f33905090565b612198610d7b565b6121d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ce90612e89565b60405180910390fd5b565b5f5ffd5b5f819050919050565b6121ef816121dd565b81146121f9575f5ffd5b50565b5f8135905061220a816121e6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61223982612210565b9050919050565b6122498161222f565b8114612253575f5ffd5b50565b5f8135905061226481612240565b92915050565b5f5f604083850312156122805761227f6121d9565b5b5f61228d858286016121fc565b925050602061229e85828601612256565b9150509250929050565b6122b1816121dd565b82525050565b5f6080820190506122ca5f8301876122a8565b6122d760208301866122a8565b6122e460408301856122a8565b6122f160608301846122a8565b95945050505050565b5f6020828403121561230f5761230e6121d9565b5b5f61231c848285016121fc565b91505092915050565b61232e8161222f565b82525050565b5f8115159050919050565b61234881612334565b82525050565b5f60e0820190506123615f83018a612325565b61236e6020830189612325565b61237b60408301886122a8565b61238860608301876122a8565b61239560808301866122a8565b6123a260a08301856122a8565b6123af60c083018461233f565b98975050505050505050565b5f6020820190506123ce5f8301846122a8565b92915050565b5f5f604083850312156123ea576123e96121d9565b5b5f6123f7858286016121fc565b9250506020612408858286016121fc565b9150509250929050565b5f6020820190506124255f83018461233f565b92915050565b5f5f5f5f5f60a08688031215612444576124436121d9565b5b5f61245188828901612256565b955050602061246288828901612256565b9450506040612473888289016121fc565b9350506060612484888289016121fc565b9250506080612495888289016121fc565b9150509295509295909350565b5f6020820190506124b55f830184612325565b92915050565b5f819050919050565b5f6124de6124d96124d484612210565b6124bb565b612210565b9050919050565b5f6124ef826124c4565b9050919050565b5f612500826124e5565b9050919050565b612510816124f6565b82525050565b5f6101208201905061252a5f83018c612507565b612537602083018b612507565b612544604083018a6122a8565b61255160608301896122a8565b61255e60808301886122a8565b61256b60a08301876122a8565b61257860c08301866122a8565b61258560e08301856122a8565b61259361010083018461233f565b9a9950505050505050505050565b6125aa81612334565b81146125b4575f5ffd5b50565b5f813590506125c5816125a1565b92915050565b5f5f604083850312156125e1576125e06121d9565b5b5f6125ee858286016121fc565b92505060206125ff858286016125b7565b9150509250929050565b5f6020828403121561261e5761261d6121d9565b5b5f61262b84828501612256565b91505092915050565b5f82825260208201905092915050565b7f506f6f6c20646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f612678601383612634565b915061268382612644565b602082019050919050565b5f6020820190508181035f8301526126a58161266c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126e3826121dd565b91506126ee836121dd565b9250828201905080821115612706576127056126ac565b5b92915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f612740601183612634565b915061274b8261270c565b602082019050919050565b5f6020820190508181035f83015261276d81612734565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6127a8601483612634565b91506127b382612774565b602082019050919050565b5f6020820190508181035f8301526127d58161279c565b9050919050565b7f546f6b656e7320617265207374696c6c206c6f636b65640000000000000000005f82015250565b5f612810601783612634565b915061281b826127dc565b602082019050919050565b5f6020820190508181035f83015261283d81612804565b9050919050565b5f61284e826121dd565b9150612859836121dd565b9250828203905081811115612871576128706126ac565b5b92915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6128ab601583612634565b91506128b682612877565b602082019050919050565b5f6020820190508181035f8301526128d88161289f565b9050919050565b7f506f6f6c206973206e6f742061637469766500000000000000000000000000005f82015250565b5f612913601283612634565b915061291e826128df565b602082019050919050565b5f6020820190508181035f83015261294081612907565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f61297b600e83612634565b915061298682612947565b602082019050919050565b5f6020820190508181035f8301526129a88161296f565b9050919050565b7f416d6f756e742062656c6f77206d696e696d756d207374616b650000000000005f82015250565b5f6129e3601a83612634565b91506129ee826129af565b602082019050919050565b5f6020820190508181035f830152612a10816129d7565b9050919050565b7f496e76616c6964207374616b696e6720746f6b656e00000000000000000000005f82015250565b5f612a4b601583612634565b9150612a5682612a17565b602082019050919050565b5f6020820190508181035f830152612a7881612a3f565b9050919050565b7f496e76616c69642072657761726420746f6b656e0000000000000000000000005f82015250565b5f612ab3601483612634565b9150612abe82612a7f565b602082019050919050565b5f6020820190508181035f830152612ae081612aa7565b9050919050565b7f5265776172642072617465206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f612b41602283612634565b9150612b4c82612ae7565b604082019050919050565b5f6020820190508181035f830152612b6e81612b35565b9050919050565b5f60a082019050612b885f830188612325565b612b956020830187612325565b612ba260408301866122a8565b612baf60608301856122a8565b612bbc60808301846122a8565b9695505050505050565b5f612bd0826121dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c0257612c016126ac565b5b600182019050919050565b5f612c17826121dd565b9150612c22836121dd565b9250828202612c30816121dd565b91508282048414831517612c4757612c466126ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c85826121dd565b9150612c90836121dd565b925082612ca057612c9f612c4e565b5b828204905092915050565b7f43616e6e6f7420636f6d706f756e6420646966666572656e7420746f6b656e735f82015250565b5f612cdf602083612634565b9150612cea82612cab565b602082019050919050565b5f6020820190508181035f830152612d0c81612cd3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612d47601f83612634565b9150612d5282612d13565b602082019050919050565b5f6020820190508181035f830152612d7481612d3b565b9050919050565b5f604082019050612d8e5f830185612325565b612d9b60208301846122a8565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612dd6601083612634565b9150612de182612da2565b602082019050919050565b5f6020820190508181035f830152612e0381612dca565b9050919050565b5f606082019050612e1d5f830186612325565b612e2a6020830185612325565b612e3760408301846122a8565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612e73601483612634565b9150612e7e82612e3f565b602082019050919050565b5f6020820190508181035f830152612ea081612e67565b905091905056fea264697066735822122048955b86420344f9d49ca0ace674696553f984e6b7be37c8ea7a1db289cbf68164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97 DUP2 PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1D2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3 DUP3 PUSH2 0x17A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3 DUP2 PUSH2 0x199 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC PUSH0 DUP4 ADD DUP5 PUSH2 0x1AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EDD DUP1 PUSH2 0x1DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAC4AFA38 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xB32534CF EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xBBCAF3FE EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xE39C08FC EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x413 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x85AC165A EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x33B JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x7F8661A1 EQ PUSH2 0x278 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3D6AA5E1 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0xD91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x116F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x19A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x25CB JUMP JUMPDEST PUSH2 0x1B5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST PUSH2 0x1CB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP6 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD PUSH2 0x4D7 DUP10 DUP10 PUSH2 0x1C14 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x57F DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x633 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x61C DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x749 JUMPI PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6F9 CALLER DUP3 PUSH1 0x2 PUSH0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP PUSH2 0x757 PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP8 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x6 ADD SLOAD DUP6 PUSH1 0x7 ADD SLOAD DUP7 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x855 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x85D PUSH2 0x1E9B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x867 PUSH2 0x1D3F JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x8CB DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97F JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x968 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP7 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB7 SWAP1 PUSH2 0x2826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB40 CALLER DUP9 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP10 PUSH1 0x40 MLOAD PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH2 0xB9D PUSH2 0x1E0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE5 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xD1E CALLER DUP3 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xD78 PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD99 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0xDA2 PUSH0 PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xE79 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2D JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xF16 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP7 GT PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD DUP9 LT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10A4 CALLER ADDRESS DUP11 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP11 PUSH1 0x40 MLOAD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1102 PUSH2 0x1E0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1162 DUP3 DUP3 PUSH0 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST PUSH2 0x116B DUP3 PUSH2 0x513 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1177 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x117F PUSH2 0x208C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1189 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x4 SLOAD PUSH32 0xB203C0A4A9D84DDDE23DBA31A828C25525B2E0B5FE6A0E356D983AED95961CA1 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x144C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1466 SWAP1 PUSH2 0x2BC6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x5 ADD SLOAD SUB PUSH2 0x149F JUMPI DUP1 PUSH1 0x4 ADD SLOAD SWAP2 POP POP PUSH2 0x14F3 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x14D6 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x155F PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x15A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159B SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1624 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16D8 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x16C1 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x18FE JUMPI PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18A6 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP PUSH2 0x190D PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x19AC PUSH2 0x1E14 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E8 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1A10 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AC4 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1AAD DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFD SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH32 0xC390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B67 PUSH2 0x1E14 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0xB3C3C605D1520CD5BF41301DD5C04929E0FF021B02A10EA259B5A5B2D521A29C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C07 SWAP2 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C80 DUP8 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1C8A SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST DUP4 PUSH0 ADD SLOAD PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH2 0x1CAC SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CBD PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D24 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1D83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7A SWAP1 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E06 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1DBF SWAP3 SWAP2 SWAP1 PUSH2 0x2D7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x2189 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E3A PUSH2 0x14F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E99 JUMPI PUSH2 0x1E5D PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E90 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x2190 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1EE6 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1FC8 PUSH2 0xD7B JUMP JUMPDEST ISZERO PUSH2 0x2008 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFF SWAP1 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2086 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x203F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2094 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20D7 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E4 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2126 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2141 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2183 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217A SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2198 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x21D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21CE SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EF DUP2 PUSH2 0x21DD JUMP JUMPDEST DUP2 EQ PUSH2 0x21F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x220A DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2239 DUP3 PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x222F JUMP JUMPDEST DUP2 EQ PUSH2 0x2253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2264 DUP2 PUSH2 0x2240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228D DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x229E DUP6 DUP3 DUP7 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B1 DUP2 PUSH2 0x21DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22CA PUSH0 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22F1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231C DUP5 DUP3 DUP6 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x232E DUP2 PUSH2 0x222F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2348 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2361 PUSH0 DUP4 ADD DUP11 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x236E PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x237B PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2395 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x23A2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x23AF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23CE PUSH0 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F7 DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2408 DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2425 PUSH0 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2443 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2451 DUP9 DUP3 DUP10 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2462 DUP9 DUP3 DUP10 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2473 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2484 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2495 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH2 0x24D9 PUSH2 0x24D4 DUP5 PUSH2 0x2210 JUMP JUMPDEST PUSH2 0x24BB JUMP JUMPDEST PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24EF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2500 DUP3 PUSH2 0x24E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2510 DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x252A PUSH0 DUP4 ADD DUP13 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x2544 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2551 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x255E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x256B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2578 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2585 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2593 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25AA DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP2 EQ PUSH2 0x25B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25C5 DUP2 PUSH2 0x25A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH2 0x25E0 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25FF DUP6 DUP3 DUP7 ADD PUSH2 0x25B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261E JUMPI PUSH2 0x261D PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x262B DUP5 DUP3 DUP6 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F6F6C20646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2678 PUSH1 0x13 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP3 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A5 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26E3 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x26EE DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2706 JUMPI PUSH2 0x2705 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2740 PUSH1 0x11 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x274B DUP3 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x276D DUP2 PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A8 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B3 DUP3 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2810 PUSH1 0x17 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x281B DUP3 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283D DUP2 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x284E DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2859 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2871 JUMPI PUSH2 0x2870 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB PUSH1 0x15 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP3 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28D8 DUP2 PUSH2 0x289F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F6F6C206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH1 0x12 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x291E DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2940 DUP2 PUSH2 0x2907 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x297B PUSH1 0xE DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2986 DUP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29A8 DUP2 PUSH2 0x296F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742062656C6F77206D696E696D756D207374616B65000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29E3 PUSH1 0x1A DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EE DUP3 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A10 DUP2 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720746F6B656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4B PUSH1 0x15 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A56 DUP3 PUSH2 0x2A17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A78 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB3 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABE DUP3 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE0 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B41 PUSH1 0x22 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6E DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2B88 PUSH0 DUP4 ADD DUP9 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2B95 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2BA2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2BAF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2BBC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD0 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C02 JUMPI PUSH2 0x2C01 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C17 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2C22 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C30 DUP2 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C47 JUMPI PUSH2 0x2C46 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C85 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2C90 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CA0 JUMPI PUSH2 0x2C9F PUSH2 0x2C4E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420636F6D706F756E6420646966666572656E7420746F6B656E73 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CDF PUSH1 0x20 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEA DUP3 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D0C DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D47 PUSH1 0x1F DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D52 DUP3 PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D74 DUP2 PUSH2 0x2D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D8E PUSH0 DUP4 ADD DUP6 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2D9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD6 PUSH1 0x10 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE1 DUP3 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E03 DUP2 PUSH2 0x2DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E1D PUSH0 DUP4 ADD DUP7 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2E2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2E37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E73 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA0 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP6 JUMPDEST DUP7 TIMESTAMP SUB PREVRANDAO EXTDELEGATECALL 0xD4 SWAP13 LOG0 0xAC DUPN 0x74 PUSH10 0x6553F984E6B7BE37C8EA PUSH27 0x1DB289CBF68164736F6C634300081E003300000000000000000000 ",
							"sourceMap": "363:9725:10:-:0;;;1220:36;;;;;;;;;;1242:10;1716:1:5;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:4;996:7;;:15;;;;;;;;;;;;;;;;;;363:9725:10;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;363:9725:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_PRECISION_1058": {
									"entryPoint": 2113,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_910": {
									"entryPoint": 8430,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7700,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_964": {
									"entryPoint": 8585,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_398": {
									"entryPoint": 7691,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_390": {
									"entryPoint": 7487,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_328": {
									"entryPoint": 8332,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_301": {
									"entryPoint": 8128,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_312": {
									"entryPoint": 8592,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7933,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_344": {
									"entryPoint": 7835,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@compound_1731": {
									"entryPoint": 5463,
									"id": 1731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createPool_1282": {
									"entryPoint": 4481,
									"id": 1282,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@earned_1362": {
									"entryPoint": 7188,
									"id": 1362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_1800": {
									"entryPoint": 2977,
									"id": 1800,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exit_1633": {
									"entryPoint": 4358,
									"id": 1633,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getPoolInfo_1916": {
									"entryPoint": 1882,
									"id": 1916,
									"parameterSlots": 1,
									"returnSlots": 7
								},
								"@getReward_1607": {
									"entryPoint": 1299,
									"id": 1607,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getUserInfo_1961": {
									"entryPoint": 1073,
									"id": 1961,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"@owner_67": {
									"entryPoint": 5368,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1970": {
									"entryPoint": 4463,
									"id": 1970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_289": {
									"entryPoint": 3451,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolCount_1055": {
									"entryPoint": 7481,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pools_1046": {
									"entryPoint": 6416,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3473,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1326": {
									"entryPoint": 5234,
									"id": 1326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_560": {
									"entryPoint": 8202,
									"id": 560,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_533": {
									"entryPoint": 7564,
									"id": 533,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPoolStatus_1864": {
									"entryPoint": 7007,
									"id": 1864,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1457": {
									"entryPoint": 3492,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 7349,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1979": {
									"entryPoint": 2125,
									"id": 1979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateRewardRate_1839": {
									"entryPoint": 6564,
									"id": 1839,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@userInfo_1053": {
									"entryPoint": 5408,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1548": {
									"entryPoint": 2143,
									"id": 1548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 9259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 9675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11786,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11125,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$488_t_contract$_IERC20_$488_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9494,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8887,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$488_to_t_address": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 11839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767": {
									"entryPoint": 10463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c": {
									"entryPoint": 10775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5": {
									"entryPoint": 10671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37": {
									"entryPoint": 9796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 11682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089": {
									"entryPoint": 11435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 10359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695": {
									"entryPoint": 10983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26771:11",
										"nodeType": "YulBlock",
										"src": "0:26771:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "597:87:11",
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nativeSrc": "607:29:11",
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nativeSrc": "616:20:11",
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nativeSrc": "645:33:11",
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nativeSrc": "645:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:11",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:11",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:11",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nativeSrc": "735:81:11",
													"nodeType": "YulBlock",
													"src": "735:81:11",
													"statements": [
														{
															"nativeSrc": "745:65:11",
															"nodeType": "YulAssignment",
															"src": "745:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:11",
																		"nodeType": "YulLiteral",
																		"src": "767:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:11"
																},
																"nativeSrc": "756:54:11",
																"nodeType": "YulFunctionCall",
																"src": "756:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:11",
														"nodeType": "YulTypedName",
														"src": "717:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:11",
														"nodeType": "YulTypedName",
														"src": "727:7:11",
														"type": ""
													}
												],
												"src": "690:126:11"
											},
											{
												"body": {
													"nativeSrc": "867:51:11",
													"nodeType": "YulBlock",
													"src": "867:51:11",
													"statements": [
														{
															"nativeSrc": "877:35:11",
															"nodeType": "YulAssignment",
															"src": "877:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "906:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "888:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:11"
																},
																"nativeSrc": "888:24:11",
																"nodeType": "YulFunctionCall",
																"src": "888:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "877:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "822:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "849:5:11",
														"nodeType": "YulTypedName",
														"src": "849:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "859:7:11",
														"nodeType": "YulTypedName",
														"src": "859:7:11",
														"type": ""
													}
												],
												"src": "822:96:11"
											},
											{
												"body": {
													"nativeSrc": "967:79:11",
													"nodeType": "YulBlock",
													"src": "967:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:11",
																"nodeType": "YulBlock",
																"src": "1024:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:11"
																			},
																			"nativeSrc": "1026:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:11"
																		},
																		"nativeSrc": "1026:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "997:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:11"
																				},
																				"nativeSrc": "997:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:11"
																		},
																		"nativeSrc": "987:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:11"
																},
																"nativeSrc": "980:43:11",
																"nodeType": "YulFunctionCall",
																"src": "980:43:11"
															},
															"nativeSrc": "977:63:11",
															"nodeType": "YulIf",
															"src": "977:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "924:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:11",
														"nodeType": "YulTypedName",
														"src": "960:5:11",
														"type": ""
													}
												],
												"src": "924:122:11"
											},
											{
												"body": {
													"nativeSrc": "1104:87:11",
													"nodeType": "YulBlock",
													"src": "1104:87:11",
													"statements": [
														{
															"nativeSrc": "1114:29:11",
															"nodeType": "YulAssignment",
															"src": "1114:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:11"
																},
																"nativeSrc": "1123:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1152:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:11"
																},
																"nativeSrc": "1152:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:11"
															},
															"nativeSrc": "1152:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1052:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:11",
														"nodeType": "YulTypedName",
														"src": "1082:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:11",
														"nodeType": "YulTypedName",
														"src": "1090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:11",
														"nodeType": "YulTypedName",
														"src": "1098:5:11",
														"type": ""
													}
												],
												"src": "1052:139:11"
											},
											{
												"body": {
													"nativeSrc": "1280:391:11",
													"nodeType": "YulBlock",
													"src": "1280:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:11",
																"nodeType": "YulBlock",
																"src": "1326:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:11"
																			},
																			"nativeSrc": "1328:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:11"
																		},
																		"nativeSrc": "1328:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:11"
																		},
																		"nativeSrc": "1297:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:11"
																},
																"nativeSrc": "1293:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:11"
															},
															"nativeSrc": "1290:119:11",
															"nodeType": "YulIf",
															"src": "1290:119:11"
														},
														{
															"nativeSrc": "1419:117:11",
															"nodeType": "YulBlock",
															"src": "1419:117:11",
															"statements": [
																{
																	"nativeSrc": "1434:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:11"
																				},
																				"nativeSrc": "1494:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1473:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:11"
																		},
																		"nativeSrc": "1473:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:11",
															"nodeType": "YulBlock",
															"src": "1546:118:11",
															"statements": [
																{
																	"nativeSrc": "1561:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:11"
																				},
																				"nativeSrc": "1622:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1601:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:11"
																		},
																		"nativeSrc": "1601:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1197:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:11",
														"nodeType": "YulTypedName",
														"src": "1242:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:11",
														"nodeType": "YulTypedName",
														"src": "1253:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:11",
														"nodeType": "YulTypedName",
														"src": "1265:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:11",
														"nodeType": "YulTypedName",
														"src": "1273:6:11",
														"type": ""
													}
												],
												"src": "1197:474:11"
											},
											{
												"body": {
													"nativeSrc": "1742:53:11",
													"nodeType": "YulBlock",
													"src": "1742:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:11"
																		},
																		"nativeSrc": "1764:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:11"
																},
																"nativeSrc": "1752:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:11"
															},
															"nativeSrc": "1752:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:11",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:11",
														"nodeType": "YulTypedName",
														"src": "1737:3:11",
														"type": ""
													}
												],
												"src": "1677:118:11"
											},
											{
												"body": {
													"nativeSrc": "1983:371:11",
													"nodeType": "YulBlock",
													"src": "1983:371:11",
													"statements": [
														{
															"nativeSrc": "1993:27:11",
															"nodeType": "YulAssignment",
															"src": "1993:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2005:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2005:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2016:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2016:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2001:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:11"
																},
																"nativeSrc": "2001:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2001:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1993:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2074:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2074:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2087:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2087:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2098:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2098:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2083:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:11"
																		},
																		"nativeSrc": "2083:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2083:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2030:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2030:43:11"
																},
																"nativeSrc": "2030:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2030:71:11"
															},
															"nativeSrc": "2030:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2030:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2155:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2155:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2168:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2168:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2179:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2179:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:11"
																		},
																		"nativeSrc": "2164:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2164:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2111:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2111:43:11"
																},
																"nativeSrc": "2111:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2111:72:11"
															},
															"nativeSrc": "2111:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2111:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2237:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2237:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2250:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2261:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2261:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2246:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:11"
																		},
																		"nativeSrc": "2246:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2193:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2193:43:11"
																},
																"nativeSrc": "2193:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2193:72:11"
															},
															"nativeSrc": "2193:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2193:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2319:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2319:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2343:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2343:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2328:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:11"
																		},
																		"nativeSrc": "2328:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2275:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2275:43:11"
																},
																"nativeSrc": "2275:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2275:72:11"
															},
															"nativeSrc": "2275:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2275:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:553:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1931:9:11",
														"nodeType": "YulTypedName",
														"src": "1931:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1943:6:11",
														"nodeType": "YulTypedName",
														"src": "1943:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1951:6:11",
														"nodeType": "YulTypedName",
														"src": "1951:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1959:6:11",
														"nodeType": "YulTypedName",
														"src": "1959:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1967:6:11",
														"nodeType": "YulTypedName",
														"src": "1967:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1978:4:11",
														"nodeType": "YulTypedName",
														"src": "1978:4:11",
														"type": ""
													}
												],
												"src": "1801:553:11"
											},
											{
												"body": {
													"nativeSrc": "2426:263:11",
													"nodeType": "YulBlock",
													"src": "2426:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2472:83:11",
																"nodeType": "YulBlock",
																"src": "2472:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2474:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2474:77:11"
																			},
																			"nativeSrc": "2474:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:79:11"
																		},
																		"nativeSrc": "2474:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2447:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2447:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2456:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2456:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2443:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:11"
																		},
																		"nativeSrc": "2443:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2443:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2468:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2468:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2439:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:11"
																},
																"nativeSrc": "2439:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2439:32:11"
															},
															"nativeSrc": "2436:119:11",
															"nodeType": "YulIf",
															"src": "2436:119:11"
														},
														{
															"nativeSrc": "2565:117:11",
															"nodeType": "YulBlock",
															"src": "2565:117:11",
															"statements": [
																{
																	"nativeSrc": "2580:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2580:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2594:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2594:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2584:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2584:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2609:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2609:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2644:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2644:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2655:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2655:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2640:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2640:3:11"
																				},
																				"nativeSrc": "2640:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2640:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2664:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2664:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2619:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2619:20:11"
																		},
																		"nativeSrc": "2619:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2619:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2609:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2609:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2360:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2396:9:11",
														"nodeType": "YulTypedName",
														"src": "2396:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2407:7:11",
														"nodeType": "YulTypedName",
														"src": "2407:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2419:6:11",
														"nodeType": "YulTypedName",
														"src": "2419:6:11",
														"type": ""
													}
												],
												"src": "2360:329:11"
											},
											{
												"body": {
													"nativeSrc": "2760:53:11",
													"nodeType": "YulBlock",
													"src": "2760:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2777:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2777:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2800:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2800:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2782:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2782:17:11"
																		},
																		"nativeSrc": "2782:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2782:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2770:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:11"
																},
																"nativeSrc": "2770:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2770:37:11"
															},
															"nativeSrc": "2770:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2770:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2695:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2748:5:11",
														"nodeType": "YulTypedName",
														"src": "2748:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2755:3:11",
														"nodeType": "YulTypedName",
														"src": "2755:3:11",
														"type": ""
													}
												],
												"src": "2695:118:11"
											},
											{
												"body": {
													"nativeSrc": "2861:48:11",
													"nodeType": "YulBlock",
													"src": "2861:48:11",
													"statements": [
														{
															"nativeSrc": "2871:32:11",
															"nodeType": "YulAssignment",
															"src": "2871:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2889:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2889:6:11"
																		},
																		"nativeSrc": "2889:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2882:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:11"
																},
																"nativeSrc": "2882:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2882:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2871:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2871:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2819:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2843:5:11",
														"nodeType": "YulTypedName",
														"src": "2843:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2853:7:11",
														"nodeType": "YulTypedName",
														"src": "2853:7:11",
														"type": ""
													}
												],
												"src": "2819:90:11"
											},
											{
												"body": {
													"nativeSrc": "2974:50:11",
													"nodeType": "YulBlock",
													"src": "2974:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2991:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2991:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3011:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3011:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2996:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "2996:14:11"
																		},
																		"nativeSrc": "2996:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:11"
																},
																"nativeSrc": "2984:34:11",
																"nodeType": "YulFunctionCall",
																"src": "2984:34:11"
															},
															"nativeSrc": "2984:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "2984:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2915:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2962:5:11",
														"nodeType": "YulTypedName",
														"src": "2962:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2969:3:11",
														"nodeType": "YulTypedName",
														"src": "2969:3:11",
														"type": ""
													}
												],
												"src": "2915:109:11"
											},
											{
												"body": {
													"nativeSrc": "3290:614:11",
													"nodeType": "YulBlock",
													"src": "3290:614:11",
													"statements": [
														{
															"nativeSrc": "3300:27:11",
															"nodeType": "YulAssignment",
															"src": "3300:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3312:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3323:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3323:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3308:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:11"
																},
																"nativeSrc": "3308:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3308:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3300:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3381:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3381:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3394:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3405:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3390:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:11"
																		},
																		"nativeSrc": "3390:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3337:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3337:43:11"
																},
																"nativeSrc": "3337:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3337:71:11"
															},
															"nativeSrc": "3337:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3337:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3462:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3462:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3475:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3486:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3486:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3471:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:11"
																		},
																		"nativeSrc": "3471:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3471:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3418:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3418:43:11"
																},
																"nativeSrc": "3418:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3418:72:11"
															},
															"nativeSrc": "3418:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3418:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3544:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3544:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3557:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3568:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3568:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3553:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:11"
																		},
																		"nativeSrc": "3553:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3500:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3500:43:11"
																},
																"nativeSrc": "3500:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3500:72:11"
															},
															"nativeSrc": "3500:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3500:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3626:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3626:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3639:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3639:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3650:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3650:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3635:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:11"
																		},
																		"nativeSrc": "3635:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3582:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3582:43:11"
																},
																"nativeSrc": "3582:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3582:72:11"
															},
															"nativeSrc": "3582:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3582:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3708:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3708:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3721:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3721:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3732:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3732:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3717:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:11"
																		},
																		"nativeSrc": "3717:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3717:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3664:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3664:43:11"
																},
																"nativeSrc": "3664:73:11",
																"nodeType": "YulFunctionCall",
																"src": "3664:73:11"
															},
															"nativeSrc": "3664:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "3664:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "3791:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3791:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3804:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3815:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3815:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3800:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3800:3:11"
																		},
																		"nativeSrc": "3800:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3800:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3747:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3747:43:11"
																},
																"nativeSrc": "3747:73:11",
																"nodeType": "YulFunctionCall",
																"src": "3747:73:11"
															},
															"nativeSrc": "3747:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "3747:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3868:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3868:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3881:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3881:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3892:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3892:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3877:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3877:3:11"
																		},
																		"nativeSrc": "3877:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3877:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3830:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3830:37:11"
																},
																"nativeSrc": "3830:67:11",
																"nodeType": "YulFunctionCall",
																"src": "3830:67:11"
															},
															"nativeSrc": "3830:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "3830:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3030:874:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3214:9:11",
														"nodeType": "YulTypedName",
														"src": "3214:9:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3226:6:11",
														"nodeType": "YulTypedName",
														"src": "3226:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3234:6:11",
														"nodeType": "YulTypedName",
														"src": "3234:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3242:6:11",
														"nodeType": "YulTypedName",
														"src": "3242:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3250:6:11",
														"nodeType": "YulTypedName",
														"src": "3250:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3258:6:11",
														"nodeType": "YulTypedName",
														"src": "3258:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3266:6:11",
														"nodeType": "YulTypedName",
														"src": "3266:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3274:6:11",
														"nodeType": "YulTypedName",
														"src": "3274:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3285:4:11",
														"nodeType": "YulTypedName",
														"src": "3285:4:11",
														"type": ""
													}
												],
												"src": "3030:874:11"
											},
											{
												"body": {
													"nativeSrc": "4008:124:11",
													"nodeType": "YulBlock",
													"src": "4008:124:11",
													"statements": [
														{
															"nativeSrc": "4018:26:11",
															"nodeType": "YulAssignment",
															"src": "4018:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4030:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4026:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:11"
																},
																"nativeSrc": "4026:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4026:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4018:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4098:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4098:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4111:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4111:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4122:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4122:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4107:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:11"
																		},
																		"nativeSrc": "4107:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4107:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4054:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4054:43:11"
																},
																"nativeSrc": "4054:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4054:71:11"
															},
															"nativeSrc": "4054:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4054:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3910:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3980:9:11",
														"nodeType": "YulTypedName",
														"src": "3980:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3992:6:11",
														"nodeType": "YulTypedName",
														"src": "3992:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4003:4:11",
														"nodeType": "YulTypedName",
														"src": "4003:4:11",
														"type": ""
													}
												],
												"src": "3910:222:11"
											},
											{
												"body": {
													"nativeSrc": "4221:391:11",
													"nodeType": "YulBlock",
													"src": "4221:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4267:83:11",
																"nodeType": "YulBlock",
																"src": "4267:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4269:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4269:77:11"
																			},
																			"nativeSrc": "4269:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:79:11"
																		},
																		"nativeSrc": "4269:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4242:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4242:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4251:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4238:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:11"
																		},
																		"nativeSrc": "4238:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4263:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4234:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:11"
																},
																"nativeSrc": "4234:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4234:32:11"
															},
															"nativeSrc": "4231:119:11",
															"nodeType": "YulIf",
															"src": "4231:119:11"
														},
														{
															"nativeSrc": "4360:117:11",
															"nodeType": "YulBlock",
															"src": "4360:117:11",
															"statements": [
																{
																	"nativeSrc": "4375:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4375:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4389:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4379:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4379:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4404:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4404:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4439:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4439:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4450:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4435:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4435:3:11"
																				},
																				"nativeSrc": "4435:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4435:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4459:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4459:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4414:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4414:20:11"
																		},
																		"nativeSrc": "4414:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4404:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4404:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4487:118:11",
															"nodeType": "YulBlock",
															"src": "4487:118:11",
															"statements": [
																{
																	"nativeSrc": "4502:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4502:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4516:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4506:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4506:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4532:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4532:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4567:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4567:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4578:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4578:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4563:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:11"
																				},
																				"nativeSrc": "4563:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4587:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4587:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4542:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4542:20:11"
																		},
																		"nativeSrc": "4542:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4532:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4532:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4138:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4183:9:11",
														"nodeType": "YulTypedName",
														"src": "4183:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4194:7:11",
														"nodeType": "YulTypedName",
														"src": "4194:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4206:6:11",
														"nodeType": "YulTypedName",
														"src": "4206:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4214:6:11",
														"nodeType": "YulTypedName",
														"src": "4214:6:11",
														"type": ""
													}
												],
												"src": "4138:474:11"
											},
											{
												"body": {
													"nativeSrc": "4710:118:11",
													"nodeType": "YulBlock",
													"src": "4710:118:11",
													"statements": [
														{
															"nativeSrc": "4720:26:11",
															"nodeType": "YulAssignment",
															"src": "4720:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4732:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4732:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4728:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:11"
																},
																"nativeSrc": "4728:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4728:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4720:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4720:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4794:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4794:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4807:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4818:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4818:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4803:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:11"
																		},
																		"nativeSrc": "4803:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4756:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "4756:37:11"
																},
																"nativeSrc": "4756:65:11",
																"nodeType": "YulFunctionCall",
																"src": "4756:65:11"
															},
															"nativeSrc": "4756:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "4756:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4618:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4682:9:11",
														"nodeType": "YulTypedName",
														"src": "4682:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4694:6:11",
														"nodeType": "YulTypedName",
														"src": "4694:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:11",
														"nodeType": "YulTypedName",
														"src": "4705:4:11",
														"type": ""
													}
												],
												"src": "4618:210:11"
											},
											{
												"body": {
													"nativeSrc": "4968:777:11",
													"nodeType": "YulBlock",
													"src": "4968:777:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5015:83:11",
																"nodeType": "YulBlock",
																"src": "5015:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5017:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5017:77:11"
																			},
																			"nativeSrc": "5017:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5017:79:11"
																		},
																		"nativeSrc": "5017:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5017:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4989:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4989:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4998:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4985:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4985:3:11"
																		},
																		"nativeSrc": "4985:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4985:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5010:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5010:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4981:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4981:3:11"
																},
																"nativeSrc": "4981:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4981:33:11"
															},
															"nativeSrc": "4978:120:11",
															"nodeType": "YulIf",
															"src": "4978:120:11"
														},
														{
															"nativeSrc": "5108:117:11",
															"nodeType": "YulBlock",
															"src": "5108:117:11",
															"statements": [
																{
																	"nativeSrc": "5123:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5123:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5137:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5137:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5127:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5127:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5152:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5152:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5187:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5187:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5198:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5198:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5183:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5183:3:11"
																				},
																				"nativeSrc": "5183:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5183:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5207:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5207:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5162:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5162:20:11"
																		},
																		"nativeSrc": "5162:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5152:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5152:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5235:118:11",
															"nodeType": "YulBlock",
															"src": "5235:118:11",
															"statements": [
																{
																	"nativeSrc": "5250:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5250:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5264:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5264:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5254:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5254:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5280:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5280:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5315:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5315:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5326:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5311:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5311:3:11"
																				},
																				"nativeSrc": "5311:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5311:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5335:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5335:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5290:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5290:20:11"
																		},
																		"nativeSrc": "5290:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5290:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5280:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5280:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5363:118:11",
															"nodeType": "YulBlock",
															"src": "5363:118:11",
															"statements": [
																{
																	"nativeSrc": "5378:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5378:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5392:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5392:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5382:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5382:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5408:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5408:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5443:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5443:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5454:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5454:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5439:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5439:3:11"
																				},
																				"nativeSrc": "5439:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5439:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5463:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5463:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5418:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5418:20:11"
																		},
																		"nativeSrc": "5418:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5418:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5408:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5408:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5491:118:11",
															"nodeType": "YulBlock",
															"src": "5491:118:11",
															"statements": [
																{
																	"nativeSrc": "5506:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5506:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5520:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5520:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5510:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5510:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5536:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5536:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5571:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5571:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5582:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5582:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5567:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5567:3:11"
																				},
																				"nativeSrc": "5567:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5567:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5591:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5591:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5546:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5546:20:11"
																		},
																		"nativeSrc": "5546:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5546:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5536:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5536:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5619:119:11",
															"nodeType": "YulBlock",
															"src": "5619:119:11",
															"statements": [
																{
																	"nativeSrc": "5634:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5634:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5648:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5648:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5638:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5638:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5665:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5665:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5700:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5700:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5711:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5711:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5696:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5696:3:11"
																				},
																				"nativeSrc": "5696:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5696:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5720:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5720:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5675:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5675:20:11"
																		},
																		"nativeSrc": "5675:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5675:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5665:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5665:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256",
												"nativeSrc": "4834:911:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4906:9:11",
														"nodeType": "YulTypedName",
														"src": "4906:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4917:7:11",
														"nodeType": "YulTypedName",
														"src": "4917:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4929:6:11",
														"nodeType": "YulTypedName",
														"src": "4929:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4937:6:11",
														"nodeType": "YulTypedName",
														"src": "4937:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4945:6:11",
														"nodeType": "YulTypedName",
														"src": "4945:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4953:6:11",
														"nodeType": "YulTypedName",
														"src": "4953:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4961:6:11",
														"nodeType": "YulTypedName",
														"src": "4961:6:11",
														"type": ""
													}
												],
												"src": "4834:911:11"
											},
											{
												"body": {
													"nativeSrc": "5849:124:11",
													"nodeType": "YulBlock",
													"src": "5849:124:11",
													"statements": [
														{
															"nativeSrc": "5859:26:11",
															"nodeType": "YulAssignment",
															"src": "5859:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5871:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5871:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5882:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5882:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5867:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5867:3:11"
																},
																"nativeSrc": "5867:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5867:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5859:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5859:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5939:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5939:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5952:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5963:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5963:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:11"
																		},
																		"nativeSrc": "5948:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5895:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5895:43:11"
																},
																"nativeSrc": "5895:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5895:71:11"
															},
															"nativeSrc": "5895:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5895:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5751:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5821:9:11",
														"nodeType": "YulTypedName",
														"src": "5821:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5833:6:11",
														"nodeType": "YulTypedName",
														"src": "5833:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5844:4:11",
														"nodeType": "YulTypedName",
														"src": "5844:4:11",
														"type": ""
													}
												],
												"src": "5751:222:11"
											},
											{
												"body": {
													"nativeSrc": "6011:28:11",
													"nodeType": "YulBlock",
													"src": "6011:28:11",
													"statements": [
														{
															"nativeSrc": "6021:12:11",
															"nodeType": "YulAssignment",
															"src": "6021:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "6028:5:11",
																"nodeType": "YulIdentifier",
																"src": "6028:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6021:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6021:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5979:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5997:5:11",
														"nodeType": "YulTypedName",
														"src": "5997:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6007:3:11",
														"nodeType": "YulTypedName",
														"src": "6007:3:11",
														"type": ""
													}
												],
												"src": "5979:60:11"
											},
											{
												"body": {
													"nativeSrc": "6105:82:11",
													"nodeType": "YulBlock",
													"src": "6105:82:11",
													"statements": [
														{
															"nativeSrc": "6115:66:11",
															"nodeType": "YulAssignment",
															"src": "6115:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6173:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6173:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6155:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "6155:17:11"
																				},
																				"nativeSrc": "6155:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6155:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6146:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "6146:8:11"
																		},
																		"nativeSrc": "6146:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6128:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6128:17:11"
																},
																"nativeSrc": "6128:53:11",
																"nodeType": "YulFunctionCall",
																"src": "6128:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6115:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6115:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6045:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6085:5:11",
														"nodeType": "YulTypedName",
														"src": "6085:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6095:9:11",
														"nodeType": "YulTypedName",
														"src": "6095:9:11",
														"type": ""
													}
												],
												"src": "6045:142:11"
											},
											{
												"body": {
													"nativeSrc": "6253:66:11",
													"nodeType": "YulBlock",
													"src": "6253:66:11",
													"statements": [
														{
															"nativeSrc": "6263:50:11",
															"nodeType": "YulAssignment",
															"src": "6263:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6307:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6307:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6276:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6276:30:11"
																},
																"nativeSrc": "6276:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6276:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6263:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6263:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6193:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6233:5:11",
														"nodeType": "YulTypedName",
														"src": "6233:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6243:9:11",
														"nodeType": "YulTypedName",
														"src": "6243:9:11",
														"type": ""
													}
												],
												"src": "6193:126:11"
											},
											{
												"body": {
													"nativeSrc": "6399:66:11",
													"nodeType": "YulBlock",
													"src": "6399:66:11",
													"statements": [
														{
															"nativeSrc": "6409:50:11",
															"nodeType": "YulAssignment",
															"src": "6409:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6453:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6453:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6422:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6422:30:11"
																},
																"nativeSrc": "6422:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6422:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6409:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6409:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$488_to_t_address",
												"nativeSrc": "6325:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6379:5:11",
														"nodeType": "YulTypedName",
														"src": "6379:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6389:9:11",
														"nodeType": "YulTypedName",
														"src": "6389:9:11",
														"type": ""
													}
												],
												"src": "6325:140:11"
											},
											{
												"body": {
													"nativeSrc": "6550:80:11",
													"nodeType": "YulBlock",
													"src": "6550:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6567:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6567:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6617:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6617:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$488_to_t_address",
																			"nativeSrc": "6572:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "6572:44:11"
																		},
																		"nativeSrc": "6572:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6572:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:11"
																},
																"nativeSrc": "6560:64:11",
																"nodeType": "YulFunctionCall",
																"src": "6560:64:11"
															},
															"nativeSrc": "6560:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "6560:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack",
												"nativeSrc": "6471:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6538:5:11",
														"nodeType": "YulTypedName",
														"src": "6538:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6545:3:11",
														"nodeType": "YulTypedName",
														"src": "6545:3:11",
														"type": ""
													}
												],
												"src": "6471:159:11"
											},
											{
												"body": {
													"nativeSrc": "6980:808:11",
													"nodeType": "YulBlock",
													"src": "6980:808:11",
													"statements": [
														{
															"nativeSrc": "6990:27:11",
															"nodeType": "YulAssignment",
															"src": "6990:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7002:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7002:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7013:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7013:3:11",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6998:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:11"
																},
																"nativeSrc": "6998:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6998:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6990:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6990:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7085:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:11"
																		},
																		"nativeSrc": "7094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack",
																	"nativeSrc": "7027:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "7027:57:11"
																},
																"nativeSrc": "7027:85:11",
																"nodeType": "YulFunctionCall",
																"src": "7027:85:11"
															},
															"nativeSrc": "7027:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "7027:85:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7180:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7180:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7193:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7193:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7204:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7204:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7189:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:11"
																		},
																		"nativeSrc": "7189:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack",
																	"nativeSrc": "7122:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "7122:57:11"
																},
																"nativeSrc": "7122:86:11",
																"nodeType": "YulFunctionCall",
																"src": "7122:86:11"
															},
															"nativeSrc": "7122:86:11",
															"nodeType": "YulExpressionStatement",
															"src": "7122:86:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7262:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7262:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7275:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7275:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7286:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7286:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7271:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7271:3:11"
																		},
																		"nativeSrc": "7271:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7271:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7218:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7218:43:11"
																},
																"nativeSrc": "7218:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7218:72:11"
															},
															"nativeSrc": "7218:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7218:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7344:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7344:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7357:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7368:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7353:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:11"
																		},
																		"nativeSrc": "7353:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7300:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7300:43:11"
																},
																"nativeSrc": "7300:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7300:72:11"
															},
															"nativeSrc": "7300:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7300:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7426:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7426:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7439:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7439:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7450:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7450:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7435:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7435:3:11"
																		},
																		"nativeSrc": "7435:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7435:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7382:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7382:43:11"
																},
																"nativeSrc": "7382:73:11",
																"nodeType": "YulFunctionCall",
																"src": "7382:73:11"
															},
															"nativeSrc": "7382:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "7382:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "7509:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7509:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7522:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7522:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7533:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7533:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7518:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:11"
																		},
																		"nativeSrc": "7518:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7465:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7465:43:11"
																},
																"nativeSrc": "7465:73:11",
																"nodeType": "YulFunctionCall",
																"src": "7465:73:11"
															},
															"nativeSrc": "7465:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "7465:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "7592:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7592:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7616:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7616:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:11"
																		},
																		"nativeSrc": "7601:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7601:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7548:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7548:43:11"
																},
																"nativeSrc": "7548:73:11",
																"nodeType": "YulFunctionCall",
																"src": "7548:73:11"
															},
															"nativeSrc": "7548:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "7548:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "7675:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7675:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7688:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7688:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7699:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7699:3:11",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7684:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7684:3:11"
																		},
																		"nativeSrc": "7684:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7631:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7631:43:11"
																},
																"nativeSrc": "7631:73:11",
																"nodeType": "YulFunctionCall",
																"src": "7631:73:11"
															},
															"nativeSrc": "7631:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "7631:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "7752:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7752:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7765:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7765:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7776:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7776:3:11",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7761:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7761:3:11"
																		},
																		"nativeSrc": "7761:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7761:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "7714:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "7714:37:11"
																},
																"nativeSrc": "7714:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7714:67:11"
															},
															"nativeSrc": "7714:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7714:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$488_t_contract$_IERC20_$488_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6636:1152:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6888:9:11",
														"nodeType": "YulTypedName",
														"src": "6888:9:11",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "6900:6:11",
														"nodeType": "YulTypedName",
														"src": "6900:6:11",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6908:6:11",
														"nodeType": "YulTypedName",
														"src": "6908:6:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6916:6:11",
														"nodeType": "YulTypedName",
														"src": "6916:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6924:6:11",
														"nodeType": "YulTypedName",
														"src": "6924:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6932:6:11",
														"nodeType": "YulTypedName",
														"src": "6932:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6940:6:11",
														"nodeType": "YulTypedName",
														"src": "6940:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6948:6:11",
														"nodeType": "YulTypedName",
														"src": "6948:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6956:6:11",
														"nodeType": "YulTypedName",
														"src": "6956:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6964:6:11",
														"nodeType": "YulTypedName",
														"src": "6964:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6975:4:11",
														"nodeType": "YulTypedName",
														"src": "6975:4:11",
														"type": ""
													}
												],
												"src": "6636:1152:11"
											},
											{
												"body": {
													"nativeSrc": "7834:76:11",
													"nodeType": "YulBlock",
													"src": "7834:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7888:16:11",
																"nodeType": "YulBlock",
																"src": "7888:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7897:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7897:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7900:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7900:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7890:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7890:6:11"
																			},
																			"nativeSrc": "7890:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7890:12:11"
																		},
																		"nativeSrc": "7890:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7890:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7857:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7857:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7879:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7879:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7864:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "7864:14:11"
																				},
																				"nativeSrc": "7864:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7864:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7854:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7854:2:11"
																		},
																		"nativeSrc": "7854:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7854:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7847:6:11"
																},
																"nativeSrc": "7847:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7847:40:11"
															},
															"nativeSrc": "7844:60:11",
															"nodeType": "YulIf",
															"src": "7844:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7794:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7827:5:11",
														"nodeType": "YulTypedName",
														"src": "7827:5:11",
														"type": ""
													}
												],
												"src": "7794:116:11"
											},
											{
												"body": {
													"nativeSrc": "7965:84:11",
													"nodeType": "YulBlock",
													"src": "7965:84:11",
													"statements": [
														{
															"nativeSrc": "7975:29:11",
															"nodeType": "YulAssignment",
															"src": "7975:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7997:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7997:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7984:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "7984:12:11"
																},
																"nativeSrc": "7984:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7984:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7975:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7975:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8037:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8037:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8013:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "8013:23:11"
																},
																"nativeSrc": "8013:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8013:30:11"
															},
															"nativeSrc": "8013:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8013:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7916:133:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7943:6:11",
														"nodeType": "YulTypedName",
														"src": "7943:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7951:3:11",
														"nodeType": "YulTypedName",
														"src": "7951:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7959:5:11",
														"nodeType": "YulTypedName",
														"src": "7959:5:11",
														"type": ""
													}
												],
												"src": "7916:133:11"
											},
											{
												"body": {
													"nativeSrc": "8135:388:11",
													"nodeType": "YulBlock",
													"src": "8135:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8181:83:11",
																"nodeType": "YulBlock",
																"src": "8181:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8183:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8183:77:11"
																			},
																			"nativeSrc": "8183:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8183:79:11"
																		},
																		"nativeSrc": "8183:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8183:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8156:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8156:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8165:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8165:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8152:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8152:3:11"
																		},
																		"nativeSrc": "8152:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8152:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8177:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8177:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8148:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:11"
																},
																"nativeSrc": "8148:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8148:32:11"
															},
															"nativeSrc": "8145:119:11",
															"nodeType": "YulIf",
															"src": "8145:119:11"
														},
														{
															"nativeSrc": "8274:117:11",
															"nodeType": "YulBlock",
															"src": "8274:117:11",
															"statements": [
																{
																	"nativeSrc": "8289:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8289:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8303:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8303:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8293:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8293:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8318:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8318:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8353:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8353:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8364:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8364:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8349:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8349:3:11"
																				},
																				"nativeSrc": "8349:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8349:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8373:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8373:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8328:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8328:20:11"
																		},
																		"nativeSrc": "8328:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8328:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8318:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8318:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8401:115:11",
															"nodeType": "YulBlock",
															"src": "8401:115:11",
															"statements": [
																{
																	"nativeSrc": "8416:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8416:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8430:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8420:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8420:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8446:60:11",
																	"nodeType": "YulAssignment",
																	"src": "8446:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8478:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8478:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8489:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8489:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8474:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8474:3:11"
																				},
																				"nativeSrc": "8474:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8474:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8498:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8498:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8456:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8456:17:11"
																		},
																		"nativeSrc": "8456:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8456:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8446:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8446:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "8055:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8097:9:11",
														"nodeType": "YulTypedName",
														"src": "8097:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8108:7:11",
														"nodeType": "YulTypedName",
														"src": "8108:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8120:6:11",
														"nodeType": "YulTypedName",
														"src": "8120:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8128:6:11",
														"nodeType": "YulTypedName",
														"src": "8128:6:11",
														"type": ""
													}
												],
												"src": "8055:468:11"
											},
											{
												"body": {
													"nativeSrc": "8595:263:11",
													"nodeType": "YulBlock",
													"src": "8595:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8641:83:11",
																"nodeType": "YulBlock",
																"src": "8641:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8643:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8643:77:11"
																			},
																			"nativeSrc": "8643:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8643:79:11"
																		},
																		"nativeSrc": "8643:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8643:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8616:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8616:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8625:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8625:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:11"
																		},
																		"nativeSrc": "8612:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8637:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8637:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8608:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:11"
																},
																"nativeSrc": "8608:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8608:32:11"
															},
															"nativeSrc": "8605:119:11",
															"nodeType": "YulIf",
															"src": "8605:119:11"
														},
														{
															"nativeSrc": "8734:117:11",
															"nodeType": "YulBlock",
															"src": "8734:117:11",
															"statements": [
																{
																	"nativeSrc": "8749:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8749:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8763:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8763:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8753:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8753:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8778:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8778:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8813:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8813:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8824:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8824:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8809:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8809:3:11"
																				},
																				"nativeSrc": "8809:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8809:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8833:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8788:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8788:20:11"
																		},
																		"nativeSrc": "8788:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8788:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8778:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8778:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8529:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8565:9:11",
														"nodeType": "YulTypedName",
														"src": "8565:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8576:7:11",
														"nodeType": "YulTypedName",
														"src": "8576:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8588:6:11",
														"nodeType": "YulTypedName",
														"src": "8588:6:11",
														"type": ""
													}
												],
												"src": "8529:329:11"
											},
											{
												"body": {
													"nativeSrc": "8960:73:11",
													"nodeType": "YulBlock",
													"src": "8960:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8977:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8977:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8982:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8982:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8970:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8970:6:11"
																},
																"nativeSrc": "8970:19:11",
																"nodeType": "YulFunctionCall",
																"src": "8970:19:11"
															},
															"nativeSrc": "8970:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "8970:19:11"
														},
														{
															"nativeSrc": "8998:29:11",
															"nodeType": "YulAssignment",
															"src": "8998:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9017:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9017:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9022:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9022:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9013:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9013:3:11"
																},
																"nativeSrc": "9013:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9013:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8998:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "8998:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8864:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8932:3:11",
														"nodeType": "YulTypedName",
														"src": "8932:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8937:6:11",
														"nodeType": "YulTypedName",
														"src": "8937:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8948:11:11",
														"nodeType": "YulTypedName",
														"src": "8948:11:11",
														"type": ""
													}
												],
												"src": "8864:169:11"
											},
											{
												"body": {
													"nativeSrc": "9145:63:11",
													"nodeType": "YulBlock",
													"src": "9145:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9167:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9167:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9175:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9175:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:11"
																		},
																		"nativeSrc": "9163:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9163:14:11"
																	},
																	{
																		"hexValue": "506f6f6c20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "9179:21:11",
																		"nodeType": "YulLiteral",
																		"src": "9179:21:11",
																		"type": "",
																		"value": "Pool does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9156:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9156:6:11"
																},
																"nativeSrc": "9156:45:11",
																"nodeType": "YulFunctionCall",
																"src": "9156:45:11"
															},
															"nativeSrc": "9156:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "9156:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
												"nativeSrc": "9039:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9137:6:11",
														"nodeType": "YulTypedName",
														"src": "9137:6:11",
														"type": ""
													}
												],
												"src": "9039:169:11"
											},
											{
												"body": {
													"nativeSrc": "9360:220:11",
													"nodeType": "YulBlock",
													"src": "9360:220:11",
													"statements": [
														{
															"nativeSrc": "9370:74:11",
															"nodeType": "YulAssignment",
															"src": "9370:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9436:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9436:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9441:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9377:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9377:58:11"
																},
																"nativeSrc": "9377:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9377:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9370:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9542:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																	"nativeSrc": "9453:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9453:88:11"
																},
																"nativeSrc": "9453:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9453:93:11"
															},
															"nativeSrc": "9453:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9453:93:11"
														},
														{
															"nativeSrc": "9555:19:11",
															"nodeType": "YulAssignment",
															"src": "9555:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9566:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9566:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9571:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9571:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9562:3:11"
																},
																"nativeSrc": "9562:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9562:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9555:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9214:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9348:3:11",
														"nodeType": "YulTypedName",
														"src": "9348:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9356:3:11",
														"nodeType": "YulTypedName",
														"src": "9356:3:11",
														"type": ""
													}
												],
												"src": "9214:366:11"
											},
											{
												"body": {
													"nativeSrc": "9757:248:11",
													"nodeType": "YulBlock",
													"src": "9757:248:11",
													"statements": [
														{
															"nativeSrc": "9767:26:11",
															"nodeType": "YulAssignment",
															"src": "9767:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9779:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9779:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9790:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9790:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9775:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9775:3:11"
																},
																"nativeSrc": "9775:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9775:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9767:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9767:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9814:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9825:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9825:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:11"
																		},
																		"nativeSrc": "9810:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9810:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9833:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9833:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9839:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9839:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9829:3:11"
																		},
																		"nativeSrc": "9829:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9829:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9803:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:11"
																},
																"nativeSrc": "9803:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9803:47:11"
															},
															"nativeSrc": "9803:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9803:47:11"
														},
														{
															"nativeSrc": "9859:139:11",
															"nodeType": "YulAssignment",
															"src": "9859:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9993:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9993:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9867:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9867:124:11"
																},
																"nativeSrc": "9867:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9867:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9859:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9859:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9586:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9737:9:11",
														"nodeType": "YulTypedName",
														"src": "9737:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9752:4:11",
														"nodeType": "YulTypedName",
														"src": "9752:4:11",
														"type": ""
													}
												],
												"src": "9586:419:11"
											},
											{
												"body": {
													"nativeSrc": "10039:152:11",
													"nodeType": "YulBlock",
													"src": "10039:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10056:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10056:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10059:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10059:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10049:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10049:6:11"
																},
																"nativeSrc": "10049:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10049:88:11"
															},
															"nativeSrc": "10049:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10049:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10153:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10153:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10156:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10156:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10146:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10146:6:11"
																},
																"nativeSrc": "10146:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10146:15:11"
															},
															"nativeSrc": "10146:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10146:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10177:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10177:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10180:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10180:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:11"
																},
																"nativeSrc": "10170:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10170:15:11"
															},
															"nativeSrc": "10170:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10170:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10011:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10011:180:11"
											},
											{
												"body": {
													"nativeSrc": "10241:147:11",
													"nodeType": "YulBlock",
													"src": "10241:147:11",
													"statements": [
														{
															"nativeSrc": "10251:25:11",
															"nodeType": "YulAssignment",
															"src": "10251:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10274:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10274:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10256:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10256:17:11"
																},
																"nativeSrc": "10256:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10256:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10251:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10251:1:11"
																}
															]
														},
														{
															"nativeSrc": "10285:25:11",
															"nodeType": "YulAssignment",
															"src": "10285:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10308:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10308:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10290:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10290:17:11"
																},
																"nativeSrc": "10290:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10290:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10285:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10285:1:11"
																}
															]
														},
														{
															"nativeSrc": "10319:16:11",
															"nodeType": "YulAssignment",
															"src": "10319:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10330:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10330:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10333:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10333:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10326:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:11"
																},
																"nativeSrc": "10326:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10326:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10319:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10319:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10359:22:11",
																"nodeType": "YulBlock",
																"src": "10359:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10361:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10361:16:11"
																			},
																			"nativeSrc": "10361:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10361:18:11"
																		},
																		"nativeSrc": "10361:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10361:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10351:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10351:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10354:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10354:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10348:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10348:2:11"
																},
																"nativeSrc": "10348:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10348:10:11"
															},
															"nativeSrc": "10345:36:11",
															"nodeType": "YulIf",
															"src": "10345:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10197:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10228:1:11",
														"nodeType": "YulTypedName",
														"src": "10228:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10231:1:11",
														"nodeType": "YulTypedName",
														"src": "10231:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10237:3:11",
														"nodeType": "YulTypedName",
														"src": "10237:3:11",
														"type": ""
													}
												],
												"src": "10197:191:11"
											},
											{
												"body": {
													"nativeSrc": "10500:61:11",
													"nodeType": "YulBlock",
													"src": "10500:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10522:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10522:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10530:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10518:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10518:3:11"
																		},
																		"nativeSrc": "10518:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10518:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nativeSrc": "10534:19:11",
																		"nodeType": "YulLiteral",
																		"src": "10534:19:11",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10511:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:11"
																},
																"nativeSrc": "10511:43:11",
																"nodeType": "YulFunctionCall",
																"src": "10511:43:11"
															},
															"nativeSrc": "10511:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "10511:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
												"nativeSrc": "10394:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10492:6:11",
														"nodeType": "YulTypedName",
														"src": "10492:6:11",
														"type": ""
													}
												],
												"src": "10394:167:11"
											},
											{
												"body": {
													"nativeSrc": "10713:220:11",
													"nodeType": "YulBlock",
													"src": "10713:220:11",
													"statements": [
														{
															"nativeSrc": "10723:74:11",
															"nodeType": "YulAssignment",
															"src": "10723:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10789:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10789:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10794:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10794:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10730:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10730:58:11"
																},
																"nativeSrc": "10730:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10730:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10723:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10895:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																	"nativeSrc": "10806:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10806:88:11"
																},
																"nativeSrc": "10806:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10806:93:11"
															},
															"nativeSrc": "10806:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10806:93:11"
														},
														{
															"nativeSrc": "10908:19:11",
															"nodeType": "YulAssignment",
															"src": "10908:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10919:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10919:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10924:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10924:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10915:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10915:3:11"
																},
																"nativeSrc": "10915:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10915:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10908:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10567:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10701:3:11",
														"nodeType": "YulTypedName",
														"src": "10701:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10709:3:11",
														"nodeType": "YulTypedName",
														"src": "10709:3:11",
														"type": ""
													}
												],
												"src": "10567:366:11"
											},
											{
												"body": {
													"nativeSrc": "11110:248:11",
													"nodeType": "YulBlock",
													"src": "11110:248:11",
													"statements": [
														{
															"nativeSrc": "11120:26:11",
															"nodeType": "YulAssignment",
															"src": "11120:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11132:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11132:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11143:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11143:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11128:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11128:3:11"
																},
																"nativeSrc": "11128:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11128:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11120:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11120:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11167:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11167:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11178:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11178:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11163:3:11"
																		},
																		"nativeSrc": "11163:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11163:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11186:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11186:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11192:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11192:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11182:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11182:3:11"
																		},
																		"nativeSrc": "11182:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11182:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11156:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11156:6:11"
																},
																"nativeSrc": "11156:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11156:47:11"
															},
															"nativeSrc": "11156:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11156:47:11"
														},
														{
															"nativeSrc": "11212:139:11",
															"nodeType": "YulAssignment",
															"src": "11212:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11346:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11346:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11220:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11220:124:11"
																},
																"nativeSrc": "11220:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11220:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11212:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11212:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10939:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11090:9:11",
														"nodeType": "YulTypedName",
														"src": "11090:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11105:4:11",
														"nodeType": "YulTypedName",
														"src": "11105:4:11",
														"type": ""
													}
												],
												"src": "10939:419:11"
											},
											{
												"body": {
													"nativeSrc": "11470:64:11",
													"nodeType": "YulBlock",
													"src": "11470:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11492:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11492:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11500:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11500:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11488:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11488:3:11"
																		},
																		"nativeSrc": "11488:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11488:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11504:22:11",
																		"nodeType": "YulLiteral",
																		"src": "11504:22:11",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11481:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:11"
																},
																"nativeSrc": "11481:46:11",
																"nodeType": "YulFunctionCall",
																"src": "11481:46:11"
															},
															"nativeSrc": "11481:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "11481:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "11364:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11462:6:11",
														"nodeType": "YulTypedName",
														"src": "11462:6:11",
														"type": ""
													}
												],
												"src": "11364:170:11"
											},
											{
												"body": {
													"nativeSrc": "11686:220:11",
													"nodeType": "YulBlock",
													"src": "11686:220:11",
													"statements": [
														{
															"nativeSrc": "11696:74:11",
															"nodeType": "YulAssignment",
															"src": "11696:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11762:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11762:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11767:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11767:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11703:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11703:58:11"
																},
																"nativeSrc": "11703:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11703:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11696:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11696:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11868:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11868:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "11779:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11779:88:11"
																},
																"nativeSrc": "11779:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11779:93:11"
															},
															"nativeSrc": "11779:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11779:93:11"
														},
														{
															"nativeSrc": "11881:19:11",
															"nodeType": "YulAssignment",
															"src": "11881:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11892:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11897:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11888:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11888:3:11"
																},
																"nativeSrc": "11888:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11888:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11881:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11881:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11540:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11674:3:11",
														"nodeType": "YulTypedName",
														"src": "11674:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11682:3:11",
														"nodeType": "YulTypedName",
														"src": "11682:3:11",
														"type": ""
													}
												],
												"src": "11540:366:11"
											},
											{
												"body": {
													"nativeSrc": "12083:248:11",
													"nodeType": "YulBlock",
													"src": "12083:248:11",
													"statements": [
														{
															"nativeSrc": "12093:26:11",
															"nodeType": "YulAssignment",
															"src": "12093:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12105:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12105:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12116:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12116:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12101:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:11"
																},
																"nativeSrc": "12101:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12101:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12093:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12093:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12140:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12140:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12151:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12151:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12136:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12136:3:11"
																		},
																		"nativeSrc": "12136:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12136:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12159:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12159:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12165:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12165:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12155:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:11"
																		},
																		"nativeSrc": "12155:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12155:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:11"
																},
																"nativeSrc": "12129:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12129:47:11"
															},
															"nativeSrc": "12129:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12129:47:11"
														},
														{
															"nativeSrc": "12185:139:11",
															"nodeType": "YulAssignment",
															"src": "12185:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12319:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12319:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12193:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12193:124:11"
																},
																"nativeSrc": "12193:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12193:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12185:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12185:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11912:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12063:9:11",
														"nodeType": "YulTypedName",
														"src": "12063:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12078:4:11",
														"nodeType": "YulTypedName",
														"src": "12078:4:11",
														"type": ""
													}
												],
												"src": "11912:419:11"
											},
											{
												"body": {
													"nativeSrc": "12443:67:11",
													"nodeType": "YulBlock",
													"src": "12443:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12465:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12465:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12473:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12473:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12461:3:11"
																		},
																		"nativeSrc": "12461:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:14:11"
																	},
																	{
																		"hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "12477:25:11",
																		"nodeType": "YulLiteral",
																		"src": "12477:25:11",
																		"type": "",
																		"value": "Tokens are still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12454:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:11"
																},
																"nativeSrc": "12454:49:11",
																"nodeType": "YulFunctionCall",
																"src": "12454:49:11"
															},
															"nativeSrc": "12454:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "12454:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
												"nativeSrc": "12337:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12435:6:11",
														"nodeType": "YulTypedName",
														"src": "12435:6:11",
														"type": ""
													}
												],
												"src": "12337:173:11"
											},
											{
												"body": {
													"nativeSrc": "12662:220:11",
													"nodeType": "YulBlock",
													"src": "12662:220:11",
													"statements": [
														{
															"nativeSrc": "12672:74:11",
															"nodeType": "YulAssignment",
															"src": "12672:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12738:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12738:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12743:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12743:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12679:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12679:58:11"
																},
																"nativeSrc": "12679:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12679:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12672:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12672:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12844:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
																	"nativeSrc": "12755:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12755:88:11"
																},
																"nativeSrc": "12755:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12755:93:11"
															},
															"nativeSrc": "12755:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12755:93:11"
														},
														{
															"nativeSrc": "12857:19:11",
															"nodeType": "YulAssignment",
															"src": "12857:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12868:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12868:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12873:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12873:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12864:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12864:3:11"
																},
																"nativeSrc": "12864:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12864:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12857:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12857:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12516:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12650:3:11",
														"nodeType": "YulTypedName",
														"src": "12650:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12658:3:11",
														"nodeType": "YulTypedName",
														"src": "12658:3:11",
														"type": ""
													}
												],
												"src": "12516:366:11"
											},
											{
												"body": {
													"nativeSrc": "13059:248:11",
													"nodeType": "YulBlock",
													"src": "13059:248:11",
													"statements": [
														{
															"nativeSrc": "13069:26:11",
															"nodeType": "YulAssignment",
															"src": "13069:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13081:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13081:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13092:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13092:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13077:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13077:3:11"
																},
																"nativeSrc": "13077:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13077:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13069:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13069:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13116:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13116:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13127:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13127:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13112:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13112:3:11"
																		},
																		"nativeSrc": "13112:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13112:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13135:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13135:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13141:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13141:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13131:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13131:3:11"
																		},
																		"nativeSrc": "13131:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13131:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13105:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13105:6:11"
																},
																"nativeSrc": "13105:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13105:47:11"
															},
															"nativeSrc": "13105:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13105:47:11"
														},
														{
															"nativeSrc": "13161:139:11",
															"nodeType": "YulAssignment",
															"src": "13161:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13295:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13295:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13169:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13169:124:11"
																},
																"nativeSrc": "13169:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13169:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13161:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13161:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12888:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13039:9:11",
														"nodeType": "YulTypedName",
														"src": "13039:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13054:4:11",
														"nodeType": "YulTypedName",
														"src": "13054:4:11",
														"type": ""
													}
												],
												"src": "12888:419:11"
											},
											{
												"body": {
													"nativeSrc": "13358:149:11",
													"nodeType": "YulBlock",
													"src": "13358:149:11",
													"statements": [
														{
															"nativeSrc": "13368:25:11",
															"nodeType": "YulAssignment",
															"src": "13368:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13391:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13391:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13373:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13373:17:11"
																},
																"nativeSrc": "13373:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13373:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13368:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13368:1:11"
																}
															]
														},
														{
															"nativeSrc": "13402:25:11",
															"nodeType": "YulAssignment",
															"src": "13402:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13425:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13425:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13407:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13407:17:11"
																},
																"nativeSrc": "13407:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13407:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13402:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13402:1:11"
																}
															]
														},
														{
															"nativeSrc": "13436:17:11",
															"nodeType": "YulAssignment",
															"src": "13436:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13448:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13448:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13451:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13451:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13444:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13444:3:11"
																},
																"nativeSrc": "13444:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13444:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13436:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13436:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13478:22:11",
																"nodeType": "YulBlock",
																"src": "13478:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13480:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13480:16:11"
																			},
																			"nativeSrc": "13480:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13480:18:11"
																		},
																		"nativeSrc": "13480:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13480:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13469:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13469:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13475:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13475:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13466:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13466:2:11"
																},
																"nativeSrc": "13466:11:11",
																"nodeType": "YulFunctionCall",
																"src": "13466:11:11"
															},
															"nativeSrc": "13463:37:11",
															"nodeType": "YulIf",
															"src": "13463:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13313:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13344:1:11",
														"nodeType": "YulTypedName",
														"src": "13344:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13347:1:11",
														"nodeType": "YulTypedName",
														"src": "13347:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13353:4:11",
														"nodeType": "YulTypedName",
														"src": "13353:4:11",
														"type": ""
													}
												],
												"src": "13313:194:11"
											},
											{
												"body": {
													"nativeSrc": "13619:65:11",
													"nodeType": "YulBlock",
													"src": "13619:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13641:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13641:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13649:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13649:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13637:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13637:3:11"
																		},
																		"nativeSrc": "13637:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13637:14:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "13653:23:11",
																		"nodeType": "YulLiteral",
																		"src": "13653:23:11",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13630:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13630:6:11"
																},
																"nativeSrc": "13630:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13630:47:11"
															},
															"nativeSrc": "13630:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13630:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "13513:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13611:6:11",
														"nodeType": "YulTypedName",
														"src": "13611:6:11",
														"type": ""
													}
												],
												"src": "13513:171:11"
											},
											{
												"body": {
													"nativeSrc": "13836:220:11",
													"nodeType": "YulBlock",
													"src": "13836:220:11",
													"statements": [
														{
															"nativeSrc": "13846:74:11",
															"nodeType": "YulAssignment",
															"src": "13846:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13912:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13917:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13917:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13853:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13853:58:11"
																},
																"nativeSrc": "13853:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13853:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13846:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14018:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14018:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "13929:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13929:88:11"
																},
																"nativeSrc": "13929:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13929:93:11"
															},
															"nativeSrc": "13929:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13929:93:11"
														},
														{
															"nativeSrc": "14031:19:11",
															"nodeType": "YulAssignment",
															"src": "14031:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14042:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14042:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14047:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14047:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14038:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14038:3:11"
																},
																"nativeSrc": "14038:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14038:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13690:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13824:3:11",
														"nodeType": "YulTypedName",
														"src": "13824:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13832:3:11",
														"nodeType": "YulTypedName",
														"src": "13832:3:11",
														"type": ""
													}
												],
												"src": "13690:366:11"
											},
											{
												"body": {
													"nativeSrc": "14233:248:11",
													"nodeType": "YulBlock",
													"src": "14233:248:11",
													"statements": [
														{
															"nativeSrc": "14243:26:11",
															"nodeType": "YulAssignment",
															"src": "14243:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14255:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14255:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14266:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14266:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14251:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14251:3:11"
																},
																"nativeSrc": "14251:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14251:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14243:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14243:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14290:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14290:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14301:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14301:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14286:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14286:3:11"
																		},
																		"nativeSrc": "14286:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14286:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14309:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14309:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14315:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14315:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14305:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14305:3:11"
																		},
																		"nativeSrc": "14305:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14305:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14279:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14279:6:11"
																},
																"nativeSrc": "14279:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14279:47:11"
															},
															"nativeSrc": "14279:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14279:47:11"
														},
														{
															"nativeSrc": "14335:139:11",
															"nodeType": "YulAssignment",
															"src": "14335:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14469:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14469:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14343:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14343:124:11"
																},
																"nativeSrc": "14343:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14343:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14335:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14335:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14062:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14213:9:11",
														"nodeType": "YulTypedName",
														"src": "14213:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14228:4:11",
														"nodeType": "YulTypedName",
														"src": "14228:4:11",
														"type": ""
													}
												],
												"src": "14062:419:11"
											},
											{
												"body": {
													"nativeSrc": "14593:62:11",
													"nodeType": "YulBlock",
													"src": "14593:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14615:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14615:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14623:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14623:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14611:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14611:3:11"
																		},
																		"nativeSrc": "14611:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14611:14:11"
																	},
																	{
																		"hexValue": "506f6f6c206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "14627:20:11",
																		"nodeType": "YulLiteral",
																		"src": "14627:20:11",
																		"type": "",
																		"value": "Pool is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14604:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14604:6:11"
																},
																"nativeSrc": "14604:44:11",
																"nodeType": "YulFunctionCall",
																"src": "14604:44:11"
															},
															"nativeSrc": "14604:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "14604:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
												"nativeSrc": "14487:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14585:6:11",
														"nodeType": "YulTypedName",
														"src": "14585:6:11",
														"type": ""
													}
												],
												"src": "14487:168:11"
											},
											{
												"body": {
													"nativeSrc": "14807:220:11",
													"nodeType": "YulBlock",
													"src": "14807:220:11",
													"statements": [
														{
															"nativeSrc": "14817:74:11",
															"nodeType": "YulAssignment",
															"src": "14817:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14883:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14883:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14888:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14888:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14824:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14824:58:11"
																},
																"nativeSrc": "14824:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14824:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14817:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14989:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14989:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
																	"nativeSrc": "14900:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14900:88:11"
																},
																"nativeSrc": "14900:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14900:93:11"
															},
															"nativeSrc": "14900:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14900:93:11"
														},
														{
															"nativeSrc": "15002:19:11",
															"nodeType": "YulAssignment",
															"src": "15002:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15013:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15013:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15018:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15018:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15009:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15009:3:11"
																},
																"nativeSrc": "15009:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15009:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15002:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15002:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14661:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14795:3:11",
														"nodeType": "YulTypedName",
														"src": "14795:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14803:3:11",
														"nodeType": "YulTypedName",
														"src": "14803:3:11",
														"type": ""
													}
												],
												"src": "14661:366:11"
											},
											{
												"body": {
													"nativeSrc": "15204:248:11",
													"nodeType": "YulBlock",
													"src": "15204:248:11",
													"statements": [
														{
															"nativeSrc": "15214:26:11",
															"nodeType": "YulAssignment",
															"src": "15214:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15226:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15226:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15237:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15237:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15222:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15222:3:11"
																},
																"nativeSrc": "15222:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15222:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15214:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15214:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15261:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15261:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15272:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15272:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15257:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:11"
																		},
																		"nativeSrc": "15257:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15257:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15280:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15280:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15286:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15286:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15276:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15276:3:11"
																		},
																		"nativeSrc": "15276:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15276:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15250:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:11"
																},
																"nativeSrc": "15250:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15250:47:11"
															},
															"nativeSrc": "15250:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15250:47:11"
														},
														{
															"nativeSrc": "15306:139:11",
															"nodeType": "YulAssignment",
															"src": "15306:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15440:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15440:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15314:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15314:124:11"
																},
																"nativeSrc": "15314:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15314:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15306:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15306:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15033:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15184:9:11",
														"nodeType": "YulTypedName",
														"src": "15184:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15199:4:11",
														"nodeType": "YulTypedName",
														"src": "15199:4:11",
														"type": ""
													}
												],
												"src": "15033:419:11"
											},
											{
												"body": {
													"nativeSrc": "15564:58:11",
													"nodeType": "YulBlock",
													"src": "15564:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15586:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15586:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15594:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15594:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15582:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15582:3:11"
																		},
																		"nativeSrc": "15582:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15582:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "15598:16:11",
																		"nodeType": "YulLiteral",
																		"src": "15598:16:11",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15575:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15575:6:11"
																},
																"nativeSrc": "15575:40:11",
																"nodeType": "YulFunctionCall",
																"src": "15575:40:11"
															},
															"nativeSrc": "15575:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "15575:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "15458:164:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15556:6:11",
														"nodeType": "YulTypedName",
														"src": "15556:6:11",
														"type": ""
													}
												],
												"src": "15458:164:11"
											},
											{
												"body": {
													"nativeSrc": "15774:220:11",
													"nodeType": "YulBlock",
													"src": "15774:220:11",
													"statements": [
														{
															"nativeSrc": "15784:74:11",
															"nodeType": "YulAssignment",
															"src": "15784:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15850:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15850:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15855:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15855:2:11",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15791:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15791:58:11"
																},
																"nativeSrc": "15791:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15791:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15784:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15784:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15956:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15956:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "15867:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15867:88:11"
																},
																"nativeSrc": "15867:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15867:93:11"
															},
															"nativeSrc": "15867:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15867:93:11"
														},
														{
															"nativeSrc": "15969:19:11",
															"nodeType": "YulAssignment",
															"src": "15969:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15980:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15980:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15985:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15985:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15976:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15976:3:11"
																},
																"nativeSrc": "15976:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15976:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15969:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15628:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15762:3:11",
														"nodeType": "YulTypedName",
														"src": "15762:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15770:3:11",
														"nodeType": "YulTypedName",
														"src": "15770:3:11",
														"type": ""
													}
												],
												"src": "15628:366:11"
											},
											{
												"body": {
													"nativeSrc": "16171:248:11",
													"nodeType": "YulBlock",
													"src": "16171:248:11",
													"statements": [
														{
															"nativeSrc": "16181:26:11",
															"nodeType": "YulAssignment",
															"src": "16181:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16193:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16193:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16204:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16204:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16189:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16189:3:11"
																},
																"nativeSrc": "16189:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16189:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16181:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16181:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16228:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16228:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16239:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16239:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16224:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16224:3:11"
																		},
																		"nativeSrc": "16224:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16224:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16247:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16247:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16253:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16253:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16243:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16243:3:11"
																		},
																		"nativeSrc": "16243:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16243:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16217:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16217:6:11"
																},
																"nativeSrc": "16217:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16217:47:11"
															},
															"nativeSrc": "16217:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16217:47:11"
														},
														{
															"nativeSrc": "16273:139:11",
															"nodeType": "YulAssignment",
															"src": "16273:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16407:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16407:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16281:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16281:124:11"
																},
																"nativeSrc": "16281:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16281:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16273:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16273:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16000:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16151:9:11",
														"nodeType": "YulTypedName",
														"src": "16151:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16166:4:11",
														"nodeType": "YulTypedName",
														"src": "16166:4:11",
														"type": ""
													}
												],
												"src": "16000:419:11"
											},
											{
												"body": {
													"nativeSrc": "16531:70:11",
													"nodeType": "YulBlock",
													"src": "16531:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16553:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16553:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16561:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16561:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16549:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16549:3:11"
																		},
																		"nativeSrc": "16549:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16549:14:11"
																	},
																	{
																		"hexValue": "416d6f756e742062656c6f77206d696e696d756d207374616b65",
																		"kind": "string",
																		"nativeSrc": "16565:28:11",
																		"nodeType": "YulLiteral",
																		"src": "16565:28:11",
																		"type": "",
																		"value": "Amount below minimum stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16542:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16542:6:11"
																},
																"nativeSrc": "16542:52:11",
																"nodeType": "YulFunctionCall",
																"src": "16542:52:11"
															},
															"nativeSrc": "16542:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "16542:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5",
												"nativeSrc": "16425:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16523:6:11",
														"nodeType": "YulTypedName",
														"src": "16523:6:11",
														"type": ""
													}
												],
												"src": "16425:176:11"
											},
											{
												"body": {
													"nativeSrc": "16753:220:11",
													"nodeType": "YulBlock",
													"src": "16753:220:11",
													"statements": [
														{
															"nativeSrc": "16763:74:11",
															"nodeType": "YulAssignment",
															"src": "16763:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16829:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16829:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16834:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16834:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16770:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16770:58:11"
																},
																"nativeSrc": "16770:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16770:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16763:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16763:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16935:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16935:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5",
																	"nativeSrc": "16846:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16846:88:11"
																},
																"nativeSrc": "16846:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16846:93:11"
															},
															"nativeSrc": "16846:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16846:93:11"
														},
														{
															"nativeSrc": "16948:19:11",
															"nodeType": "YulAssignment",
															"src": "16948:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16959:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16959:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16955:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16955:3:11"
																},
																"nativeSrc": "16955:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16955:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16948:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16948:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16607:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16741:3:11",
														"nodeType": "YulTypedName",
														"src": "16741:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16749:3:11",
														"nodeType": "YulTypedName",
														"src": "16749:3:11",
														"type": ""
													}
												],
												"src": "16607:366:11"
											},
											{
												"body": {
													"nativeSrc": "17150:248:11",
													"nodeType": "YulBlock",
													"src": "17150:248:11",
													"statements": [
														{
															"nativeSrc": "17160:26:11",
															"nodeType": "YulAssignment",
															"src": "17160:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17172:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17172:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17183:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17183:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17168:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17168:3:11"
																},
																"nativeSrc": "17168:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17168:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17160:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17160:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17207:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17207:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17218:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17218:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17203:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17203:3:11"
																		},
																		"nativeSrc": "17203:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17203:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17226:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17226:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17232:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17232:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17222:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17222:3:11"
																		},
																		"nativeSrc": "17222:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17222:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17196:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17196:6:11"
																},
																"nativeSrc": "17196:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17196:47:11"
															},
															"nativeSrc": "17196:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17196:47:11"
														},
														{
															"nativeSrc": "17252:139:11",
															"nodeType": "YulAssignment",
															"src": "17252:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17386:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17386:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17260:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17260:124:11"
																},
																"nativeSrc": "17260:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17260:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17252:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17252:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16979:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17130:9:11",
														"nodeType": "YulTypedName",
														"src": "17130:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17145:4:11",
														"nodeType": "YulTypedName",
														"src": "17145:4:11",
														"type": ""
													}
												],
												"src": "16979:419:11"
											},
											{
												"body": {
													"nativeSrc": "17510:65:11",
													"nodeType": "YulBlock",
													"src": "17510:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17532:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17532:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17540:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17540:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17528:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17528:3:11"
																		},
																		"nativeSrc": "17528:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17528:14:11"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
																		"kind": "string",
																		"nativeSrc": "17544:23:11",
																		"nodeType": "YulLiteral",
																		"src": "17544:23:11",
																		"type": "",
																		"value": "Invalid staking token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17521:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17521:6:11"
																},
																"nativeSrc": "17521:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17521:47:11"
															},
															"nativeSrc": "17521:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17521:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
												"nativeSrc": "17404:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17502:6:11",
														"nodeType": "YulTypedName",
														"src": "17502:6:11",
														"type": ""
													}
												],
												"src": "17404:171:11"
											},
											{
												"body": {
													"nativeSrc": "17727:220:11",
													"nodeType": "YulBlock",
													"src": "17727:220:11",
													"statements": [
														{
															"nativeSrc": "17737:74:11",
															"nodeType": "YulAssignment",
															"src": "17737:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17803:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17803:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17808:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17808:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17744:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17744:58:11"
																},
																"nativeSrc": "17744:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17744:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17737:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17737:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17909:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17909:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																	"nativeSrc": "17820:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17820:88:11"
																},
																"nativeSrc": "17820:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17820:93:11"
															},
															"nativeSrc": "17820:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17820:93:11"
														},
														{
															"nativeSrc": "17922:19:11",
															"nodeType": "YulAssignment",
															"src": "17922:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17933:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17933:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17938:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17929:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17929:3:11"
																},
																"nativeSrc": "17929:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17929:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17922:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17922:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17581:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17715:3:11",
														"nodeType": "YulTypedName",
														"src": "17715:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17723:3:11",
														"nodeType": "YulTypedName",
														"src": "17723:3:11",
														"type": ""
													}
												],
												"src": "17581:366:11"
											},
											{
												"body": {
													"nativeSrc": "18124:248:11",
													"nodeType": "YulBlock",
													"src": "18124:248:11",
													"statements": [
														{
															"nativeSrc": "18134:26:11",
															"nodeType": "YulAssignment",
															"src": "18134:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18146:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18146:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18157:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18157:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18142:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18142:3:11"
																},
																"nativeSrc": "18142:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18142:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18134:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18134:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18181:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18192:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18192:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18177:3:11"
																		},
																		"nativeSrc": "18177:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18177:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18200:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18200:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18206:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18206:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18196:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18196:3:11"
																		},
																		"nativeSrc": "18196:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18196:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18170:6:11"
																},
																"nativeSrc": "18170:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18170:47:11"
															},
															"nativeSrc": "18170:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18170:47:11"
														},
														{
															"nativeSrc": "18226:139:11",
															"nodeType": "YulAssignment",
															"src": "18226:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18360:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18360:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18234:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18234:124:11"
																},
																"nativeSrc": "18234:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18234:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18226:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18226:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17953:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18104:9:11",
														"nodeType": "YulTypedName",
														"src": "18104:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18119:4:11",
														"nodeType": "YulTypedName",
														"src": "18119:4:11",
														"type": ""
													}
												],
												"src": "17953:419:11"
											},
											{
												"body": {
													"nativeSrc": "18484:64:11",
													"nodeType": "YulBlock",
													"src": "18484:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18506:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18506:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18514:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18514:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18502:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18502:3:11"
																		},
																		"nativeSrc": "18502:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18502:14:11"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "18518:22:11",
																		"nodeType": "YulLiteral",
																		"src": "18518:22:11",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18495:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:11"
																},
																"nativeSrc": "18495:46:11",
																"nodeType": "YulFunctionCall",
																"src": "18495:46:11"
															},
															"nativeSrc": "18495:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "18495:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "18378:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18476:6:11",
														"nodeType": "YulTypedName",
														"src": "18476:6:11",
														"type": ""
													}
												],
												"src": "18378:170:11"
											},
											{
												"body": {
													"nativeSrc": "18700:220:11",
													"nodeType": "YulBlock",
													"src": "18700:220:11",
													"statements": [
														{
															"nativeSrc": "18710:74:11",
															"nodeType": "YulAssignment",
															"src": "18710:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18781:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18781:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18717:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18717:58:11"
																},
																"nativeSrc": "18717:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18717:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18710:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18710:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18882:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "18793:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18793:88:11"
																},
																"nativeSrc": "18793:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18793:93:11"
															},
															"nativeSrc": "18793:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18793:93:11"
														},
														{
															"nativeSrc": "18895:19:11",
															"nodeType": "YulAssignment",
															"src": "18895:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18906:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18906:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18911:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18911:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18902:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18902:3:11"
																},
																"nativeSrc": "18902:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18902:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18895:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18895:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18554:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18688:3:11",
														"nodeType": "YulTypedName",
														"src": "18688:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18696:3:11",
														"nodeType": "YulTypedName",
														"src": "18696:3:11",
														"type": ""
													}
												],
												"src": "18554:366:11"
											},
											{
												"body": {
													"nativeSrc": "19097:248:11",
													"nodeType": "YulBlock",
													"src": "19097:248:11",
													"statements": [
														{
															"nativeSrc": "19107:26:11",
															"nodeType": "YulAssignment",
															"src": "19107:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19119:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19119:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19130:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19130:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19115:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19115:3:11"
																},
																"nativeSrc": "19115:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19115:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19107:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19107:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19154:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19154:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19165:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19165:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19150:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19150:3:11"
																		},
																		"nativeSrc": "19150:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19150:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19173:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19173:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19179:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19179:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19169:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:11"
																		},
																		"nativeSrc": "19169:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19169:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19143:6:11"
																},
																"nativeSrc": "19143:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19143:47:11"
															},
															"nativeSrc": "19143:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19143:47:11"
														},
														{
															"nativeSrc": "19199:139:11",
															"nodeType": "YulAssignment",
															"src": "19199:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19333:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19333:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19207:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19207:124:11"
																},
																"nativeSrc": "19207:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19207:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19199:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19199:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18926:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19077:9:11",
														"nodeType": "YulTypedName",
														"src": "19077:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19092:4:11",
														"nodeType": "YulTypedName",
														"src": "19092:4:11",
														"type": ""
													}
												],
												"src": "18926:419:11"
											},
											{
												"body": {
													"nativeSrc": "19457:115:11",
													"nodeType": "YulBlock",
													"src": "19457:115:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19479:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19479:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19487:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19487:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19475:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19475:3:11"
																		},
																		"nativeSrc": "19475:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19475:14:11"
																	},
																	{
																		"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "19491:34:11",
																		"nodeType": "YulLiteral",
																		"src": "19491:34:11",
																		"type": "",
																		"value": "Reward rate must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19468:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19468:6:11"
																},
																"nativeSrc": "19468:58:11",
																"nodeType": "YulFunctionCall",
																"src": "19468:58:11"
															},
															"nativeSrc": "19468:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "19468:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19547:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19547:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19555:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19555:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19543:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19543:3:11"
																		},
																		"nativeSrc": "19543:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19543:15:11"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "19560:4:11",
																		"nodeType": "YulLiteral",
																		"src": "19560:4:11",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19536:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19536:6:11"
																},
																"nativeSrc": "19536:29:11",
																"nodeType": "YulFunctionCall",
																"src": "19536:29:11"
															},
															"nativeSrc": "19536:29:11",
															"nodeType": "YulExpressionStatement",
															"src": "19536:29:11"
														}
													]
												},
												"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
												"nativeSrc": "19351:221:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19449:6:11",
														"nodeType": "YulTypedName",
														"src": "19449:6:11",
														"type": ""
													}
												],
												"src": "19351:221:11"
											},
											{
												"body": {
													"nativeSrc": "19724:220:11",
													"nodeType": "YulBlock",
													"src": "19724:220:11",
													"statements": [
														{
															"nativeSrc": "19734:74:11",
															"nodeType": "YulAssignment",
															"src": "19734:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19800:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19800:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19805:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19805:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19741:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19741:58:11"
																},
																"nativeSrc": "19741:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19741:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19734:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19734:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19906:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19906:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																	"nativeSrc": "19817:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19817:88:11"
																},
																"nativeSrc": "19817:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19817:93:11"
															},
															"nativeSrc": "19817:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19817:93:11"
														},
														{
															"nativeSrc": "19919:19:11",
															"nodeType": "YulAssignment",
															"src": "19919:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19930:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19930:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19935:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19926:3:11"
																},
																"nativeSrc": "19926:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19926:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19919:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19919:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19578:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19712:3:11",
														"nodeType": "YulTypedName",
														"src": "19712:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19720:3:11",
														"nodeType": "YulTypedName",
														"src": "19720:3:11",
														"type": ""
													}
												],
												"src": "19578:366:11"
											},
											{
												"body": {
													"nativeSrc": "20121:248:11",
													"nodeType": "YulBlock",
													"src": "20121:248:11",
													"statements": [
														{
															"nativeSrc": "20131:26:11",
															"nodeType": "YulAssignment",
															"src": "20131:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20143:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20143:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20154:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20154:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20139:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20139:3:11"
																},
																"nativeSrc": "20139:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20139:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20131:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20131:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20178:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20178:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20189:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20189:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20174:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20174:3:11"
																		},
																		"nativeSrc": "20174:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20174:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "20197:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20203:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20203:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20193:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20193:3:11"
																		},
																		"nativeSrc": "20193:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20193:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20167:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20167:6:11"
																},
																"nativeSrc": "20167:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20167:47:11"
															},
															"nativeSrc": "20167:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20167:47:11"
														},
														{
															"nativeSrc": "20223:139:11",
															"nodeType": "YulAssignment",
															"src": "20223:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20357:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "20357:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20231:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "20231:124:11"
																},
																"nativeSrc": "20231:131:11",
																"nodeType": "YulFunctionCall",
																"src": "20231:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20223:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20223:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19950:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20101:9:11",
														"nodeType": "YulTypedName",
														"src": "20101:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20116:4:11",
														"nodeType": "YulTypedName",
														"src": "20116:4:11",
														"type": ""
													}
												],
												"src": "19950:419:11"
											},
											{
												"body": {
													"nativeSrc": "20585:454:11",
													"nodeType": "YulBlock",
													"src": "20585:454:11",
													"statements": [
														{
															"nativeSrc": "20595:27:11",
															"nodeType": "YulAssignment",
															"src": "20595:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20607:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20607:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20618:3:11",
																		"nodeType": "YulLiteral",
																		"src": "20618:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20603:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20603:3:11"
																},
																"nativeSrc": "20603:19:11",
																"nodeType": "YulFunctionCall",
																"src": "20603:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20595:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20595:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20676:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20676:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20689:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20689:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20700:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20700:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20685:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20685:3:11"
																		},
																		"nativeSrc": "20685:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20685:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20632:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20632:43:11"
																},
																"nativeSrc": "20632:71:11",
																"nodeType": "YulFunctionCall",
																"src": "20632:71:11"
															},
															"nativeSrc": "20632:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "20632:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20757:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20757:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20770:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20770:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20781:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20781:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20766:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20766:3:11"
																		},
																		"nativeSrc": "20766:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20766:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20713:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20713:43:11"
																},
																"nativeSrc": "20713:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20713:72:11"
															},
															"nativeSrc": "20713:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20713:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20839:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20839:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20852:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20852:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20863:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20863:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20848:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20848:3:11"
																		},
																		"nativeSrc": "20848:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20848:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20795:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20795:43:11"
																},
																"nativeSrc": "20795:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20795:72:11"
															},
															"nativeSrc": "20795:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20795:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20921:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20921:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20934:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20934:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20945:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20945:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20930:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20930:3:11"
																		},
																		"nativeSrc": "20930:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20930:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20877:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20877:43:11"
																},
																"nativeSrc": "20877:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20877:72:11"
															},
															"nativeSrc": "20877:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20877:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "21003:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21003:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21016:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21016:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21027:3:11",
																				"nodeType": "YulLiteral",
																				"src": "21027:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21012:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21012:3:11"
																		},
																		"nativeSrc": "21012:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21012:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20959:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20959:43:11"
																},
																"nativeSrc": "20959:73:11",
																"nodeType": "YulFunctionCall",
																"src": "20959:73:11"
															},
															"nativeSrc": "20959:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "20959:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20375:664:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20525:9:11",
														"nodeType": "YulTypedName",
														"src": "20525:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20537:6:11",
														"nodeType": "YulTypedName",
														"src": "20537:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20545:6:11",
														"nodeType": "YulTypedName",
														"src": "20545:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20553:6:11",
														"nodeType": "YulTypedName",
														"src": "20553:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20561:6:11",
														"nodeType": "YulTypedName",
														"src": "20561:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20569:6:11",
														"nodeType": "YulTypedName",
														"src": "20569:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20580:4:11",
														"nodeType": "YulTypedName",
														"src": "20580:4:11",
														"type": ""
													}
												],
												"src": "20375:664:11"
											},
											{
												"body": {
													"nativeSrc": "21088:190:11",
													"nodeType": "YulBlock",
													"src": "21088:190:11",
													"statements": [
														{
															"nativeSrc": "21098:33:11",
															"nodeType": "YulAssignment",
															"src": "21098:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21125:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21125:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21107:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21107:17:11"
																},
																"nativeSrc": "21107:24:11",
																"nodeType": "YulFunctionCall",
																"src": "21107:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21098:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "21098:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21221:22:11",
																"nodeType": "YulBlock",
																"src": "21221:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21223:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "21223:16:11"
																			},
																			"nativeSrc": "21223:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "21223:18:11"
																		},
																		"nativeSrc": "21223:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "21223:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21146:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21146:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21153:66:11",
																		"nodeType": "YulLiteral",
																		"src": "21153:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21143:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "21143:2:11"
																},
																"nativeSrc": "21143:77:11",
																"nodeType": "YulFunctionCall",
																"src": "21143:77:11"
															},
															"nativeSrc": "21140:103:11",
															"nodeType": "YulIf",
															"src": "21140:103:11"
														},
														{
															"nativeSrc": "21252:20:11",
															"nodeType": "YulAssignment",
															"src": "21252:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21263:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21263:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21270:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21270:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21259:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21259:3:11"
																},
																"nativeSrc": "21259:13:11",
																"nodeType": "YulFunctionCall",
																"src": "21259:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21252:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21252:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "21045:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21074:5:11",
														"nodeType": "YulTypedName",
														"src": "21074:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21084:3:11",
														"nodeType": "YulTypedName",
														"src": "21084:3:11",
														"type": ""
													}
												],
												"src": "21045:233:11"
											},
											{
												"body": {
													"nativeSrc": "21332:362:11",
													"nodeType": "YulBlock",
													"src": "21332:362:11",
													"statements": [
														{
															"nativeSrc": "21342:25:11",
															"nodeType": "YulAssignment",
															"src": "21342:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21365:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21365:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21347:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21347:17:11"
																},
																"nativeSrc": "21347:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21347:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21342:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21342:1:11"
																}
															]
														},
														{
															"nativeSrc": "21376:25:11",
															"nodeType": "YulAssignment",
															"src": "21376:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21399:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21399:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21381:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21381:17:11"
																},
																"nativeSrc": "21381:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21381:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21376:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21376:1:11"
																}
															]
														},
														{
															"nativeSrc": "21410:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "21410:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21433:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21433:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21436:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21436:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21429:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21429:3:11"
																},
																"nativeSrc": "21429:9:11",
																"nodeType": "YulFunctionCall",
																"src": "21429:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "21414:11:11",
																	"nodeType": "YulTypedName",
																	"src": "21414:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21447:41:11",
															"nodeType": "YulAssignment",
															"src": "21447:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "21476:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "21476:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21458:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21458:17:11"
																},
																"nativeSrc": "21458:30:11",
																"nodeType": "YulFunctionCall",
																"src": "21458:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "21447:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "21447:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21665:22:11",
																"nodeType": "YulBlock",
																"src": "21665:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21667:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "21667:16:11"
																			},
																			"nativeSrc": "21667:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "21667:18:11"
																		},
																		"nativeSrc": "21667:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "21667:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "21598:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "21598:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "21591:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "21591:6:11"
																				},
																				"nativeSrc": "21591:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "21591:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "21621:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "21621:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "21628:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "21628:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "21637:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "21637:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "21624:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "21624:3:11"
																						},
																						"nativeSrc": "21624:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "21624:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "21618:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "21618:2:11"
																				},
																				"nativeSrc": "21618:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "21618:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "21571:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "21571:2:11"
																		},
																		"nativeSrc": "21571:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21571:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21551:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21551:6:11"
																},
																"nativeSrc": "21551:113:11",
																"nodeType": "YulFunctionCall",
																"src": "21551:113:11"
															},
															"nativeSrc": "21548:139:11",
															"nodeType": "YulIf",
															"src": "21548:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "21284:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21315:1:11",
														"nodeType": "YulTypedName",
														"src": "21315:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21318:1:11",
														"nodeType": "YulTypedName",
														"src": "21318:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "21324:7:11",
														"nodeType": "YulTypedName",
														"src": "21324:7:11",
														"type": ""
													}
												],
												"src": "21284:410:11"
											},
											{
												"body": {
													"nativeSrc": "21728:152:11",
													"nodeType": "YulBlock",
													"src": "21728:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21745:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21745:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21748:77:11",
																		"nodeType": "YulLiteral",
																		"src": "21748:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21738:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21738:6:11"
																},
																"nativeSrc": "21738:88:11",
																"nodeType": "YulFunctionCall",
																"src": "21738:88:11"
															},
															"nativeSrc": "21738:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "21738:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21842:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21842:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21845:4:11",
																		"nodeType": "YulLiteral",
																		"src": "21845:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21835:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21835:6:11"
																},
																"nativeSrc": "21835:15:11",
																"nodeType": "YulFunctionCall",
																"src": "21835:15:11"
															},
															"nativeSrc": "21835:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "21835:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21866:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21866:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21869:4:11",
																		"nodeType": "YulLiteral",
																		"src": "21869:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21859:6:11"
																},
																"nativeSrc": "21859:15:11",
																"nodeType": "YulFunctionCall",
																"src": "21859:15:11"
															},
															"nativeSrc": "21859:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "21859:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21700:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "21700:180:11"
											},
											{
												"body": {
													"nativeSrc": "21928:143:11",
													"nodeType": "YulBlock",
													"src": "21928:143:11",
													"statements": [
														{
															"nativeSrc": "21938:25:11",
															"nodeType": "YulAssignment",
															"src": "21938:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21961:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21961:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21943:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21943:17:11"
																},
																"nativeSrc": "21943:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21943:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21938:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21938:1:11"
																}
															]
														},
														{
															"nativeSrc": "21972:25:11",
															"nodeType": "YulAssignment",
															"src": "21972:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21995:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21995:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21977:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21977:17:11"
																},
																"nativeSrc": "21977:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21977:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21972:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21972:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22019:22:11",
																"nodeType": "YulBlock",
																"src": "22019:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "22021:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "22021:16:11"
																			},
																			"nativeSrc": "22021:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22021:18:11"
																		},
																		"nativeSrc": "22021:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22021:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22016:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22016:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22009:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22009:6:11"
																},
																"nativeSrc": "22009:9:11",
																"nodeType": "YulFunctionCall",
																"src": "22009:9:11"
															},
															"nativeSrc": "22006:35:11",
															"nodeType": "YulIf",
															"src": "22006:35:11"
														},
														{
															"nativeSrc": "22051:14:11",
															"nodeType": "YulAssignment",
															"src": "22051:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22060:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22060:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22063:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22063:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22056:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22056:3:11"
																},
																"nativeSrc": "22056:9:11",
																"nodeType": "YulFunctionCall",
																"src": "22056:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "22051:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22051:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "21886:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21917:1:11",
														"nodeType": "YulTypedName",
														"src": "21917:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21920:1:11",
														"nodeType": "YulTypedName",
														"src": "21920:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "21926:1:11",
														"nodeType": "YulTypedName",
														"src": "21926:1:11",
														"type": ""
													}
												],
												"src": "21886:185:11"
											},
											{
												"body": {
													"nativeSrc": "22183:76:11",
													"nodeType": "YulBlock",
													"src": "22183:76:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22205:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "22205:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22213:1:11",
																				"nodeType": "YulLiteral",
																				"src": "22213:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22201:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22201:3:11"
																		},
																		"nativeSrc": "22201:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22201:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f7420636f6d706f756e6420646966666572656e7420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "22217:34:11",
																		"nodeType": "YulLiteral",
																		"src": "22217:34:11",
																		"type": "",
																		"value": "Cannot compound different tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22194:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22194:6:11"
																},
																"nativeSrc": "22194:58:11",
																"nodeType": "YulFunctionCall",
																"src": "22194:58:11"
															},
															"nativeSrc": "22194:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "22194:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089",
												"nativeSrc": "22077:182:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22175:6:11",
														"nodeType": "YulTypedName",
														"src": "22175:6:11",
														"type": ""
													}
												],
												"src": "22077:182:11"
											},
											{
												"body": {
													"nativeSrc": "22411:220:11",
													"nodeType": "YulBlock",
													"src": "22411:220:11",
													"statements": [
														{
															"nativeSrc": "22421:74:11",
															"nodeType": "YulAssignment",
															"src": "22421:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22487:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "22487:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22492:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22492:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22428:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "22428:58:11"
																},
																"nativeSrc": "22428:67:11",
																"nodeType": "YulFunctionCall",
																"src": "22428:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22421:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22421:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22593:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "22593:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089",
																	"nativeSrc": "22504:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "22504:88:11"
																},
																"nativeSrc": "22504:93:11",
																"nodeType": "YulFunctionCall",
																"src": "22504:93:11"
															},
															"nativeSrc": "22504:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "22504:93:11"
														},
														{
															"nativeSrc": "22606:19:11",
															"nodeType": "YulAssignment",
															"src": "22606:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22617:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "22617:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22622:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22622:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22613:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22613:3:11"
																},
																"nativeSrc": "22613:12:11",
																"nodeType": "YulFunctionCall",
																"src": "22613:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22606:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22606:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22265:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22399:3:11",
														"nodeType": "YulTypedName",
														"src": "22399:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22407:3:11",
														"nodeType": "YulTypedName",
														"src": "22407:3:11",
														"type": ""
													}
												],
												"src": "22265:366:11"
											},
											{
												"body": {
													"nativeSrc": "22808:248:11",
													"nodeType": "YulBlock",
													"src": "22808:248:11",
													"statements": [
														{
															"nativeSrc": "22818:26:11",
															"nodeType": "YulAssignment",
															"src": "22818:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22830:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "22830:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22841:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22841:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22826:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22826:3:11"
																},
																"nativeSrc": "22826:18:11",
																"nodeType": "YulFunctionCall",
																"src": "22826:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22818:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "22818:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22865:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22865:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22876:1:11",
																				"nodeType": "YulLiteral",
																				"src": "22876:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22861:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22861:3:11"
																		},
																		"nativeSrc": "22861:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22861:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22884:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "22884:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22890:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22890:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22880:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22880:3:11"
																		},
																		"nativeSrc": "22880:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22880:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22854:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22854:6:11"
																},
																"nativeSrc": "22854:47:11",
																"nodeType": "YulFunctionCall",
																"src": "22854:47:11"
															},
															"nativeSrc": "22854:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "22854:47:11"
														},
														{
															"nativeSrc": "22910:139:11",
															"nodeType": "YulAssignment",
															"src": "22910:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23044:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "23044:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22918:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "22918:124:11"
																},
																"nativeSrc": "22918:131:11",
																"nodeType": "YulFunctionCall",
																"src": "22918:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22910:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "22910:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22637:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22788:9:11",
														"nodeType": "YulTypedName",
														"src": "22788:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22803:4:11",
														"nodeType": "YulTypedName",
														"src": "22803:4:11",
														"type": ""
													}
												],
												"src": "22637:419:11"
											},
											{
												"body": {
													"nativeSrc": "23168:75:11",
													"nodeType": "YulBlock",
													"src": "23168:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23190:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "23190:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23198:1:11",
																				"nodeType": "YulLiteral",
																				"src": "23198:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23186:3:11"
																		},
																		"nativeSrc": "23186:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23186:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "23202:33:11",
																		"nodeType": "YulLiteral",
																		"src": "23202:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23179:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "23179:6:11"
																},
																"nativeSrc": "23179:57:11",
																"nodeType": "YulFunctionCall",
																"src": "23179:57:11"
															},
															"nativeSrc": "23179:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "23179:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "23062:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23160:6:11",
														"nodeType": "YulTypedName",
														"src": "23160:6:11",
														"type": ""
													}
												],
												"src": "23062:181:11"
											},
											{
												"body": {
													"nativeSrc": "23395:220:11",
													"nodeType": "YulBlock",
													"src": "23395:220:11",
													"statements": [
														{
															"nativeSrc": "23405:74:11",
															"nodeType": "YulAssignment",
															"src": "23405:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23471:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "23471:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23476:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23476:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23412:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "23412:58:11"
																},
																"nativeSrc": "23412:67:11",
																"nodeType": "YulFunctionCall",
																"src": "23412:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23405:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23405:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23577:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "23577:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "23488:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "23488:88:11"
																},
																"nativeSrc": "23488:93:11",
																"nodeType": "YulFunctionCall",
																"src": "23488:93:11"
															},
															"nativeSrc": "23488:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "23488:93:11"
														},
														{
															"nativeSrc": "23590:19:11",
															"nodeType": "YulAssignment",
															"src": "23590:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23601:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "23601:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23606:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23606:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23597:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23597:3:11"
																},
																"nativeSrc": "23597:12:11",
																"nodeType": "YulFunctionCall",
																"src": "23597:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23590:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23590:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23249:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23383:3:11",
														"nodeType": "YulTypedName",
														"src": "23383:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23391:3:11",
														"nodeType": "YulTypedName",
														"src": "23391:3:11",
														"type": ""
													}
												],
												"src": "23249:366:11"
											},
											{
												"body": {
													"nativeSrc": "23792:248:11",
													"nodeType": "YulBlock",
													"src": "23792:248:11",
													"statements": [
														{
															"nativeSrc": "23802:26:11",
															"nodeType": "YulAssignment",
															"src": "23802:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23814:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "23814:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23825:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23825:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23810:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23810:3:11"
																},
																"nativeSrc": "23810:18:11",
																"nodeType": "YulFunctionCall",
																"src": "23810:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23802:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "23802:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23849:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23849:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23860:1:11",
																				"nodeType": "YulLiteral",
																				"src": "23860:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23845:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23845:3:11"
																		},
																		"nativeSrc": "23845:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23845:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23868:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "23868:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23874:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23874:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23864:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23864:3:11"
																		},
																		"nativeSrc": "23864:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23864:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23838:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "23838:6:11"
																},
																"nativeSrc": "23838:47:11",
																"nodeType": "YulFunctionCall",
																"src": "23838:47:11"
															},
															"nativeSrc": "23838:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "23838:47:11"
														},
														{
															"nativeSrc": "23894:139:11",
															"nodeType": "YulAssignment",
															"src": "23894:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24028:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "24028:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23902:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "23902:124:11"
																},
																"nativeSrc": "23902:131:11",
																"nodeType": "YulFunctionCall",
																"src": "23902:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23894:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "23894:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23621:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23772:9:11",
														"nodeType": "YulTypedName",
														"src": "23772:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23787:4:11",
														"nodeType": "YulTypedName",
														"src": "23787:4:11",
														"type": ""
													}
												],
												"src": "23621:419:11"
											},
											{
												"body": {
													"nativeSrc": "24172:206:11",
													"nodeType": "YulBlock",
													"src": "24172:206:11",
													"statements": [
														{
															"nativeSrc": "24182:26:11",
															"nodeType": "YulAssignment",
															"src": "24182:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24194:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "24194:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24205:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24205:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24190:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24190:3:11"
																},
																"nativeSrc": "24190:18:11",
																"nodeType": "YulFunctionCall",
																"src": "24190:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24182:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "24182:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24262:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24262:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24275:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "24275:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24286:1:11",
																				"nodeType": "YulLiteral",
																				"src": "24286:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24271:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:11"
																		},
																		"nativeSrc": "24271:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24271:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24218:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "24218:43:11"
																},
																"nativeSrc": "24218:71:11",
																"nodeType": "YulFunctionCall",
																"src": "24218:71:11"
															},
															"nativeSrc": "24218:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "24218:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24343:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24343:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24356:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "24356:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24367:2:11",
																				"nodeType": "YulLiteral",
																				"src": "24367:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24352:3:11"
																		},
																		"nativeSrc": "24352:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24352:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24299:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "24299:43:11"
																},
																"nativeSrc": "24299:72:11",
																"nodeType": "YulFunctionCall",
																"src": "24299:72:11"
															},
															"nativeSrc": "24299:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "24299:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24046:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24136:9:11",
														"nodeType": "YulTypedName",
														"src": "24136:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24148:6:11",
														"nodeType": "YulTypedName",
														"src": "24148:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24156:6:11",
														"nodeType": "YulTypedName",
														"src": "24156:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24167:4:11",
														"nodeType": "YulTypedName",
														"src": "24167:4:11",
														"type": ""
													}
												],
												"src": "24046:332:11"
											},
											{
												"body": {
													"nativeSrc": "24490:60:11",
													"nodeType": "YulBlock",
													"src": "24490:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24512:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "24512:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24520:1:11",
																				"nodeType": "YulLiteral",
																				"src": "24520:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24508:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24508:3:11"
																		},
																		"nativeSrc": "24508:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24508:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "24524:18:11",
																		"nodeType": "YulLiteral",
																		"src": "24524:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24501:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "24501:6:11"
																},
																"nativeSrc": "24501:42:11",
																"nodeType": "YulFunctionCall",
																"src": "24501:42:11"
															},
															"nativeSrc": "24501:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "24501:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "24384:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24482:6:11",
														"nodeType": "YulTypedName",
														"src": "24482:6:11",
														"type": ""
													}
												],
												"src": "24384:166:11"
											},
											{
												"body": {
													"nativeSrc": "24702:220:11",
													"nodeType": "YulBlock",
													"src": "24702:220:11",
													"statements": [
														{
															"nativeSrc": "24712:74:11",
															"nodeType": "YulAssignment",
															"src": "24712:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24778:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24778:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24783:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24783:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24719:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "24719:58:11"
																},
																"nativeSrc": "24719:67:11",
																"nodeType": "YulFunctionCall",
																"src": "24719:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24712:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24884:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24884:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "24795:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "24795:88:11"
																},
																"nativeSrc": "24795:93:11",
																"nodeType": "YulFunctionCall",
																"src": "24795:93:11"
															},
															"nativeSrc": "24795:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "24795:93:11"
														},
														{
															"nativeSrc": "24897:19:11",
															"nodeType": "YulAssignment",
															"src": "24897:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24908:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24908:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24913:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24913:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24904:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24904:3:11"
																},
																"nativeSrc": "24904:12:11",
																"nodeType": "YulFunctionCall",
																"src": "24904:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24897:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24897:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24556:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24690:3:11",
														"nodeType": "YulTypedName",
														"src": "24690:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24698:3:11",
														"nodeType": "YulTypedName",
														"src": "24698:3:11",
														"type": ""
													}
												],
												"src": "24556:366:11"
											},
											{
												"body": {
													"nativeSrc": "25099:248:11",
													"nodeType": "YulBlock",
													"src": "25099:248:11",
													"statements": [
														{
															"nativeSrc": "25109:26:11",
															"nodeType": "YulAssignment",
															"src": "25109:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25121:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "25121:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25132:2:11",
																		"nodeType": "YulLiteral",
																		"src": "25132:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25117:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25117:3:11"
																},
																"nativeSrc": "25117:18:11",
																"nodeType": "YulFunctionCall",
																"src": "25117:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25109:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "25109:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25156:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25156:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25167:1:11",
																				"nodeType": "YulLiteral",
																				"src": "25167:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25152:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25152:3:11"
																		},
																		"nativeSrc": "25152:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25152:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25175:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "25175:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25181:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25171:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25171:3:11"
																		},
																		"nativeSrc": "25171:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25171:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25145:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "25145:6:11"
																},
																"nativeSrc": "25145:47:11",
																"nodeType": "YulFunctionCall",
																"src": "25145:47:11"
															},
															"nativeSrc": "25145:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "25145:47:11"
														},
														{
															"nativeSrc": "25201:139:11",
															"nodeType": "YulAssignment",
															"src": "25201:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25335:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "25335:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25209:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "25209:124:11"
																},
																"nativeSrc": "25209:131:11",
																"nodeType": "YulFunctionCall",
																"src": "25209:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25201:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "25201:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24928:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25079:9:11",
														"nodeType": "YulTypedName",
														"src": "25079:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25094:4:11",
														"nodeType": "YulTypedName",
														"src": "25094:4:11",
														"type": ""
													}
												],
												"src": "24928:419:11"
											},
											{
												"body": {
													"nativeSrc": "25507:288:11",
													"nodeType": "YulBlock",
													"src": "25507:288:11",
													"statements": [
														{
															"nativeSrc": "25517:26:11",
															"nodeType": "YulAssignment",
															"src": "25517:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25529:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "25529:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25540:2:11",
																		"nodeType": "YulLiteral",
																		"src": "25540:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25525:3:11"
																},
																"nativeSrc": "25525:18:11",
																"nodeType": "YulFunctionCall",
																"src": "25525:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25517:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "25517:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25597:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "25597:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25610:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25610:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25621:1:11",
																				"nodeType": "YulLiteral",
																				"src": "25621:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25606:3:11"
																		},
																		"nativeSrc": "25606:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25606:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25553:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "25553:43:11"
																},
																"nativeSrc": "25553:71:11",
																"nodeType": "YulFunctionCall",
																"src": "25553:71:11"
															},
															"nativeSrc": "25553:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "25553:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25678:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "25678:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25691:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25691:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25702:2:11",
																				"nodeType": "YulLiteral",
																				"src": "25702:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25687:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25687:3:11"
																		},
																		"nativeSrc": "25687:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25687:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25634:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "25634:43:11"
																},
																"nativeSrc": "25634:72:11",
																"nodeType": "YulFunctionCall",
																"src": "25634:72:11"
															},
															"nativeSrc": "25634:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "25634:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25760:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "25760:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25773:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25773:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25784:2:11",
																				"nodeType": "YulLiteral",
																				"src": "25784:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25769:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25769:3:11"
																		},
																		"nativeSrc": "25769:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25769:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25716:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "25716:43:11"
																},
																"nativeSrc": "25716:72:11",
																"nodeType": "YulFunctionCall",
																"src": "25716:72:11"
															},
															"nativeSrc": "25716:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "25716:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "25353:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25463:9:11",
														"nodeType": "YulTypedName",
														"src": "25463:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25475:6:11",
														"nodeType": "YulTypedName",
														"src": "25475:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25483:6:11",
														"nodeType": "YulTypedName",
														"src": "25483:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25491:6:11",
														"nodeType": "YulTypedName",
														"src": "25491:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25502:4:11",
														"nodeType": "YulTypedName",
														"src": "25502:4:11",
														"type": ""
													}
												],
												"src": "25353:442:11"
											},
											{
												"body": {
													"nativeSrc": "25907:64:11",
													"nodeType": "YulBlock",
													"src": "25907:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25929:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "25929:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25937:1:11",
																				"nodeType": "YulLiteral",
																				"src": "25937:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25925:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25925:3:11"
																		},
																		"nativeSrc": "25925:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25925:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "25941:22:11",
																		"nodeType": "YulLiteral",
																		"src": "25941:22:11",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25918:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "25918:6:11"
																},
																"nativeSrc": "25918:46:11",
																"nodeType": "YulFunctionCall",
																"src": "25918:46:11"
															},
															"nativeSrc": "25918:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "25918:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "25801:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25899:6:11",
														"nodeType": "YulTypedName",
														"src": "25899:6:11",
														"type": ""
													}
												],
												"src": "25801:170:11"
											},
											{
												"body": {
													"nativeSrc": "26123:220:11",
													"nodeType": "YulBlock",
													"src": "26123:220:11",
													"statements": [
														{
															"nativeSrc": "26133:74:11",
															"nodeType": "YulAssignment",
															"src": "26133:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26199:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26199:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26204:2:11",
																		"nodeType": "YulLiteral",
																		"src": "26204:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26140:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "26140:58:11"
																},
																"nativeSrc": "26140:67:11",
																"nodeType": "YulFunctionCall",
																"src": "26140:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26133:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26305:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26305:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "26216:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "26216:88:11"
																},
																"nativeSrc": "26216:93:11",
																"nodeType": "YulFunctionCall",
																"src": "26216:93:11"
															},
															"nativeSrc": "26216:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "26216:93:11"
														},
														{
															"nativeSrc": "26318:19:11",
															"nodeType": "YulAssignment",
															"src": "26318:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26329:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26329:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26334:2:11",
																		"nodeType": "YulLiteral",
																		"src": "26334:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26325:3:11"
																},
																"nativeSrc": "26325:12:11",
																"nodeType": "YulFunctionCall",
																"src": "26325:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26318:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26318:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25977:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26111:3:11",
														"nodeType": "YulTypedName",
														"src": "26111:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26119:3:11",
														"nodeType": "YulTypedName",
														"src": "26119:3:11",
														"type": ""
													}
												],
												"src": "25977:366:11"
											},
											{
												"body": {
													"nativeSrc": "26520:248:11",
													"nodeType": "YulBlock",
													"src": "26520:248:11",
													"statements": [
														{
															"nativeSrc": "26530:26:11",
															"nodeType": "YulAssignment",
															"src": "26530:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26542:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "26542:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26553:2:11",
																		"nodeType": "YulLiteral",
																		"src": "26553:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26538:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26538:3:11"
																},
																"nativeSrc": "26538:18:11",
																"nodeType": "YulFunctionCall",
																"src": "26538:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26530:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "26530:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26577:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "26577:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26588:1:11",
																				"nodeType": "YulLiteral",
																				"src": "26588:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26573:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "26573:3:11"
																		},
																		"nativeSrc": "26573:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "26573:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26596:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "26596:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26602:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "26602:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "26592:3:11"
																		},
																		"nativeSrc": "26592:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "26592:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26566:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "26566:6:11"
																},
																"nativeSrc": "26566:47:11",
																"nodeType": "YulFunctionCall",
																"src": "26566:47:11"
															},
															"nativeSrc": "26566:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "26566:47:11"
														},
														{
															"nativeSrc": "26622:139:11",
															"nodeType": "YulAssignment",
															"src": "26622:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26756:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "26756:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26630:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "26630:124:11"
																},
																"nativeSrc": "26630:131:11",
																"nodeType": "YulFunctionCall",
																"src": "26630:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26622:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "26622:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26349:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26500:9:11",
														"nodeType": "YulTypedName",
														"src": "26500:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26515:4:11",
														"nodeType": "YulTypedName",
														"src": "26515:4:11",
														"type": ""
													}
												],
												"src": "26349:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$488_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$488_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$488_t_contract$_IERC20_$488_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$488_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount below minimum stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid staking token\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward rate must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot compound different tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061014b575f3560e01c80638456cb59116100c1578063ac4afa381161007a578063ac4afa3814610357578063b32534cf1461038f578063bbcaf3fe146103ab578063e39c08fc146103c7578063f2fde38b146103f7578063f525cb68146104135761014b565b80638456cb591461029457806385ac165a1461029e578063874c120b146102ba5780638da5cb5b146102ea57806393f1a40b14610308578063aa5f7e261461033b5761014b565b8063441a3e7011610113578063441a3e70146101fc5780635312ea8e146102185780635c975abb14610234578063715018a6146102525780637b0472f01461025c5780637f8661a1146102785761014b565b80631069f3b51461014f5780631c4b774b146101825780632f380b351461019e5780633d6aa5e1146101d45780633f4ba83a146101f2575b5f5ffd5b6101696004803603810190610164919061226a565b610431565b60405161017994939291906122b7565b60405180910390f35b61019c600480360381019061019791906122fa565b610513565b005b6101b860048036038101906101b391906122fa565b61075a565b6040516101cb979695949392919061234e565b60405180910390f35b6101dc610841565b6040516101e991906123bb565b60405180910390f35b6101fa61084d565b005b610216600480360381019061021191906123d4565b61085f565b005b610232600480360381019061022d91906122fa565b610ba1565b005b61023c610d7b565b6040516102499190612412565b60405180910390f35b61025a610d91565b005b610276600480360381019061027191906123d4565b610da4565b005b610292600480360381019061028d91906122fa565b611106565b005b61029c61116f565b005b6102b860048036038101906102b3919061242b565b611181565b005b6102d460048036038101906102cf91906122fa565b611472565b6040516102e191906123bb565b60405180910390f35b6102f26114f8565b6040516102ff91906124a2565b60405180910390f35b610322600480360381019061031d919061226a565b611520565b60405161033294939291906122b7565b60405180910390f35b610355600480360381019061035091906122fa565b611557565b005b610371600480360381019061036c91906122fa565b611910565b60405161038699989796959493929190612516565b60405180910390f35b6103a960048036038101906103a491906123d4565b6119a4565b005b6103c560048036038101906103c091906125cb565b611b5f565b005b6103e160048036038101906103dc919061226a565b611c14565b6040516103ee91906123bb565b60405180910390f35b610411600480360381019061040c9190612609565b611cb5565b005b61041b611d39565b60405161042891906123bb565b60405180910390f35b5f5f5f5f85600454811061047a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104719061268e565b60405180910390fd5b5f60035f8981526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f01546104d78989611c14565b826003015460025f8c81526020019081526020015f2060070154846003015461050091906126d9565b9550955095509550505092959194509250565b61051b611d3f565b806004548110610560576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105579061268e565b60405180910390fd5b81335f60025f8481526020019081526020015f20905061057f83611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610633575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905061061c8484611c14565b816002018190555081600401548160010181905550505b5f60035f8781526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015490505f811115610749575f82600201819055506106f9338260025f8b81526020019081526020015f206001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b863373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f518360405161074091906123bb565b60405180910390a35b505050505050610757611e0b565b50565b5f5f5f5f5f5f5f8760045481106107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061268e565b60405180910390fd5b5f60025f8b81526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020154836005015484600601548560070154866008015f9054906101000a900460ff1698509850985098509850985098505050919395979092949650565b670de0b6b3a764000081565b610855611e14565b61085d611e9b565b565b610867611d3f565b8160045481106108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061268e565b60405180910390fd5b82335f60025f8481526020019081526020015f2090506108cb83611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461097f575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109688484611c14565b816002018190555081600401548160010181905550505b5f85116109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890612756565b60405180910390fd5b5f60025f8881526020019081526020015f2090505f60035f8981526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905086815f01541015610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a61906127be565b60405180910390fd5b81600701548160030154610a7e91906126d9565b421015610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790612826565b60405180910390fd5b86826005015f828254610ad39190612844565b9250508190555086815f015f828254610aec9190612844565b92505081905550610b403388845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b873373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc689604051610b8791906123bb565b60405180910390a3505050505050610b9d611e0b565b5050565b610ba9611d3f565b806004548110610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be59061268e565b60405180910390fd5b5f60035f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f8111610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d906128c1565b60405180910390fd5b8060025f8681526020019081526020015f206005015f828254610ca99190612844565b925050819055505f825f01819055505f8260020181905550610d1e338260025f8881526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d8c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc683604051610d6591906123bb565b60405180910390a3505050610d78611e0b565b50565b5f600160149054906101000a900460ff16905090565b610d99611e14565b610da25f611efd565b565b610dac611d3f565b610db4611fc0565b816004548110610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df09061268e565b60405180910390fd5b8260025f8281526020019081526020015f206008015f9054906101000a900460ff16610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5190612929565b60405180910390fd5b83335f60025f8481526020019081526020015f209050610e7983611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610f2d575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610f168484611c14565b816002018190555081600401548160010181905550505b5f8611610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6690612991565b60405180910390fd5b5f60025f8981526020019081526020015f2090505f60035f8a81526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090508160060154881015611019576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611010906129f9565b60405180910390fd5b87826005015f82825461102c91906126d9565b9250508190555087815f015f82825461104591906126d9565b925050819055504281600301819055506110a433308a855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661200a909392919063ffffffff16565b883373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908a6040516110eb91906123bb565b60405180910390a350505050505050611102611e0b565b5050565b5f60035f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905061116282825f015461085f565b61116b82610513565b5050565b611177611e14565b61117f61208c565b565b611189611e14565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ee90612a61565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125c90612ac9565b60405180910390fd5b5f83116112a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129e90612b57565b60405180910390fd5b6040518061012001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281526020015f81526020015f81526020018381526020018281526020016001151581525060025f60045481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015f6101000a81548160ff0219169083151502179055509050506004547fb203c0a4a9d84ddde23dba31a828c25525b2e0b5fe6a0e356d983aed95961ca1868686868660405161144c959493929190612b75565b60405180910390a260045f81548092919061146690612bc6565b91905055505050505050565b5f5f60025f8481526020019081526020015f2090505f81600501540361149f5780600401549150506114f3565b8060050154670de0b6b3a764000082600201548360030154426114c29190612844565b6114cc9190612c0d565b6114d69190612c0d565b6114e09190612c7b565b81600401546114ef91906126d9565b9150505b919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154908060020154908060030154905084565b61155f611d3f565b8060045481106115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b9061268e565b60405180910390fd5b8160025f8281526020019081526020015f206008015f9054906101000a900460ff16611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fc90612929565b60405180910390fd5b82335f60025f8481526020019081526020015f20905061162483611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146116d8575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506116c18484611c14565b816002018190555081600401548160010181905550505b60025f8781526020019081526020015f206001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660025f8881526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a290612cf5565b60405180910390fd5b5f60035f8881526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816002015490505f8111156118fe575f82600201819055508060025f8a81526020019081526020015f206005015f82825461183691906126d9565b9250508190555080825f015f82825461184f91906126d9565b92505081905550428260030181905550873373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51836040516118a691906123bb565b60405180910390a3873373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90836040516118f591906123bb565b60405180910390a35b5050505050505061190d611e0b565b50565b6002602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015490806007015490806008015f9054906101000a900460ff16905089565b6119ac611e14565b8160045481106119f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e89061268e565b60405180910390fd5b825f5f60025f8481526020019081526020015f209050611a1083611472565b81600401819055504281600301819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611ac4575f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050611aad8484611c14565b816002018190555081600401548160010181905550505b5f8511611b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afd90612b57565b60405180910390fd5b8460025f8881526020019081526020015f2060020181905550857fc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee5086604051611b4f91906123bb565b60405180910390a2505050505050565b611b67611e14565b816004548110611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba39061268e565b60405180910390fd5b8160025f8581526020019081526020015f206008015f6101000a81548160ff021916908315150217905550827fb3c3c605d1520cd5bf41301dd5c04929e0ff021b02a10ea259b5a5b2d521a29c83604051611c079190612412565b60405180910390a2505050565b5f5f60035f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090508060020154670de0b6b3a76400008260010154611c8087611472565b611c8a9190612844565b835f0154611c989190612c0d565b611ca29190612c7b565b611cac91906126d9565b91505092915050565b611cbd611e14565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d2491906124a2565b60405180910390fd5b611d3681611efd565b50565b60045481565b60025f5403611d83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7a90612d5d565b60405180910390fd5b60025f81905550565b611e06838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611dbf929190612d7b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ee565b505050565b60015f81905550565b611e1c612189565b73ffffffffffffffffffffffffffffffffffffffff16611e3a6114f8565b73ffffffffffffffffffffffffffffffffffffffff1614611e9957611e5d612189565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611e9091906124a2565b60405180910390fd5b565b611ea3612190565b5f600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ee6612189565b604051611ef391906124a2565b60405180910390a1565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fc8610d7b565b15612008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fff90612dec565b60405180910390fd5b565b612086848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161203f93929190612e0a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ee565b50505050565b612094611fc0565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120d7612189565b6040516120e491906124a2565b60405180910390a1565b5f5f60205f8451602086015f885af18061210d576040513d5f823e3d81fd5b3d92505f519150505f8214612126576001811415612141565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561218357836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161217a91906124a2565b60405180910390fd5b50505050565b5f33905090565b612198610d7b565b6121d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ce90612e89565b60405180910390fd5b565b5f5ffd5b5f819050919050565b6121ef816121dd565b81146121f9575f5ffd5b50565b5f8135905061220a816121e6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61223982612210565b9050919050565b6122498161222f565b8114612253575f5ffd5b50565b5f8135905061226481612240565b92915050565b5f5f604083850312156122805761227f6121d9565b5b5f61228d858286016121fc565b925050602061229e85828601612256565b9150509250929050565b6122b1816121dd565b82525050565b5f6080820190506122ca5f8301876122a8565b6122d760208301866122a8565b6122e460408301856122a8565b6122f160608301846122a8565b95945050505050565b5f6020828403121561230f5761230e6121d9565b5b5f61231c848285016121fc565b91505092915050565b61232e8161222f565b82525050565b5f8115159050919050565b61234881612334565b82525050565b5f60e0820190506123615f83018a612325565b61236e6020830189612325565b61237b60408301886122a8565b61238860608301876122a8565b61239560808301866122a8565b6123a260a08301856122a8565b6123af60c083018461233f565b98975050505050505050565b5f6020820190506123ce5f8301846122a8565b92915050565b5f5f604083850312156123ea576123e96121d9565b5b5f6123f7858286016121fc565b9250506020612408858286016121fc565b9150509250929050565b5f6020820190506124255f83018461233f565b92915050565b5f5f5f5f5f60a08688031215612444576124436121d9565b5b5f61245188828901612256565b955050602061246288828901612256565b9450506040612473888289016121fc565b9350506060612484888289016121fc565b9250506080612495888289016121fc565b9150509295509295909350565b5f6020820190506124b55f830184612325565b92915050565b5f819050919050565b5f6124de6124d96124d484612210565b6124bb565b612210565b9050919050565b5f6124ef826124c4565b9050919050565b5f612500826124e5565b9050919050565b612510816124f6565b82525050565b5f6101208201905061252a5f83018c612507565b612537602083018b612507565b612544604083018a6122a8565b61255160608301896122a8565b61255e60808301886122a8565b61256b60a08301876122a8565b61257860c08301866122a8565b61258560e08301856122a8565b61259361010083018461233f565b9a9950505050505050505050565b6125aa81612334565b81146125b4575f5ffd5b50565b5f813590506125c5816125a1565b92915050565b5f5f604083850312156125e1576125e06121d9565b5b5f6125ee858286016121fc565b92505060206125ff858286016125b7565b9150509250929050565b5f6020828403121561261e5761261d6121d9565b5b5f61262b84828501612256565b91505092915050565b5f82825260208201905092915050565b7f506f6f6c20646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f612678601383612634565b915061268382612644565b602082019050919050565b5f6020820190508181035f8301526126a58161266c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126e3826121dd565b91506126ee836121dd565b9250828201905080821115612706576127056126ac565b5b92915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f612740601183612634565b915061274b8261270c565b602082019050919050565b5f6020820190508181035f83015261276d81612734565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6127a8601483612634565b91506127b382612774565b602082019050919050565b5f6020820190508181035f8301526127d58161279c565b9050919050565b7f546f6b656e7320617265207374696c6c206c6f636b65640000000000000000005f82015250565b5f612810601783612634565b915061281b826127dc565b602082019050919050565b5f6020820190508181035f83015261283d81612804565b9050919050565b5f61284e826121dd565b9150612859836121dd565b9250828203905081811115612871576128706126ac565b5b92915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6128ab601583612634565b91506128b682612877565b602082019050919050565b5f6020820190508181035f8301526128d88161289f565b9050919050565b7f506f6f6c206973206e6f742061637469766500000000000000000000000000005f82015250565b5f612913601283612634565b915061291e826128df565b602082019050919050565b5f6020820190508181035f83015261294081612907565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f61297b600e83612634565b915061298682612947565b602082019050919050565b5f6020820190508181035f8301526129a88161296f565b9050919050565b7f416d6f756e742062656c6f77206d696e696d756d207374616b650000000000005f82015250565b5f6129e3601a83612634565b91506129ee826129af565b602082019050919050565b5f6020820190508181035f830152612a10816129d7565b9050919050565b7f496e76616c6964207374616b696e6720746f6b656e00000000000000000000005f82015250565b5f612a4b601583612634565b9150612a5682612a17565b602082019050919050565b5f6020820190508181035f830152612a7881612a3f565b9050919050565b7f496e76616c69642072657761726420746f6b656e0000000000000000000000005f82015250565b5f612ab3601483612634565b9150612abe82612a7f565b602082019050919050565b5f6020820190508181035f830152612ae081612aa7565b9050919050565b7f5265776172642072617465206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f612b41602283612634565b9150612b4c82612ae7565b604082019050919050565b5f6020820190508181035f830152612b6e81612b35565b9050919050565b5f60a082019050612b885f830188612325565b612b956020830187612325565b612ba260408301866122a8565b612baf60608301856122a8565b612bbc60808301846122a8565b9695505050505050565b5f612bd0826121dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c0257612c016126ac565b5b600182019050919050565b5f612c17826121dd565b9150612c22836121dd565b9250828202612c30816121dd565b91508282048414831517612c4757612c466126ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c85826121dd565b9150612c90836121dd565b925082612ca057612c9f612c4e565b5b828204905092915050565b7f43616e6e6f7420636f6d706f756e6420646966666572656e7420746f6b656e735f82015250565b5f612cdf602083612634565b9150612cea82612cab565b602082019050919050565b5f6020820190508181035f830152612d0c81612cd3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612d47601f83612634565b9150612d5282612d13565b602082019050919050565b5f6020820190508181035f830152612d7481612d3b565b9050919050565b5f604082019050612d8e5f830185612325565b612d9b60208301846122a8565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612dd6601083612634565b9150612de182612da2565b602082019050919050565b5f6020820190508181035f830152612e0381612dca565b9050919050565b5f606082019050612e1d5f830186612325565b612e2a6020830185612325565b612e3760408301846122a8565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612e73601483612634565b9150612e7e82612e3f565b602082019050919050565b5f6020820190508181035f830152612ea081612e67565b905091905056fea264697066735822122048955b86420344f9d49ca0ace674696553f984e6b7be37c8ea7a1db289cbf68164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAC4AFA38 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xB32534CF EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xBBCAF3FE EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xE39C08FC EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x413 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x85AC165A EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x33B JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x7F8661A1 EQ PUSH2 0x278 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3D6AA5E1 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0xD91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x116F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x19A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x25CB JUMP JUMPDEST PUSH2 0x1B5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST PUSH2 0x1CB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP6 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD PUSH2 0x4D7 DUP10 DUP10 PUSH2 0x1C14 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x57F DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x633 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x61C DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x749 JUMPI PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6F9 CALLER DUP3 PUSH1 0x2 PUSH0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP PUSH2 0x757 PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP8 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x6 ADD SLOAD DUP6 PUSH1 0x7 ADD SLOAD DUP7 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x855 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x85D PUSH2 0x1E9B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x867 PUSH2 0x1D3F JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x8CB DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97F JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x968 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP7 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB7 SWAP1 PUSH2 0x2826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB40 CALLER DUP9 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP10 PUSH1 0x40 MLOAD PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH2 0xB9D PUSH2 0x1E0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE5 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xD1E CALLER DUP3 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xD78 PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD99 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0xDA2 PUSH0 PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xE79 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2D JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xF16 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP7 GT PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD DUP9 LT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10A4 CALLER ADDRESS DUP11 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP11 PUSH1 0x40 MLOAD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1102 PUSH2 0x1E0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1162 DUP3 DUP3 PUSH0 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST PUSH2 0x116B DUP3 PUSH2 0x513 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1177 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x117F PUSH2 0x208C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1189 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x4 SLOAD PUSH32 0xB203C0A4A9D84DDDE23DBA31A828C25525B2E0B5FE6A0E356D983AED95961CA1 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x144C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1466 SWAP1 PUSH2 0x2BC6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x5 ADD SLOAD SUB PUSH2 0x149F JUMPI DUP1 PUSH1 0x4 ADD SLOAD SWAP2 POP POP PUSH2 0x14F3 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x14D6 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x155F PUSH2 0x1D3F JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x15A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159B SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 CALLER PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1624 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16D8 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x16C1 DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x18FE JUMPI PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18A6 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP PUSH2 0x190D PUSH2 0x1E0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x19AC PUSH2 0x1E14 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E8 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1A10 DUP4 PUSH2 0x1472 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AC4 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x1AAD DUP5 DUP5 PUSH2 0x1C14 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFD SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH32 0xC390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B67 PUSH2 0x1E14 JUMP JUMPDEST DUP2 PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0xB3C3C605D1520CD5BF41301DD5C04929E0FF021B02A10EA259B5A5B2D521A29C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C07 SWAP2 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C80 DUP8 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1C8A SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST DUP4 PUSH0 ADD SLOAD PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH2 0x1CAC SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CBD PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D24 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1D83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7A SWAP1 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E06 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1DBF SWAP3 SWAP2 SWAP1 PUSH2 0x2D7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x2189 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E3A PUSH2 0x14F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E99 JUMPI PUSH2 0x1E5D PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E90 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x2190 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1EE6 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1FC8 PUSH2 0xD7B JUMP JUMPDEST ISZERO PUSH2 0x2008 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFF SWAP1 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2086 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x203F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2094 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20D7 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E4 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2126 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2141 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2183 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217A SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2198 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x21D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21CE SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EF DUP2 PUSH2 0x21DD JUMP JUMPDEST DUP2 EQ PUSH2 0x21F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x220A DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2239 DUP3 PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x222F JUMP JUMPDEST DUP2 EQ PUSH2 0x2253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2264 DUP2 PUSH2 0x2240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228D DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x229E DUP6 DUP3 DUP7 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B1 DUP2 PUSH2 0x21DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22CA PUSH0 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22F1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231C DUP5 DUP3 DUP6 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x232E DUP2 PUSH2 0x222F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2348 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2361 PUSH0 DUP4 ADD DUP11 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x236E PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x237B PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2395 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x23A2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x23AF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23CE PUSH0 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F7 DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2408 DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2425 PUSH0 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2443 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2451 DUP9 DUP3 DUP10 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2462 DUP9 DUP3 DUP10 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2473 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2484 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2495 DUP9 DUP3 DUP10 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH2 0x24D9 PUSH2 0x24D4 DUP5 PUSH2 0x2210 JUMP JUMPDEST PUSH2 0x24BB JUMP JUMPDEST PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24EF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2500 DUP3 PUSH2 0x24E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2510 DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x252A PUSH0 DUP4 ADD DUP13 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x2544 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2551 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x255E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x256B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2578 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2585 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2593 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25AA DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP2 EQ PUSH2 0x25B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25C5 DUP2 PUSH2 0x25A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH2 0x25E0 PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x21FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25FF DUP6 DUP3 DUP7 ADD PUSH2 0x25B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261E JUMPI PUSH2 0x261D PUSH2 0x21D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x262B DUP5 DUP3 DUP6 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F6F6C20646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2678 PUSH1 0x13 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP3 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A5 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26E3 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x26EE DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2706 JUMPI PUSH2 0x2705 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2740 PUSH1 0x11 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x274B DUP3 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x276D DUP2 PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A8 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B3 DUP3 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2810 PUSH1 0x17 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x281B DUP3 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283D DUP2 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x284E DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2859 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2871 JUMPI PUSH2 0x2870 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB PUSH1 0x15 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP3 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28D8 DUP2 PUSH2 0x289F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F6F6C206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH1 0x12 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x291E DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2940 DUP2 PUSH2 0x2907 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x297B PUSH1 0xE DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2986 DUP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29A8 DUP2 PUSH2 0x296F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742062656C6F77206D696E696D756D207374616B65000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29E3 PUSH1 0x1A DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EE DUP3 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A10 DUP2 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720746F6B656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4B PUSH1 0x15 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A56 DUP3 PUSH2 0x2A17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A78 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB3 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABE DUP3 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE0 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B41 PUSH1 0x22 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6E DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2B88 PUSH0 DUP4 ADD DUP9 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2B95 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2BA2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2BAF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x2BBC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD0 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C02 JUMPI PUSH2 0x2C01 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C17 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2C22 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C30 DUP2 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C47 JUMPI PUSH2 0x2C46 PUSH2 0x26AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C85 DUP3 PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2C90 DUP4 PUSH2 0x21DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CA0 JUMPI PUSH2 0x2C9F PUSH2 0x2C4E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420636F6D706F756E6420646966666572656E7420746F6B656E73 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CDF PUSH1 0x20 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEA DUP3 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D0C DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D47 PUSH1 0x1F DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D52 DUP3 PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D74 DUP2 PUSH2 0x2D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D8E PUSH0 DUP4 ADD DUP6 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2D9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD6 PUSH1 0x10 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE1 DUP3 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E03 DUP2 PUSH2 0x2DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E1D PUSH0 DUP4 ADD DUP7 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2E2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2E37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E73 PUSH1 0x14 DUP4 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2E3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA0 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP6 JUMPDEST DUP7 TIMESTAMP SUB PREVRANDAO EXTDELEGATECALL 0xD4 SWAP13 LOG0 0xAC DUPN 0x74 PUSH10 0x6553F984E6B7BE37C8EA PUSH27 0x1DB289CBF68164736F6C634300081E003300000000000000000000 ",
							"sourceMap": "363:9725:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9387:544;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5989:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8691:684;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1160:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10018:67;;;:::i;:::-;;5200:777;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7535:549;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;4427:761:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6475:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9943:63;;;:::i;:::-;;2634:1083;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3729:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:64:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6666:857;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8096:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8456:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4145:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1129:24:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9387:544;9534:15;9564:20;9599:18;9632;9493:6;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;9679:26:::1;9708:8;:16;9717:6;9708:16;;;;;;;;;;;:22;9725:4;9708:22;;;;;;;;;;;;;;;9679:51;;9763:9;:17;;;9795:20;9802:6;9810:4;9795:6;:20::i;:::-;9830:9;:20;;;9888:5;:13;9894:6;9888:13;;;;;;;;;;;:24;;;9865:9;:20;;;:47;;;;:::i;:::-;9741:182;;;;;;;;;9387:544:::0;;;;;;;;:::o;5989:474::-;2261:21:5;:19;:21::i;:::-;6085:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6116:6:::2;6124:10;1948:24;1975:5;:13;1981:6;1975:13;;;;;;;;;;;1948:40;;2027:22;2042:6;2027:14;:22::i;:::-;1999:4;:25;;:50;;;;2082:15;2060:4;:19;;:37;;;;2141:1;2122:21;;:7;:21;;;2118:226;;2160:21;2184:8;:16;2193:6;2184:16;;;;;;;;;;;:25;2201:7;2184:25;;;;;;;;;;;;;;;2160:49;;2239:23;2246:6;2254:7;2239:6;:23::i;:::-;2224:4;:12;;:38;;;;2307:4;:25;;;2277:4;:27;;:55;;;;2145:199;2118:226;6153:21:::3;6177:8;:16;6186:6;6177:16;;;;;;;;;;;:28;6194:10;6177:28;;;;;;;;;;;;;;;6153:52;;6216:14;6233:4;:12;;;6216:29;;6279:1;6270:6;:10;6266:190;;;6312:1;6297:4;:12;;:16;;;;6328:58;6367:10;6379:6;6328:5;:13;6334:6;6328:13;;;;;;;;;;;:25;;;;;;;;;;;;:38;;;;:58;;;;;:::i;:::-;6429:6;6417:10;6406:38;;;6437:6;6406:38;;;;;;:::i;:::-;;;;;;;;6266:190;6142:321;;1937:426:::2;2483:1;;2292::5::1;2303:20:::0;:18;:20::i;:::-;5989:474:10;:::o;8691:684::-;8824:20;8859:19;8893:18;8926:19;8960:20;8995:18;9028:11;8783:6;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;9068:24:::1;9095:5;:13;9101:6;9095:13;;;;;;;;;;;9068:40;;9149:4;:17;;;;;;;;;;;;9190:4;:16;;;;;;;;;;;;9222:4;:15;;;9252:4;:16;;;9283:4;:17;;;9315:4;:15;;;9345:4;:11;;;;;;;;;;;;9119:248;;;;;;;;;;;;;;;8691:684:::0;;;;;;;;;;:::o;1160:47::-;1203:4;1160:47;:::o;10018:67::-;1531:13:0;:11;:13::i;:::-;10067:10:10::1;:8;:10::i;:::-;10018:67::o:0;5200:777::-;2261:21:5;:19;:21::i;:::-;5311:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;5342:6:::2;5350:10;1948:24;1975:5;:13;1981:6;1975:13;;;;;;;;;;;1948:40;;2027:22;2042:6;2027:14;:22::i;:::-;1999:4;:25;;:50;;;;2082:15;2060:4;:19;;:37;;;;2141:1;2122:21;;:7;:21;;;2118:226;;2160:21;2184:8;:16;2193:6;2184:16;;;;;;;;;;;:25;2201:7;2184:25;;;;;;;;;;;;;;;2160:49;;2239:23;2246:6;2254:7;2239:6;:23::i;:::-;2224:4;:12;;:38;;;;2307:4;:25;;;2277:4;:27;;:55;;;;2145:199;2118:226;5396:1:::3;5387:6;:10;5379:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5440:24;5467:5;:13;5473:6;5467:13;;;;;;;;;;;5440:40;;5491:21;5515:8;:16;5524:6;5515:16;;;;;;;;;;;:28;5532:10;5515:28;;;;;;;;;;;;;;;5491:52;;5588:6;5572:4;:12;;;:22;;5564:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5689:4;:15;;;5671:4;:15;;;:33;;;;:::i;:::-;5652:15;:52;;5630:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;5796:6;5776:4;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;5829:6;5813:4;:12;;;:22;;;;;;;:::i;:::-;;;;;;;;5856:50;5887:10;5899:6;5856:4;:17;;;;;;;;;;;;:30;;;;:50;;;;;:::i;:::-;5954:6;5942:10;5932:37;;;5962:6;5932:37;;;;;;:::i;:::-;;;;;;;;5368:609;;1937:426:::2;2483:1;;2292::5::1;2303:20:::0;:18;:20::i;:::-;5200:777:10;;:::o;7535:549::-;2261:21:5;:19;:21::i;:::-;7641:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7666:21:::2;7690:8;:16;7699:6;7690:16;;;;;;;;;;;:28;7707:10;7690:28;;;;;;;;;;;;;;;7666:52;;7729:14;7746:4;:12;;;7729:29;;7796:1;7787:6;:10;7779:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;7873:6;7844:5;:13;7850:6;7844:13;;;;;;;;;;;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;7905:1;7890:4;:12;;:16;;;;7932:1;7917:4;:12;;:16;;;;7954:59;7994:10;8006:6;7954:5;:13;7960:6;7954:13;;;;;;;;;;;:26;;;;;;;;;;;;:39;;;;:59;;;;;:::i;:::-;8061:6;8049:10;8039:37;;;8069:6;8039:37;;;;;;:::i;:::-;;;;;;;;7655:429;;2292:1:5::1;2303:20:::0;:18;:20::i;:::-;7535:549:10;:::o;1615:84:4:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4427:761:10:-;2261:21:5;:19;:21::i;:::-;1239:19:4::1;:17;:19::i;:::-;4561:6:10::2;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;4590:6:::3;2559:5;:13;2565:6;2559:13;;;;;;;;;;;:20;;;;;;;;;;;;2551:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4621:6:::4;4629:10;1948:24;1975:5;:13;1981:6;1975:13;;;;;;;;;;;1948:40;;2027:22;2042:6;2027:14;:22::i;:::-;1999:4;:25;;:50;;;;2082:15;2060:4;:19;;:37;;;;2141:1;2122:21;;:7;:21;;;2118:226;;2160:21;2184:8;:16;2193:6;2184:16;;;;;;;;;;;:25;2201:7;2184:25;;;;;;;;;;;;;;;2160:49;;2239:23;2246:6;2254:7;2239:6;:23::i;:::-;2224:4;:12;;:38;;;;2307:4;:25;;;2277:4;:27;;:55;;;;2145:199;2118:226;4675:1:::5;4666:6;:10;4658:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;4716:24;4743:5;:13;4749:6;4743:13;;;;;;;;;;;4716:40;;4767:21;4791:8;:16;4800:6;4791:16;;;;;;;;;;;:28;4808:10;4791:28;;;;;;;;;;;;;;;4767:52;;4858:4;:17;;;4848:6;:27;;4840:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4947:6;4927:4;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;4980:6;4964:4;:12;;;:22;;;;;;;:::i;:::-;;;;;;;;5015:15;4997:4;:15;;:33;;;;5051:69;5086:10;5106:4;5113:6;5051:4;:17;;;;;;;;;;;;:34;;;;:69;;;;;;:::i;:::-;5165:6;5153:10;5146:34;;;5173:6;5146:34;;;;;;:::i;:::-;;;;;;;;4647:541;;1937:426:::4;2613:1;;2483::::3;1268::4::2;2303:20:5::0;:18;:20::i;:::-;4427:761:10;;:::o;6475:179::-;6525:21;6549:8;:16;6558:6;6549:16;;;;;;;;;;;:28;6566:10;6549:28;;;;;;;;;;;;;;;6525:52;;6588:30;6597:6;6605:4;:12;;;6588:8;:30::i;:::-;6629:17;6639:6;6629:9;:17::i;:::-;6514:140;6475:179;:::o;9943:63::-;1531:13:0;:11;:13::i;:::-;9990:8:10::1;:6;:8::i;:::-;9943:63::o:0;2634:1083::-;1531:13:0;:11;:13::i;:::-;2879:1:10::1;2854:27;;:13;:27;;::::0;2846:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2950:1;2926:26;;:12;:26;;::::0;2918:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3010:1;2996:11;:15;2988:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3090:380;;;;;;;;3138:13;3090:380;;;;;;3187:12;3090:380;;;;;;3227:11;3090:380;;;;3269:15;3090:380;;;;3321:1;3090:380;;;;3350:1;3090:380;;;;3380:13;3090:380;;;;3420:11;3090:380;;;;3454:4;3090:380;;;;::::0;3071:5:::1;:16;3077:9;;3071:16;;;;;;;;;;;:399;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3522:9;;3496:181;3546:13;3574:12;3601:11;3627:13;3655:11;3496:181;;;;;;;;;;:::i;:::-;;;;;;;;3698:9;;:11;;;;;;;;;:::i;:::-;;;;;;2634:1083:::0;;;;;:::o;3729:404::-;3790:7;3810:24;3837:5;:13;3843:6;3837:13;;;;;;;;;;;3810:40;;3885:1;3865:4;:16;;;:21;3861:86;;3910:4;:25;;;3903:32;;;;;3861:86;4098:4;:16;;;1203:4;4060;:15;;;4037:4;:19;;;4019:15;:37;;;;:::i;:::-;4018:57;;;;:::i;:::-;:76;;;;:::i;:::-;4017:97;;;;:::i;:::-;3974:4;:25;;;:151;;;;:::i;:::-;3967:158;;;3729:404;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1052:64:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6666:857::-;2261:21:5;:19;:21::i;:::-;6763:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6792:6:::2;2559:5;:13;2565:6;2559:13;;;;;;;;;;;:20;;;;;;;;;;;;2551:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;6823:6:::3;6831:10;1948:24;1975:5;:13;1981:6;1975:13;;;;;;;;;;;1948:40;;2027:22;2042:6;2027:14;:22::i;:::-;1999:4;:25;;:50;;;;2082:15;2060:4;:19;;:37;;;;2141:1;2122:21;;:7;:21;;;2118:226;;2160:21;2184:8;:16;2193:6;2184:16;;;;;;;;;;;:25;2201:7;2184:25;;;;;;;;;;;;;;;2160:49;;2239:23;2246:6;2254:7;2239:6;:23::i;:::-;2224:4;:12;;:38;;;;2307:4;:25;;;2277:4;:27;;:55;;;;2145:199;2118:226;6929:5:::4;:13;6935:6;6929:13;;;;;;;;;;;:25;;;;;;;;;;;;6882:73;;6890:5;:13;6896:6;6890:13;;;;;;;;;;;:26;;;;;;;;;;;;6882:73;;;6860:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;7036:21;7060:8;:16;7069:6;7060:16;;;;;;;;;;;:28;7077:10;7060:28;;;;;;;;;;;;;;;7036:52;;7099:14;7116:4;:12;;;7099:29;;7162:1;7153:6;:10;7149:367;;;7195:1;7180:4;:12;;:16;;;;7287:6;7258:5;:13;7264:6;7258:13;;;;;;;;;;;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;7324:6;7308:4;:12;;;:22;;;;;;;:::i;:::-;;;;;;;;7363:15;7345:4;:15;;:33;;;;7435:6;7423:10;7412:38;;;7443:6;7412:38;;;;;;:::i;:::-;;;;;;;;7489:6;7477:10;7470:34;;;7497:6;7470:34;;;;;;:::i;:::-;;;;;;;;7149:367;6849:674;;1937:426:::3;2613:1;;2483::::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;6666:857:10;:::o;1001:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8096:348::-;1531:13:0;:11;:13::i;:::-;8215:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;8246:6:::2;8262:1;1948:24;1975:5;:13;1981:6;1975:13;;;;;;;;;;;1948:40;;2027:22;2042:6;2027:14;:22::i;:::-;1999:4;:25;;:50;;;;2082:15;2060:4;:19;;:37;;;;2141:1;2122:21;;:7;:21;;;2118:226;;2160:21;2184:8;:16;2193:6;2184:16;;;;;;;;;;;:25;2201:7;2184:25;;;;;;;;;;;;;;;2160:49;;2239:23;2246:6;2254:7;2239:6;:23::i;:::-;2224:4;:12;;:38;;;;2307:4;:25;;;2277:4;:27;;:55;;;;2145:199;2118:226;8301:1:::3;8291:7;:11;8283:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;8379:7;8352:5;:13;8358:6;8352:13;;;;;;;;;;;:24;;:34;;;;8420:6;8402:34;8428:7;8402:34;;;;;;:::i;:::-;;;;;;;;1937:426:::2;2483:1;;1554::0::1;8096:348:10::0;;:::o;8456:223::-;1531:13:0;:11;:13::i;:::-;8568:6:10::1;2439:9;;2430:6;:18;2422:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;8616:6:::2;8593:5;:13;8599:6;8593:13;;;;;;;;;;;:20;;;:29;;;;;;;;;;;;;;;;;;8656:6;8638:33;8664:6;8638:33;;;;;;:::i;:::-;;;;;;;;1554:1:0::1;8456:223:10::0;;:::o;4145:270::-;4215:7;4235:21;4259:8;:16;4268:6;4259:16;;;;;;;;;;;:25;4276:7;4259:25;;;;;;;;;;;;;;;4235:49;;4395:4;:12;;;1203:4;4344;:27;;;4319:22;4334:6;4319:14;:22::i;:::-;:52;;;;:::i;:::-;4303:4;:12;;;:69;;;;:::i;:::-;4302:90;;;;:::i;:::-;:105;;;;:::i;:::-;4295:112;;;4145:270;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1129:24:10:-;;;;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:4:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1767:106:4:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2186:115:4:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7:::0;::::1;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;1945:106:4:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:553::-;1978:4;2016:3;2005:9;2001:19;1993:27;;2030:71;2098:1;2087:9;2083:17;2074:6;2030:71;:::i;:::-;2111:72;2179:2;2168:9;2164:18;2155:6;2111:72;:::i;:::-;2193;2261:2;2250:9;2246:18;2237:6;2193:72;:::i;:::-;2275;2343:2;2332:9;2328:18;2319:6;2275:72;:::i;:::-;1801:553;;;;;;;:::o;2360:329::-;2419:6;2468:2;2456:9;2447:7;2443:23;2439:32;2436:119;;;2474:79;;:::i;:::-;2436:119;2594:1;2619:53;2664:7;2655:6;2644:9;2640:22;2619:53;:::i;:::-;2609:63;;2565:117;2360:329;;;;:::o;2695:118::-;2782:24;2800:5;2782:24;:::i;:::-;2777:3;2770:37;2695:118;;:::o;2819:90::-;2853:7;2896:5;2889:13;2882:21;2871:32;;2819:90;;;:::o;2915:109::-;2996:21;3011:5;2996:21;:::i;:::-;2991:3;2984:34;2915:109;;:::o;3030:874::-;3285:4;3323:3;3312:9;3308:19;3300:27;;3337:71;3405:1;3394:9;3390:17;3381:6;3337:71;:::i;:::-;3418:72;3486:2;3475:9;3471:18;3462:6;3418:72;:::i;:::-;3500;3568:2;3557:9;3553:18;3544:6;3500:72;:::i;:::-;3582;3650:2;3639:9;3635:18;3626:6;3582:72;:::i;:::-;3664:73;3732:3;3721:9;3717:19;3708:6;3664:73;:::i;:::-;3747;3815:3;3804:9;3800:19;3791:6;3747:73;:::i;:::-;3830:67;3892:3;3881:9;3877:19;3868:6;3830:67;:::i;:::-;3030:874;;;;;;;;;;:::o;3910:222::-;4003:4;4041:2;4030:9;4026:18;4018:26;;4054:71;4122:1;4111:9;4107:17;4098:6;4054:71;:::i;:::-;3910:222;;;;:::o;4138:474::-;4206:6;4214;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4516:2;4542:53;4587:7;4578:6;4567:9;4563:22;4542:53;:::i;:::-;4532:63;;4487:118;4138:474;;;;;:::o;4618:210::-;4705:4;4743:2;4732:9;4728:18;4720:26;;4756:65;4818:1;4807:9;4803:17;4794:6;4756:65;:::i;:::-;4618:210;;;;:::o;4834:911::-;4929:6;4937;4945;4953;4961;5010:3;4998:9;4989:7;4985:23;4981:33;4978:120;;;5017:79;;:::i;:::-;4978:120;5137:1;5162:53;5207:7;5198:6;5187:9;5183:22;5162:53;:::i;:::-;5152:63;;5108:117;5264:2;5290:53;5335:7;5326:6;5315:9;5311:22;5290:53;:::i;:::-;5280:63;;5235:118;5392:2;5418:53;5463:7;5454:6;5443:9;5439:22;5418:53;:::i;:::-;5408:63;;5363:118;5520:2;5546:53;5591:7;5582:6;5571:9;5567:22;5546:53;:::i;:::-;5536:63;;5491:118;5648:3;5675:53;5720:7;5711:6;5700:9;5696:22;5675:53;:::i;:::-;5665:63;;5619:119;4834:911;;;;;;;;:::o;5751:222::-;5844:4;5882:2;5871:9;5867:18;5859:26;;5895:71;5963:1;5952:9;5948:17;5939:6;5895:71;:::i;:::-;5751:222;;;;:::o;5979:60::-;6007:3;6028:5;6021:12;;5979:60;;;:::o;6045:142::-;6095:9;6128:53;6146:34;6155:24;6173:5;6155:24;:::i;:::-;6146:34;:::i;:::-;6128:53;:::i;:::-;6115:66;;6045:142;;;:::o;6193:126::-;6243:9;6276:37;6307:5;6276:37;:::i;:::-;6263:50;;6193:126;;;:::o;6325:140::-;6389:9;6422:37;6453:5;6422:37;:::i;:::-;6409:50;;6325:140;;;:::o;6471:159::-;6572:51;6617:5;6572:51;:::i;:::-;6567:3;6560:64;6471:159;;:::o;6636:1152::-;6975:4;7013:3;7002:9;6998:19;6990:27;;7027:85;7109:1;7098:9;7094:17;7085:6;7027:85;:::i;:::-;7122:86;7204:2;7193:9;7189:18;7180:6;7122:86;:::i;:::-;7218:72;7286:2;7275:9;7271:18;7262:6;7218:72;:::i;:::-;7300;7368:2;7357:9;7353:18;7344:6;7300:72;:::i;:::-;7382:73;7450:3;7439:9;7435:19;7426:6;7382:73;:::i;:::-;7465;7533:3;7522:9;7518:19;7509:6;7465:73;:::i;:::-;7548;7616:3;7605:9;7601:19;7592:6;7548:73;:::i;:::-;7631;7699:3;7688:9;7684:19;7675:6;7631:73;:::i;:::-;7714:67;7776:3;7765:9;7761:19;7752:6;7714:67;:::i;:::-;6636:1152;;;;;;;;;;;;:::o;7794:116::-;7864:21;7879:5;7864:21;:::i;:::-;7857:5;7854:32;7844:60;;7900:1;7897;7890:12;7844:60;7794:116;:::o;7916:133::-;7959:5;7997:6;7984:20;7975:29;;8013:30;8037:5;8013:30;:::i;:::-;7916:133;;;;:::o;8055:468::-;8120:6;8128;8177:2;8165:9;8156:7;8152:23;8148:32;8145:119;;;8183:79;;:::i;:::-;8145:119;8303:1;8328:53;8373:7;8364:6;8353:9;8349:22;8328:53;:::i;:::-;8318:63;;8274:117;8430:2;8456:50;8498:7;8489:6;8478:9;8474:22;8456:50;:::i;:::-;8446:60;;8401:115;8055:468;;;;;:::o;8529:329::-;8588:6;8637:2;8625:9;8616:7;8612:23;8608:32;8605:119;;;8643:79;;:::i;:::-;8605:119;8763:1;8788:53;8833:7;8824:6;8813:9;8809:22;8788:53;:::i;:::-;8778:63;;8734:117;8529:329;;;;:::o;8864:169::-;8948:11;8982:6;8977:3;8970:19;9022:4;9017:3;9013:14;8998:29;;8864:169;;;;:::o;9039:::-;9179:21;9175:1;9167:6;9163:14;9156:45;9039:169;:::o;9214:366::-;9356:3;9377:67;9441:2;9436:3;9377:67;:::i;:::-;9370:74;;9453:93;9542:3;9453:93;:::i;:::-;9571:2;9566:3;9562:12;9555:19;;9214:366;;;:::o;9586:419::-;9752:4;9790:2;9779:9;9775:18;9767:26;;9839:9;9833:4;9829:20;9825:1;9814:9;9810:17;9803:47;9867:131;9993:4;9867:131;:::i;:::-;9859:139;;9586:419;;;:::o;10011:180::-;10059:77;10056:1;10049:88;10156:4;10153:1;10146:15;10180:4;10177:1;10170:15;10197:191;10237:3;10256:20;10274:1;10256:20;:::i;:::-;10251:25;;10290:20;10308:1;10290:20;:::i;:::-;10285:25;;10333:1;10330;10326:9;10319:16;;10354:3;10351:1;10348:10;10345:36;;;10361:18;;:::i;:::-;10345:36;10197:191;;;;:::o;10394:167::-;10534:19;10530:1;10522:6;10518:14;10511:43;10394:167;:::o;10567:366::-;10709:3;10730:67;10794:2;10789:3;10730:67;:::i;:::-;10723:74;;10806:93;10895:3;10806:93;:::i;:::-;10924:2;10919:3;10915:12;10908:19;;10567:366;;;:::o;10939:419::-;11105:4;11143:2;11132:9;11128:18;11120:26;;11192:9;11186:4;11182:20;11178:1;11167:9;11163:17;11156:47;11220:131;11346:4;11220:131;:::i;:::-;11212:139;;10939:419;;;:::o;11364:170::-;11504:22;11500:1;11492:6;11488:14;11481:46;11364:170;:::o;11540:366::-;11682:3;11703:67;11767:2;11762:3;11703:67;:::i;:::-;11696:74;;11779:93;11868:3;11779:93;:::i;:::-;11897:2;11892:3;11888:12;11881:19;;11540:366;;;:::o;11912:419::-;12078:4;12116:2;12105:9;12101:18;12093:26;;12165:9;12159:4;12155:20;12151:1;12140:9;12136:17;12129:47;12193:131;12319:4;12193:131;:::i;:::-;12185:139;;11912:419;;;:::o;12337:173::-;12477:25;12473:1;12465:6;12461:14;12454:49;12337:173;:::o;12516:366::-;12658:3;12679:67;12743:2;12738:3;12679:67;:::i;:::-;12672:74;;12755:93;12844:3;12755:93;:::i;:::-;12873:2;12868:3;12864:12;12857:19;;12516:366;;;:::o;12888:419::-;13054:4;13092:2;13081:9;13077:18;13069:26;;13141:9;13135:4;13131:20;13127:1;13116:9;13112:17;13105:47;13169:131;13295:4;13169:131;:::i;:::-;13161:139;;12888:419;;;:::o;13313:194::-;13353:4;13373:20;13391:1;13373:20;:::i;:::-;13368:25;;13407:20;13425:1;13407:20;:::i;:::-;13402:25;;13451:1;13448;13444:9;13436:17;;13475:1;13469:4;13466:11;13463:37;;;13480:18;;:::i;:::-;13463:37;13313:194;;;;:::o;13513:171::-;13653:23;13649:1;13641:6;13637:14;13630:47;13513:171;:::o;13690:366::-;13832:3;13853:67;13917:2;13912:3;13853:67;:::i;:::-;13846:74;;13929:93;14018:3;13929:93;:::i;:::-;14047:2;14042:3;14038:12;14031:19;;13690:366;;;:::o;14062:419::-;14228:4;14266:2;14255:9;14251:18;14243:26;;14315:9;14309:4;14305:20;14301:1;14290:9;14286:17;14279:47;14343:131;14469:4;14343:131;:::i;:::-;14335:139;;14062:419;;;:::o;14487:168::-;14627:20;14623:1;14615:6;14611:14;14604:44;14487:168;:::o;14661:366::-;14803:3;14824:67;14888:2;14883:3;14824:67;:::i;:::-;14817:74;;14900:93;14989:3;14900:93;:::i;:::-;15018:2;15013:3;15009:12;15002:19;;14661:366;;;:::o;15033:419::-;15199:4;15237:2;15226:9;15222:18;15214:26;;15286:9;15280:4;15276:20;15272:1;15261:9;15257:17;15250:47;15314:131;15440:4;15314:131;:::i;:::-;15306:139;;15033:419;;;:::o;15458:164::-;15598:16;15594:1;15586:6;15582:14;15575:40;15458:164;:::o;15628:366::-;15770:3;15791:67;15855:2;15850:3;15791:67;:::i;:::-;15784:74;;15867:93;15956:3;15867:93;:::i;:::-;15985:2;15980:3;15976:12;15969:19;;15628:366;;;:::o;16000:419::-;16166:4;16204:2;16193:9;16189:18;16181:26;;16253:9;16247:4;16243:20;16239:1;16228:9;16224:17;16217:47;16281:131;16407:4;16281:131;:::i;:::-;16273:139;;16000:419;;;:::o;16425:176::-;16565:28;16561:1;16553:6;16549:14;16542:52;16425:176;:::o;16607:366::-;16749:3;16770:67;16834:2;16829:3;16770:67;:::i;:::-;16763:74;;16846:93;16935:3;16846:93;:::i;:::-;16964:2;16959:3;16955:12;16948:19;;16607:366;;;:::o;16979:419::-;17145:4;17183:2;17172:9;17168:18;17160:26;;17232:9;17226:4;17222:20;17218:1;17207:9;17203:17;17196:47;17260:131;17386:4;17260:131;:::i;:::-;17252:139;;16979:419;;;:::o;17404:171::-;17544:23;17540:1;17532:6;17528:14;17521:47;17404:171;:::o;17581:366::-;17723:3;17744:67;17808:2;17803:3;17744:67;:::i;:::-;17737:74;;17820:93;17909:3;17820:93;:::i;:::-;17938:2;17933:3;17929:12;17922:19;;17581:366;;;:::o;17953:419::-;18119:4;18157:2;18146:9;18142:18;18134:26;;18206:9;18200:4;18196:20;18192:1;18181:9;18177:17;18170:47;18234:131;18360:4;18234:131;:::i;:::-;18226:139;;17953:419;;;:::o;18378:170::-;18518:22;18514:1;18506:6;18502:14;18495:46;18378:170;:::o;18554:366::-;18696:3;18717:67;18781:2;18776:3;18717:67;:::i;:::-;18710:74;;18793:93;18882:3;18793:93;:::i;:::-;18911:2;18906:3;18902:12;18895:19;;18554:366;;;:::o;18926:419::-;19092:4;19130:2;19119:9;19115:18;19107:26;;19179:9;19173:4;19169:20;19165:1;19154:9;19150:17;19143:47;19207:131;19333:4;19207:131;:::i;:::-;19199:139;;18926:419;;;:::o;19351:221::-;19491:34;19487:1;19479:6;19475:14;19468:58;19560:4;19555:2;19547:6;19543:15;19536:29;19351:221;:::o;19578:366::-;19720:3;19741:67;19805:2;19800:3;19741:67;:::i;:::-;19734:74;;19817:93;19906:3;19817:93;:::i;:::-;19935:2;19930:3;19926:12;19919:19;;19578:366;;;:::o;19950:419::-;20116:4;20154:2;20143:9;20139:18;20131:26;;20203:9;20197:4;20193:20;20189:1;20178:9;20174:17;20167:47;20231:131;20357:4;20231:131;:::i;:::-;20223:139;;19950:419;;;:::o;20375:664::-;20580:4;20618:3;20607:9;20603:19;20595:27;;20632:71;20700:1;20689:9;20685:17;20676:6;20632:71;:::i;:::-;20713:72;20781:2;20770:9;20766:18;20757:6;20713:72;:::i;:::-;20795;20863:2;20852:9;20848:18;20839:6;20795:72;:::i;:::-;20877;20945:2;20934:9;20930:18;20921:6;20877:72;:::i;:::-;20959:73;21027:3;21016:9;21012:19;21003:6;20959:73;:::i;:::-;20375:664;;;;;;;;:::o;21045:233::-;21084:3;21107:24;21125:5;21107:24;:::i;:::-;21098:33;;21153:66;21146:5;21143:77;21140:103;;21223:18;;:::i;:::-;21140:103;21270:1;21263:5;21259:13;21252:20;;21045:233;;;:::o;21284:410::-;21324:7;21347:20;21365:1;21347:20;:::i;:::-;21342:25;;21381:20;21399:1;21381:20;:::i;:::-;21376:25;;21436:1;21433;21429:9;21458:30;21476:11;21458:30;:::i;:::-;21447:41;;21637:1;21628:7;21624:15;21621:1;21618:22;21598:1;21591:9;21571:83;21548:139;;21667:18;;:::i;:::-;21548:139;21332:362;21284:410;;;;:::o;21700:180::-;21748:77;21745:1;21738:88;21845:4;21842:1;21835:15;21869:4;21866:1;21859:15;21886:185;21926:1;21943:20;21961:1;21943:20;:::i;:::-;21938:25;;21977:20;21995:1;21977:20;:::i;:::-;21972:25;;22016:1;22006:35;;22021:18;;:::i;:::-;22006:35;22063:1;22060;22056:9;22051:14;;21886:185;;;;:::o;22077:182::-;22217:34;22213:1;22205:6;22201:14;22194:58;22077:182;:::o;22265:366::-;22407:3;22428:67;22492:2;22487:3;22428:67;:::i;:::-;22421:74;;22504:93;22593:3;22504:93;:::i;:::-;22622:2;22617:3;22613:12;22606:19;;22265:366;;;:::o;22637:419::-;22803:4;22841:2;22830:9;22826:18;22818:26;;22890:9;22884:4;22880:20;22876:1;22865:9;22861:17;22854:47;22918:131;23044:4;22918:131;:::i;:::-;22910:139;;22637:419;;;:::o;23062:181::-;23202:33;23198:1;23190:6;23186:14;23179:57;23062:181;:::o;23249:366::-;23391:3;23412:67;23476:2;23471:3;23412:67;:::i;:::-;23405:74;;23488:93;23577:3;23488:93;:::i;:::-;23606:2;23601:3;23597:12;23590:19;;23249:366;;;:::o;23621:419::-;23787:4;23825:2;23814:9;23810:18;23802:26;;23874:9;23868:4;23864:20;23860:1;23849:9;23845:17;23838:47;23902:131;24028:4;23902:131;:::i;:::-;23894:139;;23621:419;;;:::o;24046:332::-;24167:4;24205:2;24194:9;24190:18;24182:26;;24218:71;24286:1;24275:9;24271:17;24262:6;24218:71;:::i;:::-;24299:72;24367:2;24356:9;24352:18;24343:6;24299:72;:::i;:::-;24046:332;;;;;:::o;24384:166::-;24524:18;24520:1;24512:6;24508:14;24501:42;24384:166;:::o;24556:366::-;24698:3;24719:67;24783:2;24778:3;24719:67;:::i;:::-;24712:74;;24795:93;24884:3;24795:93;:::i;:::-;24913:2;24908:3;24904:12;24897:19;;24556:366;;;:::o;24928:419::-;25094:4;25132:2;25121:9;25117:18;25109:26;;25181:9;25175:4;25171:20;25167:1;25156:9;25152:17;25145:47;25209:131;25335:4;25209:131;:::i;:::-;25201:139;;24928:419;;;:::o;25353:442::-;25502:4;25540:2;25529:9;25525:18;25517:26;;25553:71;25621:1;25610:9;25606:17;25597:6;25553:71;:::i;:::-;25634:72;25702:2;25691:9;25687:18;25678:6;25634:72;:::i;:::-;25716;25784:2;25773:9;25769:18;25760:6;25716:72;:::i;:::-;25353:442;;;;;;:::o;25801:170::-;25941:22;25937:1;25929:6;25925:14;25918:46;25801:170;:::o;25977:366::-;26119:3;26140:67;26204:2;26199:3;26140:67;:::i;:::-;26133:74;;26216:93;26305:3;26216:93;:::i;:::-;26334:2;26329:3;26325:12;26318:19;;25977:366;;;:::o;26349:419::-;26515:4;26553:2;26542:9;26538:18;26530:26;;26602:9;26596:4;26592:20;26588:1;26577:9;26573:17;26566:47;26630:131;26756:4;26630:131;:::i;:::-;26622:139;;26349:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2399400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_PRECISION()": "415",
								"compound(uint256)": "infinite",
								"createPool(address,address,uint256,uint256,uint256)": "infinite",
								"earned(uint256,address)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"exit(uint256)": "infinite",
								"getPoolInfo(uint256)": "infinite",
								"getReward(uint256)": "infinite",
								"getUserInfo(uint256,address)": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"paused()": "2591",
								"poolCount()": "2557",
								"pools(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardPerToken(uint256)": "infinite",
								"setPoolStatus(uint256,bool)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateRewardRate(uint256,uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1252,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 10088,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048955b86420344f9d49ca0ace674696553f984e6b7be37c8ea7a1db289cbf68164736f6c634300081e0033",
									".code": [
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "AC4AFA38"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "AC4AFA38"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "B32534CF"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "BBCAF3FE"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "E39C08FC"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "F525CB68"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "85AC165A"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "874C120B"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "93F1A40B"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "AA5F7E26"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "441A3E70"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "441A3E70"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "5312EA8E"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "7B0472F0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "7F8661A1"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "1069F3B5"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "1C4B774B"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "2F380B35"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "3D6AA5E1"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 10088,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 9387,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9387,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9387,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5989,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5989,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 8691,
											"end": 9375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8691,
											"end": 9375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8691,
											"end": 9375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1160,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1160,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10018,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5200,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5200,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 7535,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 7535,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4427,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 4427,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 6475,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6475,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 9943,
											"end": 10006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2634,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2634,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3729,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3729,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3729,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1052,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1052,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1052,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 6666,
											"end": 7523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6666,
											"end": 7523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1001,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1001,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1001,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 8096,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8096,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8456,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 8456,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4145,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4145,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4145,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1129,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9499,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9723,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9724,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9725,
											"end": 9729,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9730,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 9802,
											"end": 9808,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9810,
											"end": 9814,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 9795,
											"end": 9815,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 9795,
											"end": 9815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9839,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9830,
											"end": 9850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9850,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9900,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9901,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9888,
											"end": 9912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9912,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9874,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9865,
											"end": 9885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 9865,
											"end": 9912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 9865,
											"end": 9912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6091,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6122,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6134,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2042,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2003,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2142,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2246,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2261,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2239,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2281,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2344,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6174,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6185,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6192,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6193,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6204,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6205,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6205,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6205,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6230,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6237,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6245,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6245,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6245,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6245,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6280,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6276,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6270,
											"end": 6280,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6456,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6456,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6266,
											"end": 6456,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6313,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6301,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6297,
											"end": 6309,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6313,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6313,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6313,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6313,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6367,
											"end": 6377,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6379,
											"end": 6385,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6333,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6340,
											"modifierDepth": 3,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6341,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6366,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6328,
											"end": 6366,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6366,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 6328,
											"end": 6366,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6328,
											"end": 6386,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6435,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6427,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "D6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51"
										},
										{
											"begin": 6437,
											"end": 6443,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6406,
											"end": 6444,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6444,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6456,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6266,
											"end": 6456,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6463,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6463,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2363,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 8980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 9013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9068,
											"end": 9092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9107,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9108,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9068,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9068,
											"end": 9108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9190,
											"end": 9206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9226,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9222,
											"end": 9237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9256,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9252,
											"end": 9268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9268,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9287,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 9283,
											"end": 9300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9300,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9319,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9315,
											"end": 9330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9330,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9349,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 9375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1160,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10067,
											"end": 10077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 10067,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 10067,
											"end": 10077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 10067,
											"end": 10077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5311,
											"end": 5317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5348,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2042,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2003,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2142,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2246,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2261,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2239,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2281,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2344,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5397,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5393,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5387,
											"end": 5397,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5379,
											"end": 5419,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5379,
											"end": 5419,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5440,
											"end": 5464,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5472,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5479,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5480,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5440,
											"end": 5480,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5440,
											"end": 5480,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5512,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5530,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5531,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5542,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5543,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5588,
											"end": 5594,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5576,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5584,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5584,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5584,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5594,
											"modifierDepth": 3,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5594,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5564,
											"end": 5619,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5564,
											"end": 5619,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5693,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5689,
											"end": 5704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5704,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5675,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5671,
											"end": 5686,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5686,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5671,
											"end": 5704,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 5671,
											"end": 5704,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5667,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5704,
											"modifierDepth": 3,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5704,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5630,
											"end": 5755,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5630,
											"end": 5755,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5802,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5780,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5792,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5776,
											"end": 5792,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5792,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5776,
											"end": 5802,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5802,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5835,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5817,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5825,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5825,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5825,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5813,
											"end": 5835,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5887,
											"end": 5897,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5905,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5860,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5873,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5886,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5886,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5886,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5856,
											"end": 5886,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5954,
											"end": 5960,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5942,
											"end": 5952,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 5962,
											"end": 5968,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5932,
											"end": 5969,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5977,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5977,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2363,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7647,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7666,
											"end": 7687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7705,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7706,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7717,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7718,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7666,
											"end": 7718,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7666,
											"end": 7718,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7758,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7758,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7793,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7797,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 7779,
											"end": 7823,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7779,
											"end": 7823,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 7879,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7856,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7857,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7869,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7844,
											"end": 7869,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7869,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 7844,
											"end": 7879,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7894,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7902,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7902,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7906,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7906,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7906,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7921,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7929,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7917,
											"end": 7929,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7933,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7933,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7933,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7933,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 7994,
											"end": 8004,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8012,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7959,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7966,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7967,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 7980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 7993,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7993,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 7954,
											"end": 7993,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 7954,
											"end": 8013,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8067,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8059,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 8069,
											"end": 8075,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 8039,
											"end": 8076,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8076,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 8084,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 8084,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 8084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 8084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4561,
											"end": 4567,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4596,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2564,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2551,
											"end": 2602,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4627,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4639,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1972,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1980,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2042,
											"end": 2048,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2041,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2003,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2142,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 4,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2192,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2246,
											"end": 2252,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2261,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2245,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2239,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2228,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2281,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2344,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4675,
											"end": 4676,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"modifierDepth": 5,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4676,
											"modifierDepth": 5,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4658,
											"end": 4695,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4658,
											"end": 4695,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4740,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4748,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4755,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4756,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4756,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4756,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4788,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4799,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4806,
											"modifierDepth": 5,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4807,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4818,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4819,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4819,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4819,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4862,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4875,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4858,
											"end": 4875,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4875,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4854,
											"modifierDepth": 5,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4875,
											"modifierDepth": 5,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4875,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4840,
											"end": 4906,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4840,
											"end": 4906,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4947,
											"end": 4953,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4943,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4927,
											"end": 4943,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4943,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4927,
											"end": 4953,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4953,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4986,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4968,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4976,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4976,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4976,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4964,
											"end": 4986,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 4986,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5030,
											"modifierDepth": 5,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5001,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5012,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4997,
											"end": 5012,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5030,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5030,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5030,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5030,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5086,
											"end": 5096,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5110,
											"modifierDepth": 5,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5119,
											"modifierDepth": 5,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5055,
											"modifierDepth": 5,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5051,
											"end": 5068,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5085,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5051,
											"end": 5085,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5085,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5051,
											"end": 5085,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5051,
											"end": 5120,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5171,
											"modifierDepth": 5,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5153,
											"end": 5163,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 5173,
											"end": 5179,
											"modifierDepth": 5,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5146,
											"end": 5180,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5180,
											"modifierDepth": 5,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 4647,
											"end": 5188,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4647,
											"end": 5188,
											"modifierDepth": 5,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2363,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2614,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2614,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6557,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6565,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6576,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6588,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6629,
											"end": 6646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6646,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6629,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 9943,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 9998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9990,
											"end": 9996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9990,
											"end": 9998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9990,
											"end": 9998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9990,
											"end": 9998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 10006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2854,
											"end": 2881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2867,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2854,
											"end": 2881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2881,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2846,
											"end": 2907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2846,
											"end": 2907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2950,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2938,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2918,
											"end": 2977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3007,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3011,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2988,
											"end": 3050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2988,
											"end": 3050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3238,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3269,
											"end": 3284,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3454,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3087,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3531,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B203C0A4A9D84DDDE23DBA31A828C25525B2E0B5FE6A0E356D983AED95961CA1"
										},
										{
											"begin": 3546,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3586,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3655,
											"end": 3666,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3496,
											"end": 3677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3677,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3698,
											"end": 3709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3842,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3886,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3861,
											"end": 3947,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 3935,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3910,
											"end": 3935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 3935,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3903,
											"end": 3935,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3947,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3861,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4034,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4019,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4019,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4018,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4018,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4018,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4018,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4017,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4017,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3974,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3974,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 4125,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 6769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6798,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2572,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2551,
											"end": 2602,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2551,
											"end": 2602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6829,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6831,
											"end": 6841,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1972,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1980,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2042,
											"end": 2048,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2041,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2003,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2142,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2192,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2246,
											"end": 2252,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2261,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2245,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2239,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2228,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2281,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2344,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6934,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6941,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6942,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6929,
											"end": 6954,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6955,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6955,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6895,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6902,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6903,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6890,
											"end": 6916,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6955,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6955,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6955,
											"modifierDepth": 4,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6860,
											"end": 7015,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6860,
											"end": 7015,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7057,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7068,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7075,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7076,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7087,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7088,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7088,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7088,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7113,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7120,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7128,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7116,
											"end": 7128,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7128,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7128,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7128,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7163,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7159,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7163,
											"modifierDepth": 4,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7516,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7516,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7149,
											"end": 7516,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7195,
											"end": 7196,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7184,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7192,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7180,
											"end": 7192,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7196,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7196,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7196,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7196,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7293,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7263,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7270,
											"modifierDepth": 4,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7271,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7283,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7258,
											"end": 7283,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7283,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7258,
											"end": 7293,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7293,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7330,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7312,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7320,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7320,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7320,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7308,
											"end": 7330,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7330,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7378,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7349,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7360,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7345,
											"end": 7360,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7378,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7378,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7378,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7378,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7441,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7433,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "D6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51"
										},
										{
											"begin": 7443,
											"end": 7449,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7412,
											"end": 7450,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7450,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7495,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7487,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 7497,
											"end": 7503,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7470,
											"end": 7504,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7504,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7516,
											"modifierDepth": 4,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7149,
											"end": 7516,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 7523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 7523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2363,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2614,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2614,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 7523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 7523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8215,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8246,
											"end": 8252,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1988,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2042,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2003,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2024,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2079,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2097,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2142,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2143,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2200,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2209,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2246,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2261,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2239,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2239,
											"end": 2262,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2262,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2281,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2304,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2344,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2118,
											"end": 2344,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8291,
											"end": 8298,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8302,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8283,
											"end": 8341,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8283,
											"end": 8341,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8386,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8357,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8364,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8365,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8376,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8352,
											"end": 8376,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8386,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8386,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8386,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8386,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8426,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "C390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50"
										},
										{
											"begin": 8428,
											"end": 8435,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 8402,
											"end": 8436,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8436,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2363,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2422,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8622,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8605,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8606,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 8593,
											"end": 8613,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8622,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8662,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B3C3C605D1520CD5BF41301DD5C04929E0FF021B02A10EA259B5A5B2D521A29C"
										},
										{
											"begin": 8664,
											"end": 8670,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8638,
											"end": 8671,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8671,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4275,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4283,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4284,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4395,
											"end": 4399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4371,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4344,
											"end": 4371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4371,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4319,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4341,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4319,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4319,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4303,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4303,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4302,
											"end": 4392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4302,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4302,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4302,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2019,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2005,
											"end": 2014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2020,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2030,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2101,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 2030,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2179,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2161,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2111,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2193,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2193,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2275,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2347,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 2275,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2466,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 2474,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2644,
											"end": 2653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2619,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 2619,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2619,
											"end": 2672,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 2619,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2672,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2672,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2813,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 2695,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 2800,
											"end": 2805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 2782,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2806,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 2782,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2807,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2909,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 2819,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2889,
											"end": 2902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2871,
											"end": 2903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2871,
											"end": 2903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3024,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2915,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 2996,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3017,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 2996,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3018,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3326,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3327,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3337,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3408,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3337,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3418,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3500,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3639,
											"end": 3648,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3582,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3654,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 3582,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 3732,
											"end": 3735,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3721,
											"end": 3730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3664,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3815,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3747,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3820,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3747,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 3892,
											"end": 3895,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3830,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4054,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4107,
											"end": 4124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4054,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4054,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4054,
											"end": 4125,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 4054,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4251,
											"end": 4260,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4261,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4234,
											"end": 4266,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 4269,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4414,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4360,
											"end": 4477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4576,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4542,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4803,
											"end": 4820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4756,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4821,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4756,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 4996,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5014,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5098,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4978,
											"end": 5098,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5017,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 5017,
											"end": 5096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5096,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5017,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5098,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4978,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5137,
											"end": 5138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5207,
											"end": 5214,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5162,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5162,
											"end": 5215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5162,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5162,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5215,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5108,
											"end": 5225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5290,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5290,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5343,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5290,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5280,
											"end": 5343,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5280,
											"end": 5343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5392,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5418,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 5463,
											"end": 5470,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5454,
											"end": 5460,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5418,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5471,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 5418,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5471,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5363,
											"end": 5481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5522,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5567,
											"end": 5589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5546,
											"end": 5599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5599,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5651,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5675,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5675,
											"end": 5728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5728,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 5675,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5728,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5844,
											"end": 5848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5884,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 5885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5859,
											"end": 5885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5859,
											"end": 5885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 5965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 5895,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5966,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 5895,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6033,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 6155,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 6146,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 6128,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6115,
											"end": 6181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6115,
											"end": 6181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 6307,
											"end": 6312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6276,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6325,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6389,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6422,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6422,
											"end": 6459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6422,
											"end": 6459,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 6422,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6409,
											"end": 6459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6409,
											"end": 6459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6630,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6471,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6572,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6572,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6572,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6572,
											"end": 6623,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 6572,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6624,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 7017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 7017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7027,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7027,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 7027,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7027,
											"end": 7112,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7027,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 7204,
											"end": 7206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 7122,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7208,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 7122,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7262,
											"end": 7268,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7218,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7300,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7344,
											"end": 7350,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7300,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7300,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7300,
											"end": 7372,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7300,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 7450,
											"end": 7453,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7432,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7382,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7455,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 7382,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7522,
											"end": 7531,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7465,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7538,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 7465,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7616,
											"end": 7619,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 7605,
											"end": 7614,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7601,
											"end": 7620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7592,
											"end": 7598,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7548,
											"end": 7621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7621,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7548,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 7699,
											"end": 7702,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7688,
											"end": 7697,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7631,
											"end": 7704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7704,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 7631,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7761,
											"end": 7780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7714,
											"end": 7781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7781,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 7714,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 7788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7794,
											"end": 7910,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 7794,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 7879,
											"end": 7884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7864,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7857,
											"end": 7862,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7844,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 7844,
											"end": 7904,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7902,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7844,
											"end": 7904,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 7844,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7794,
											"end": 7910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7794,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7959,
											"end": 7964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7975,
											"end": 8004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7975,
											"end": 8004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8037,
											"end": 8042,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8013,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8152,
											"end": 8175,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8148,
											"end": 8180,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8264,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 8145,
											"end": 8264,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8183,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 8183,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 8183,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8183,
											"end": 8262,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 8183,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8264,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 8145,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8303,
											"end": 8304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 8373,
											"end": 8380,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8364,
											"end": 8370,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8362,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 8328,
											"end": 8381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8381,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 8328,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8318,
											"end": 8381,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8318,
											"end": 8381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8274,
											"end": 8391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8430,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 8498,
											"end": 8505,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8478,
											"end": 8487,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8474,
											"end": 8496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8456,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 8456,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8506,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8639,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8623,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8612,
											"end": 8635,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8608,
											"end": 8640,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 8643,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 8833,
											"end": 8840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8824,
											"end": 8830,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 8788,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8948,
											"end": 8959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8977,
											"end": 8980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8970,
											"end": 8989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9022,
											"end": 9026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9013,
											"end": 9027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8998,
											"end": 9027,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8998,
											"end": 9027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9039,
											"end": 9208,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 9039,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9179,
											"end": 9200,
											"name": "PUSH",
											"source": 11,
											"value": "506F6F6C20646F6573206E6F7420657869737400000000000000000000000000"
										},
										{
											"begin": 9175,
											"end": 9176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9167,
											"end": 9173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9039,
											"end": 9208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9039,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 9436,
											"end": 9439,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 9377,
											"end": 9444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9370,
											"end": 9444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9370,
											"end": 9444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 9453,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9562,
											"end": 9574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9752,
											"end": 9756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9790,
											"end": 9792,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9767,
											"end": 9793,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9767,
											"end": 9793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9839,
											"end": 9848,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9833,
											"end": 9837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9829,
											"end": 9849,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9810,
											"end": 9827,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9803,
											"end": 9850,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 9993,
											"end": 9997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 9867,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10191,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 10011,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10136,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10056,
											"end": 10057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10156,
											"end": 10160,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10153,
											"end": 10154,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10180,
											"end": 10184,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10185,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 10256,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10251,
											"end": 10276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10251,
											"end": 10276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10308,
											"end": 10309,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 10290,
											"end": 10310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10310,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10290,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10333,
											"end": 10334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10348,
											"end": 10358,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10381,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 10345,
											"end": 10381,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 10361,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10381,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 10345,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10197,
											"end": 10388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10561,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 10394,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10534,
											"end": 10553,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10511,
											"end": 10554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10933,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 10567,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 10794,
											"end": 10796,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10789,
											"end": 10792,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 10730,
											"end": 10797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 10797,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 10730,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10723,
											"end": 10797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10723,
											"end": 10797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 10806,
											"end": 10899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10899,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 10806,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10919,
											"end": 10922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10915,
											"end": 10927,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10908,
											"end": 10927,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10908,
											"end": 10927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10933,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10933,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10939,
											"end": 11358,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 10939,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11105,
											"end": 11109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11132,
											"end": 11141,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11120,
											"end": 11146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11120,
											"end": 11146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11192,
											"end": 11201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11182,
											"end": 11202,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11167,
											"end": 11176,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11163,
											"end": 11180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11156,
											"end": 11203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11346,
											"end": 11350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 11220,
											"end": 11351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11351,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11220,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11212,
											"end": 11351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11212,
											"end": 11351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10939,
											"end": 11358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10939,
											"end": 11358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10939,
											"end": 11358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10939,
											"end": 11358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11364,
											"end": 11534,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 11364,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11526,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11488,
											"end": 11502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11481,
											"end": 11527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11364,
											"end": 11534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11364,
											"end": 11534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11682,
											"end": 11685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11767,
											"end": 11769,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 11703,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11696,
											"end": 11770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11696,
											"end": 11770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 11868,
											"end": 11871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 11779,
											"end": 11872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 11900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11540,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12101,
											"end": 12119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12093,
											"end": 12119,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12093,
											"end": 12119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12165,
											"end": 12174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12175,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12149,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12136,
											"end": 12153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12129,
											"end": 12176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 12319,
											"end": 12323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 12193,
											"end": 12324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12185,
											"end": 12324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12185,
											"end": 12324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 12331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12337,
											"end": 12510,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 12337,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12477,
											"end": 12502,
											"name": "PUSH",
											"source": 11,
											"value": "546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000"
										},
										{
											"begin": 12473,
											"end": 12474,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12461,
											"end": 12475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12503,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12337,
											"end": 12510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12337,
											"end": 12510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12882,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 12516,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12658,
											"end": 12661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 12743,
											"end": 12745,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 12738,
											"end": 12741,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12679,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 12679,
											"end": 12746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12679,
											"end": 12746,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 12679,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12672,
											"end": 12746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12672,
											"end": 12746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12844,
											"end": 12847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 12755,
											"end": 12848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12848,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12755,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12875,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12868,
											"end": 12871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12857,
											"end": 12876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12857,
											"end": 12876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 13307,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 12888,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13054,
											"end": 13058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13081,
											"end": 13090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13077,
											"end": 13095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13141,
											"end": 13150,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13131,
											"end": 13151,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13127,
											"end": 13128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13116,
											"end": 13125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13112,
											"end": 13129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13105,
											"end": 13152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 13295,
											"end": 13299,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 13169,
											"end": 13300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13300,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 13169,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13161,
											"end": 13300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13161,
											"end": 13300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 13307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 13307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 13307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 13307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13353,
											"end": 13357,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13373,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13373,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 13373,
											"end": 13393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13373,
											"end": 13393,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13373,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13425,
											"end": 13426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 13407,
											"end": 13427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13427,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13407,
											"end": 13427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13402,
											"end": 13427,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13402,
											"end": 13427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13448,
											"end": 13449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13444,
											"end": 13453,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13436,
											"end": 13453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13436,
											"end": 13453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13475,
											"end": 13476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13469,
											"end": 13473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13466,
											"end": 13477,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13500,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13463,
											"end": 13500,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 13480,
											"end": 13498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13500,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13463,
											"end": 13500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13684,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 13513,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13653,
											"end": 13676,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13647,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13637,
											"end": 13651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13630,
											"end": 13677,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13513,
											"end": 13684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 14056,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 13690,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13832,
											"end": 13835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 13917,
											"end": 13919,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13853,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 13853,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13853,
											"end": 13920,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 13853,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 13920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 13920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 14018,
											"end": 14021,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 13929,
											"end": 14022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 14022,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 13929,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14049,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14042,
											"end": 14045,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14038,
											"end": 14050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14050,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14050,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 14056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 14056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 14056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 14056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14481,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 14062,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14228,
											"end": 14232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14266,
											"end": 14268,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14255,
											"end": 14264,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14315,
											"end": 14324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14309,
											"end": 14313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14305,
											"end": 14325,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14301,
											"end": 14302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14286,
											"end": 14303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14326,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14343,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 14469,
											"end": 14473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14343,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 14343,
											"end": 14474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14343,
											"end": 14474,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 14343,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14335,
											"end": 14474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14335,
											"end": 14474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14487,
											"end": 14655,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 14487,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14627,
											"end": 14647,
											"name": "PUSH",
											"source": 11,
											"value": "506F6F6C206973206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 14623,
											"end": 14624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14615,
											"end": 14621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14604,
											"end": 14648,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14487,
											"end": 14655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14487,
											"end": 14655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 14888,
											"end": 14890,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 14824,
											"end": 14891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14817,
											"end": 14891,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14817,
											"end": 14891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14989,
											"end": 14992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 14900,
											"end": 14993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15018,
											"end": 15020,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15016,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15009,
											"end": 15021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15002,
											"end": 15021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15002,
											"end": 15021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 15027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15199,
											"end": 15203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15237,
											"end": 15239,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15226,
											"end": 15235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15222,
											"end": 15240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15214,
											"end": 15240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15214,
											"end": 15240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15280,
											"end": 15284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15272,
											"end": 15273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15270,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15257,
											"end": 15274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15250,
											"end": 15297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 15440,
											"end": 15444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 15314,
											"end": 15445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15306,
											"end": 15445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15306,
											"end": 15445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15033,
											"end": 15452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15458,
											"end": 15622,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 15458,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15598,
											"end": 15614,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 15594,
											"end": 15595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15458,
											"end": 15622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15458,
											"end": 15622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15628,
											"end": 15994,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 15628,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15770,
											"end": 15773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15791,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 15855,
											"end": 15857,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 15850,
											"end": 15853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15791,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 15791,
											"end": 15858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15791,
											"end": 15858,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 15791,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 15858,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 15858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 15956,
											"end": 15959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 15867,
											"end": 15960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 15960,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 15867,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 15987,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15980,
											"end": 15983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15976,
											"end": 15988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15969,
											"end": 15988,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15969,
											"end": 15988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15628,
											"end": 15994,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15628,
											"end": 15994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15628,
											"end": 15994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15628,
											"end": 15994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16419,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 16000,
											"end": 16419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16166,
											"end": 16170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16204,
											"end": 16206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16193,
											"end": 16202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16189,
											"end": 16207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16253,
											"end": 16262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16247,
											"end": 16251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16243,
											"end": 16263,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16239,
											"end": 16240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16228,
											"end": 16237,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16217,
											"end": 16264,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16281,
											"end": 16412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 16407,
											"end": 16411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16281,
											"end": 16412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 16281,
											"end": 16412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16281,
											"end": 16412,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 16281,
											"end": 16412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16425,
											"end": 16601,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 16425,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16565,
											"end": 16593,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E742062656C6F77206D696E696D756D207374616B65000000000000"
										},
										{
											"begin": 16561,
											"end": 16562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16549,
											"end": 16563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16542,
											"end": 16594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16425,
											"end": 16601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16425,
											"end": 16601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16973,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 16607,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16749,
											"end": 16752,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16770,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 16834,
											"end": 16836,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 16829,
											"end": 16832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 16770,
											"end": 16837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16837,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 16770,
											"end": 16837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16763,
											"end": 16837,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16763,
											"end": 16837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 16935,
											"end": 16938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 16846,
											"end": 16939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16939,
											"name": "tag",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 16846,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 16966,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16959,
											"end": 16962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16955,
											"end": 16967,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16948,
											"end": 16967,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16948,
											"end": 16967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17398,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 16979,
											"end": 17398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17145,
											"end": 17149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17185,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17172,
											"end": 17181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17168,
											"end": 17186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17160,
											"end": 17186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17160,
											"end": 17186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17232,
											"end": 17241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17226,
											"end": 17230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17218,
											"end": 17219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17207,
											"end": 17216,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17203,
											"end": 17220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17196,
											"end": 17243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 17386,
											"end": 17390,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 17260,
											"end": 17391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17391,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 17260,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17252,
											"end": 17391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17252,
											"end": 17391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17404,
											"end": 17575,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 17404,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17544,
											"end": 17567,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C6964207374616B696E6720746F6B656E0000000000000000000000"
										},
										{
											"begin": 17540,
											"end": 17541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17532,
											"end": 17538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17528,
											"end": 17542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17521,
											"end": 17568,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17404,
											"end": 17575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17404,
											"end": 17575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17581,
											"end": 17947,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 17581,
											"end": 17947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17723,
											"end": 17726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17744,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 17808,
											"end": 17810,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 17803,
											"end": 17806,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17744,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 17744,
											"end": 17811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17744,
											"end": 17811,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 17744,
											"end": 17811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17737,
											"end": 17811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17737,
											"end": 17811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 17909,
											"end": 17912,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 17820,
											"end": 17913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17913,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 17820,
											"end": 17913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 17940,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17933,
											"end": 17936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17929,
											"end": 17941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17922,
											"end": 17941,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17922,
											"end": 17941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17581,
											"end": 17947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17581,
											"end": 17947,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17581,
											"end": 17947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17581,
											"end": 17947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17953,
											"end": 18372,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 17953,
											"end": 18372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18119,
											"end": 18123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18157,
											"end": 18159,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18146,
											"end": 18155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18142,
											"end": 18160,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18134,
											"end": 18160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18134,
											"end": 18160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18200,
											"end": 18204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18196,
											"end": 18216,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18192,
											"end": 18193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18181,
											"end": 18190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 18360,
											"end": 18364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 18234,
											"end": 18365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18365,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 18234,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18226,
											"end": 18365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18226,
											"end": 18365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17953,
											"end": 18372,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17953,
											"end": 18372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17953,
											"end": 18372,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17953,
											"end": 18372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18378,
											"end": 18548,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 18378,
											"end": 18548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18518,
											"end": 18540,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
										},
										{
											"begin": 18514,
											"end": 18515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18506,
											"end": 18512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18502,
											"end": 18516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18495,
											"end": 18541,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18378,
											"end": 18548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18378,
											"end": 18548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18554,
											"end": 18920,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 18554,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18699,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18717,
											"end": 18784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 18781,
											"end": 18783,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 18776,
											"end": 18779,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18717,
											"end": 18784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 18717,
											"end": 18784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18717,
											"end": 18784,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 18717,
											"end": 18784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18710,
											"end": 18784,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18710,
											"end": 18784,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18793,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 18882,
											"end": 18885,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18793,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 18793,
											"end": 18886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18793,
											"end": 18886,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 18793,
											"end": 18886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18911,
											"end": 18913,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18906,
											"end": 18909,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18902,
											"end": 18914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 18914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 18914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18554,
											"end": 18920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18554,
											"end": 18920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18554,
											"end": 18920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18554,
											"end": 18920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 19345,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 18926,
											"end": 19345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19092,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19130,
											"end": 19132,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19119,
											"end": 19128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19107,
											"end": 19133,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19107,
											"end": 19133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19179,
											"end": 19188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19173,
											"end": 19177,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19169,
											"end": 19189,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19165,
											"end": 19166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19154,
											"end": 19163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19150,
											"end": 19167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19143,
											"end": 19190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19207,
											"end": 19338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 19333,
											"end": 19337,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19207,
											"end": 19338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 19207,
											"end": 19338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19207,
											"end": 19338,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 19207,
											"end": 19338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19199,
											"end": 19338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19199,
											"end": 19338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 19345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 19345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 19345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 19345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19351,
											"end": 19572,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 19351,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19491,
											"end": 19525,
											"name": "PUSH",
											"source": 11,
											"value": "5265776172642072617465206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 19487,
											"end": 19488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19479,
											"end": 19485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19475,
											"end": 19489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19468,
											"end": 19526,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19560,
											"end": 19564,
											"name": "PUSH",
											"source": 11,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19555,
											"end": 19557,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19547,
											"end": 19553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19536,
											"end": 19565,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19351,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19351,
											"end": 19572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19944,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 19578,
											"end": 19944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19720,
											"end": 19723,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19741,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 19805,
											"end": 19807,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 19800,
											"end": 19803,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19741,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 19741,
											"end": 19808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19741,
											"end": 19808,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 19741,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19734,
											"end": 19808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19734,
											"end": 19808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19817,
											"end": 19910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 19906,
											"end": 19909,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19817,
											"end": 19910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 19817,
											"end": 19910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19817,
											"end": 19910,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 19817,
											"end": 19910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19935,
											"end": 19937,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19930,
											"end": 19933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19926,
											"end": 19938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19919,
											"end": 19938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19919,
											"end": 19938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 20369,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 19950,
											"end": 20369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20116,
											"end": 20120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20154,
											"end": 20156,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20143,
											"end": 20152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20139,
											"end": 20157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20131,
											"end": 20157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20131,
											"end": 20157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20203,
											"end": 20212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20197,
											"end": 20201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20193,
											"end": 20213,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20189,
											"end": 20190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20187,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20174,
											"end": 20191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20167,
											"end": 20214,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20231,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 20357,
											"end": 20361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20231,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 20231,
											"end": 20362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20231,
											"end": 20362,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 20231,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20223,
											"end": 20362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20223,
											"end": 20362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 20369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 20369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 20369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 20369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20580,
											"end": 20584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20618,
											"end": 20621,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 20607,
											"end": 20616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20603,
											"end": 20622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20595,
											"end": 20622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20595,
											"end": 20622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 20700,
											"end": 20701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20698,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20685,
											"end": 20702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20676,
											"end": 20682,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 20632,
											"end": 20703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 20703,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 20632,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20713,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 20781,
											"end": 20783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20770,
											"end": 20779,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20766,
											"end": 20784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20757,
											"end": 20763,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 20713,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 20713,
											"end": 20785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20713,
											"end": 20785,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 20713,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20795,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 20863,
											"end": 20865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20852,
											"end": 20861,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 20866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20839,
											"end": 20845,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20795,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20795,
											"end": 20867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20795,
											"end": 20867,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 20795,
											"end": 20867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20877,
											"end": 20949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 20945,
											"end": 20947,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 20934,
											"end": 20943,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20930,
											"end": 20948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20921,
											"end": 20927,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20877,
											"end": 20949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20877,
											"end": 20949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20877,
											"end": 20949,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 20877,
											"end": 20949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20959,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 21027,
											"end": 21030,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 21016,
											"end": 21025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21012,
											"end": 21031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21003,
											"end": 21009,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20959,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20959,
											"end": 21032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20959,
											"end": 21032,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 20959,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 21039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21084,
											"end": 21087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 21125,
											"end": 21130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21107,
											"end": 21131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21098,
											"end": 21131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21098,
											"end": 21131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21153,
											"end": 21219,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21151,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21143,
											"end": 21220,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 21223,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21270,
											"end": 21271,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 21263,
											"end": 21268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21259,
											"end": 21272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21045,
											"end": 21278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21324,
											"end": 21331,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21347,
											"end": 21367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 21365,
											"end": 21366,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21347,
											"end": 21367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21367,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 21347,
											"end": 21367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21342,
											"end": 21367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21342,
											"end": 21367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21381,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 21399,
											"end": 21400,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21381,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21381,
											"end": 21401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21381,
											"end": 21401,
											"name": "tag",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 21381,
											"end": 21401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21376,
											"end": 21401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21376,
											"end": 21401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21436,
											"end": 21437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21433,
											"end": 21434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 21476,
											"end": 21487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21458,
											"end": 21488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21447,
											"end": 21488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21447,
											"end": 21488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21637,
											"end": 21638,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21628,
											"end": 21635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21624,
											"end": 21639,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 21621,
											"end": 21622,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 21640,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 21598,
											"end": 21599,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21591,
											"end": 21600,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21571,
											"end": 21654,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 21548,
											"end": 21687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 21548,
											"end": 21687,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21667,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 21667,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 21667,
											"end": 21685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21667,
											"end": 21685,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 21667,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21548,
											"end": 21687,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 21548,
											"end": 21687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21332,
											"end": 21694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21284,
											"end": 21694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21700,
											"end": 21880,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 21700,
											"end": 21880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21748,
											"end": 21825,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21745,
											"end": 21746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21738,
											"end": 21826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21845,
											"end": 21849,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 21842,
											"end": 21843,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 21835,
											"end": 21850,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21869,
											"end": 21873,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 21866,
											"end": 21867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21859,
											"end": 21874,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21926,
											"end": 21927,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21943,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 21961,
											"end": 21962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21943,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21943,
											"end": 21963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21943,
											"end": 21963,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 21943,
											"end": 21963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21938,
											"end": 21963,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21938,
											"end": 21963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21977,
											"end": 21997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 21995,
											"end": 21996,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21977,
											"end": 21997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 21977,
											"end": 21997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21977,
											"end": 21997,
											"name": "tag",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 21977,
											"end": 21997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21972,
											"end": 21997,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21972,
											"end": 21997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22016,
											"end": 22017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22006,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 22006,
											"end": 22041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22021,
											"end": 22039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 22021,
											"end": 22039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 22021,
											"end": 22039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22021,
											"end": 22039,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 22021,
											"end": 22039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22006,
											"end": 22041,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 22006,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22063,
											"end": 22064,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22060,
											"end": 22061,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22056,
											"end": 22065,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 22051,
											"end": 22065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22051,
											"end": 22065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 22071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22077,
											"end": 22259,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 22077,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22217,
											"end": 22251,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F7420636F6D706F756E6420646966666572656E7420746F6B656E73"
										},
										{
											"begin": 22213,
											"end": 22214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22205,
											"end": 22211,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22201,
											"end": 22215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22194,
											"end": 22252,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22077,
											"end": 22259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22077,
											"end": 22259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22265,
											"end": 22631,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 22265,
											"end": 22631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22407,
											"end": 22410,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22428,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 22492,
											"end": 22494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22487,
											"end": 22490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22428,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 22428,
											"end": 22495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22428,
											"end": 22495,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 22428,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22421,
											"end": 22495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22421,
											"end": 22495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22504,
											"end": 22597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 22593,
											"end": 22596,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22504,
											"end": 22597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 22504,
											"end": 22597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22504,
											"end": 22597,
											"name": "tag",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 22504,
											"end": 22597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22617,
											"end": 22620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22613,
											"end": 22625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22606,
											"end": 22625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22606,
											"end": 22625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22265,
											"end": 22631,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22265,
											"end": 22631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22265,
											"end": 22631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22265,
											"end": 22631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22637,
											"end": 23056,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 22637,
											"end": 23056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22803,
											"end": 22807,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22841,
											"end": 22843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22830,
											"end": 22839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22826,
											"end": 22844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22818,
											"end": 22844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22818,
											"end": 22844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22890,
											"end": 22899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22884,
											"end": 22888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22880,
											"end": 22900,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22876,
											"end": 22877,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22865,
											"end": 22874,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22861,
											"end": 22878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22854,
											"end": 22901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22918,
											"end": 23049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 23044,
											"end": 23048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22918,
											"end": 23049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 22918,
											"end": 23049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22918,
											"end": 23049,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 22918,
											"end": 23049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22910,
											"end": 23049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22910,
											"end": 23049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22637,
											"end": 23056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22637,
											"end": 23056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22637,
											"end": 23056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22637,
											"end": 23056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23062,
											"end": 23243,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 23062,
											"end": 23243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23202,
											"end": 23235,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 23198,
											"end": 23199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23190,
											"end": 23196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23186,
											"end": 23200,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23179,
											"end": 23236,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23062,
											"end": 23243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23062,
											"end": 23243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23249,
											"end": 23615,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 23249,
											"end": 23615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23391,
											"end": 23394,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23412,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 23476,
											"end": 23478,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 23471,
											"end": 23474,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23412,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 23412,
											"end": 23479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23412,
											"end": 23479,
											"name": "tag",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 23412,
											"end": 23479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23405,
											"end": 23479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23405,
											"end": 23479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23488,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 23577,
											"end": 23580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23488,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 23488,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23488,
											"end": 23581,
											"name": "tag",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 23488,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23606,
											"end": 23608,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23604,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23597,
											"end": 23609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23590,
											"end": 23609,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23590,
											"end": 23609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23249,
											"end": 23615,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23249,
											"end": 23615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23249,
											"end": 23615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23249,
											"end": 23615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23621,
											"end": 24040,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 23621,
											"end": 24040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23787,
											"end": 23791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23825,
											"end": 23827,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23814,
											"end": 23823,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23810,
											"end": 23828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23828,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23874,
											"end": 23883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23868,
											"end": 23872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23864,
											"end": 23884,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23860,
											"end": 23861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23849,
											"end": 23858,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23845,
											"end": 23862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23838,
											"end": 23885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23902,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 24028,
											"end": 24032,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23902,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 23902,
											"end": 24033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23902,
											"end": 24033,
											"name": "tag",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 23902,
											"end": 24033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23894,
											"end": 24033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23894,
											"end": 24033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23621,
											"end": 24040,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23621,
											"end": 24040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23621,
											"end": 24040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23621,
											"end": 24040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24167,
											"end": 24171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24205,
											"end": 24207,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 24194,
											"end": 24203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24190,
											"end": 24208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24182,
											"end": 24208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24182,
											"end": 24208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24218,
											"end": 24289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 24286,
											"end": 24287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24275,
											"end": 24284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24271,
											"end": 24288,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24262,
											"end": 24268,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 24218,
											"end": 24289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 24218,
											"end": 24289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24218,
											"end": 24289,
											"name": "tag",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 24218,
											"end": 24289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24299,
											"end": 24371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 24367,
											"end": 24369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24356,
											"end": 24365,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24352,
											"end": 24370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24343,
											"end": 24349,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24299,
											"end": 24371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 24299,
											"end": 24371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24299,
											"end": 24371,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 24299,
											"end": 24371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24384,
											"end": 24550,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 24384,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24524,
											"end": 24542,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 24520,
											"end": 24521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24508,
											"end": 24522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24501,
											"end": 24543,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24384,
											"end": 24550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24384,
											"end": 24550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24556,
											"end": 24922,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 24556,
											"end": 24922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24698,
											"end": 24701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24719,
											"end": 24786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "632"
										},
										{
											"begin": 24783,
											"end": 24785,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 24778,
											"end": 24781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24719,
											"end": 24786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 24719,
											"end": 24786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24719,
											"end": 24786,
											"name": "tag",
											"source": 11,
											"value": "632"
										},
										{
											"begin": 24719,
											"end": 24786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24712,
											"end": 24786,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24712,
											"end": 24786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24795,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 24884,
											"end": 24887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24795,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 24795,
											"end": 24888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24795,
											"end": 24888,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 24795,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24913,
											"end": 24915,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24908,
											"end": 24911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24904,
											"end": 24916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24897,
											"end": 24916,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24897,
											"end": 24916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24556,
											"end": 24922,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24556,
											"end": 24922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24556,
											"end": 24922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24556,
											"end": 24922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 25347,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 24928,
											"end": 25347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25094,
											"end": 25098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25132,
											"end": 25134,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25121,
											"end": 25130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25117,
											"end": 25135,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25109,
											"end": 25135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25109,
											"end": 25135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25181,
											"end": 25190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25175,
											"end": 25179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25171,
											"end": 25191,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25168,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25156,
											"end": 25165,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25152,
											"end": 25169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25145,
											"end": 25192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25209,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 25335,
											"end": 25339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25209,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 25209,
											"end": 25340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25209,
											"end": 25340,
											"name": "tag",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 25209,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25201,
											"end": 25340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25201,
											"end": 25340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 25347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 25347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 25347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 25347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25502,
											"end": 25506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25540,
											"end": 25542,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 25529,
											"end": 25538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25525,
											"end": 25543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25517,
											"end": 25543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25517,
											"end": 25543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25553,
											"end": 25624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 25621,
											"end": 25622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25610,
											"end": 25619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25606,
											"end": 25623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25603,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 25553,
											"end": 25624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 25553,
											"end": 25624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25553,
											"end": 25624,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 25553,
											"end": 25624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25634,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 25702,
											"end": 25704,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25691,
											"end": 25700,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25687,
											"end": 25705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25678,
											"end": 25684,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 25634,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 25634,
											"end": 25706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25634,
											"end": 25706,
											"name": "tag",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 25634,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25716,
											"end": 25788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 25784,
											"end": 25786,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 25773,
											"end": 25782,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25769,
											"end": 25787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25760,
											"end": 25766,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 25716,
											"end": 25788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 25716,
											"end": 25788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25716,
											"end": 25788,
											"name": "tag",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 25716,
											"end": 25788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25353,
											"end": 25795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25801,
											"end": 25971,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 25801,
											"end": 25971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25963,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 25937,
											"end": 25938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25929,
											"end": 25935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25925,
											"end": 25939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25918,
											"end": 25964,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25801,
											"end": 25971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25801,
											"end": 25971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25977,
											"end": 26343,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 25977,
											"end": 26343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26119,
											"end": 26122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26140,
											"end": 26207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 26204,
											"end": 26206,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 26199,
											"end": 26202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26140,
											"end": 26207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 26140,
											"end": 26207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26140,
											"end": 26207,
											"name": "tag",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 26140,
											"end": 26207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26133,
											"end": 26207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26133,
											"end": 26207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26216,
											"end": 26309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 26305,
											"end": 26308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26216,
											"end": 26309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 26216,
											"end": 26309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26216,
											"end": 26309,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 26216,
											"end": 26309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26334,
											"end": 26336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26329,
											"end": 26332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26325,
											"end": 26337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26318,
											"end": 26337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26318,
											"end": 26337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25977,
											"end": 26343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25977,
											"end": 26343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25977,
											"end": 26343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25977,
											"end": 26343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26768,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 26349,
											"end": 26768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26515,
											"end": 26519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26553,
											"end": 26555,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26542,
											"end": 26551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26538,
											"end": 26556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26530,
											"end": 26556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26530,
											"end": 26556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26602,
											"end": 26611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26596,
											"end": 26600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26592,
											"end": 26612,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 26588,
											"end": 26589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26577,
											"end": 26586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26573,
											"end": 26590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26566,
											"end": 26613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26630,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 26756,
											"end": 26760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26630,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 26630,
											"end": 26761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26630,
											"end": 26761,
											"name": "tag",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 26630,
											"end": 26761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26622,
											"end": 26761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26622,
											"end": 26761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/DeFiStakingPlatform.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REWARD_PRECISION()": "3d6aa5e1",
							"compound(uint256)": "aa5f7e26",
							"createPool(address,address,uint256,uint256,uint256)": "85ac165a",
							"earned(uint256,address)": "e39c08fc",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"exit(uint256)": "7f8661a1",
							"getPoolInfo(uint256)": "2f380b35",
							"getReward(uint256)": "1c4b774b",
							"getUserInfo(uint256,address)": "1069f3b5",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"poolCount()": "f525cb68",
							"pools(uint256)": "ac4afa38",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"setPoolStatus(uint256,bool)": "bbcaf3fe",
							"stake(uint256,uint256)": "7b0472f0",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateRewardRate(uint256,uint256)": "b32534cf",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RewardRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockPeriod\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earnedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerTokenStored\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setPoolStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userRewardPerTokenPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeFiStakingPlatform.sol\":\"DeFiStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/DeFiStakingPlatform.sol\":{\"keccak256\":\"0xd394b73fa1822fc8849e578f9bd868ec808554c4f4076b3f0796e4af0af569f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d87b433769c25fb499399f2d52cc2705ce1f45dd00094694d1b12236bdc5e296\",\"dweb:/ipfs/QmaLTa4f2WQWNc71xiiRs8DEkqLKa6YHHyWg5LRQpFJQ1C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 356,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 255,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1046,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "pools",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(StakingPool)1032_storage)"
							},
							{
								"astId": 1053,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "userInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1041_storage))"
							},
							{
								"astId": 1055,
								"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
								"label": "poolCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)488": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1041_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DeFiStaking.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1041_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1041_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1041_storage)"
							},
							"t_mapping(t_uint256,t_struct(StakingPool)1032_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct DeFiStaking.StakingPool)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingPool)1032_storage"
							},
							"t_struct(StakingPool)1032_storage": {
								"encoding": "inplace",
								"label": "struct DeFiStaking.StakingPool",
								"members": [
									{
										"astId": 1014,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "stakingToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)488"
									},
									{
										"astId": 1017,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "rewardToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)488"
									},
									{
										"astId": 1019,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "rewardRate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1021,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "lastUpdateTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1023,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "rewardPerTokenStored",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1025,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "totalSupply",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1027,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "minimumStake",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1029,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1031,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "active",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(UserInfo)1041_storage": {
								"encoding": "inplace",
								"label": "struct DeFiStaking.UserInfo",
								"members": [
									{
										"astId": 1034,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1036,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "userRewardPerTokenPaid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1038,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "rewards",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1040,
										"contract": "contracts/DeFiStakingPlatform.sol:DeFiStaking",
										"label": "stakedTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							982
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 983,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 982,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 982,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								982
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							994
						],
						"IERC20": [
							488
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 488,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 994,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 488,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 994,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								994,
								488
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								422,
								431
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							994
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 995,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 994,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							488
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 489,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 488,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							982
						],
						"Pausable": [
							345
						]
					},
					"id": 346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 346,
							"sourceUnit": 983,
							"src": "130:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 242,
										"name": "Context",
										"nameLocations": [
											"632:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 982,
										"src": "632:7:4"
									},
									"id": 243,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 241,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 345,
							"linearizedBaseContracts": [
								345,
								982
							],
							"name": "Pausable",
							"nameLocation": "620:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 248,
									"name": "Paused",
									"nameLocation": "730:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "737:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:4"
									},
									"src": "724:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 253,
									"name": "Unpaused",
									"nameLocation": "841:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "850:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:4"
									},
									"src": "835:32:4"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "873:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 254,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "986:32:4",
										"statements": [
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "996:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "996:15:4"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:4"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:4"
									},
									"scope": 345,
									"src": "972:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1229:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "1239:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:4"
											},
											{
												"id": 270,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:4"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 272,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:4"
									},
									"src": "1204:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1476:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 275,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "1486:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:4"
											},
											{
												"id": 278,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:4"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 280,
									"name": "whenPaused",
									"nameLocation": "1463:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:4"
									},
									"src": "1454:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1668:31:4",
										"statements": [
											{
												"expression": {
													"id": 286,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "1685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 285,
												"id": 287,
												"nodeType": "Return",
												"src": "1678:14:4"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:4"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1662:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:4"
									},
									"scope": 345,
									"src": "1615:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1818:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:4",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 294,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "1837:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:4"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:4"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 345,
									"src": "1767:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "1993:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 306,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2011:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:4"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:4"
									},
									"scope": 345,
									"src": "1945:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2235:66:4",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2245:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 323,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2281:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 322,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2274:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "2269:25:4"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 272,
												"src": "2221:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:4"
									},
									"scope": 345,
									"src": "2186:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2481:69:4",
										"statements": [
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2491:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2530:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 338,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2521:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "EmitStatement",
												"src": "2516:27:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 331,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 280,
												"src": "2470:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:4"
									},
									"scope": 345,
									"src": "2433:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 346,
							"src": "602:1950:4",
							"usedErrors": [],
							"usedEvents": [
								248,
								253
							]
						}
					],
					"src": "105:2448:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							410
						]
					},
					"id": 411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 351,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 410,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 354,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 410,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 352,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 353,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 356,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 410,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 355,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 360,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 410,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 367,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 370,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 375,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 380,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 410,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 410,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 404,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 405,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 403,
												"id": 407,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 410,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 411,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							488
						]
					},
					"id": 489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 488,
							"linearizedBaseContracts": [
								488
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 422,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 431,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 488,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 488,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 488,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 488,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 488,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 488,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 489,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								422,
								431
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							488
						],
						"SafeERC20": [
							952
						]
					},
					"id": 953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 489,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 491,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 488,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 230,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 493,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 495,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 952,
							"linearizedBaseContracts": [
								952
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 500,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 509,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 455,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 526,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 522,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 520,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 511,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 488,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 952,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 550,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 487,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 552,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 553,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 555,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 548,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 546,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 535,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 488,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 952,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 577,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 455,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 579,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 580,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 575,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 573,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 572,
												"id": 584,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 562,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 488,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 952,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 605,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 487,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 607,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 608,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 603,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 601,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 613,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 588,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 488,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 952,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 632,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$952",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$952",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 628,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 465,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 639,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 640,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 641,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 617,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 488,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 952,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 687,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															658
														],
														"declarations": [
															{
																"constant": false,
																"id": 658,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 657,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 667,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 663,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$952",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$952",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 661,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 665,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 659,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 465,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 669,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 678,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 677,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 672,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 652,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 673,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 658,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 674,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 671,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 676,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 681,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 682,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 683,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 679,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 686,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 648,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 488,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 952,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 704,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 475,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 706,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 708,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 702,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 712,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 713,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 711,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 734,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 733,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 720,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 693,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$488",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 475,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 722,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 695,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 724,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 718,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 716,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 729,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 730,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 728,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 732,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 691,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 488,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 952,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 749,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 763,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 765,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 761,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 776,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 775,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 771,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 740,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 769,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 768,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 774,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 755,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 756,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 757,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 754,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 759,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 952,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 794,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 809,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 810,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 812,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 807,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 823,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 822,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 818,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 816,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 815,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 821,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 806,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 800,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 801,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 802,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 799,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 805,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 781,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 952,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 839,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 853,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 854,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 855,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 851,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 866,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 865,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 861,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 859,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 858,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 864,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 845,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 846,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 847,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 844,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 829,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 828,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 952,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 879,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 882,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 873,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 884,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 885,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 896,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 890,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 873,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$488",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$488",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 888,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 903,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$488",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$488",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 901,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 900,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 906,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 872,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 871,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 488,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 952,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 921,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 916,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 916,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 925,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 928,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 922,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 930,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 931,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 932,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 943,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 937,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$488",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$488",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 936,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 935,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 947,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 920,
												"id": 949,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 488,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 488,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$488",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 952,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 953,
							"src": "698:9376:7",
							"usedErrors": [
								500,
								509
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							982
						]
					},
					"id": 983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 955,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 960,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 959,
												"id": 962,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 982,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 969,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 968,
												"id": 971,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 982,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 977,
												"id": 979,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 982,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 983,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							994
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 984,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 985,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 994,
							"linearizedBaseContracts": [
								994
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 987,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 994,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 995,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/DeFiStakingPlatform.sol": {
				"ast": {
					"absolutePath": "contracts/DeFiStakingPlatform.sol",
					"exportedSymbols": {
						"Context": [
							982
						],
						"DeFiStaking": [
							1980
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							488
						],
						"Ownable": [
							147
						],
						"Pausable": [
							345
						],
						"ReentrancyGuard": [
							410
						],
						"SafeERC20": [
							952
						]
					},
					"id": 1981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 997,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1981,
							"sourceUnit": 489,
							"src": "61:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1981,
							"sourceUnit": 953,
							"src": "119:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1981,
							"sourceUnit": 411,
							"src": "186:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1000,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1981,
							"sourceUnit": 148,
							"src": "250:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1981,
							"sourceUnit": 346,
							"src": "304:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1002,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"387:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "387:15:10"
									},
									"id": 1003,
									"nodeType": "InheritanceSpecifier",
									"src": "387:15:10"
								},
								{
									"baseName": {
										"id": 1004,
										"name": "Ownable",
										"nameLocations": [
											"404:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "404:7:10"
									},
									"id": 1005,
									"nodeType": "InheritanceSpecifier",
									"src": "404:7:10"
								},
								{
									"baseName": {
										"id": 1006,
										"name": "Pausable",
										"nameLocations": [
											"413:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 345,
										"src": "413:8:10"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "413:8:10"
								}
							],
							"canonicalName": "DeFiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1980,
							"linearizedBaseContracts": [
								1980,
								345,
								147,
								982,
								410
							],
							"name": "DeFiStaking",
							"nameLocation": "372:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1011,
									"libraryName": {
										"id": 1008,
										"name": "SafeERC20",
										"nameLocations": [
											"435:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 952,
										"src": "435:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "429:27:10",
									"typeName": {
										"id": 1010,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1009,
											"name": "IERC20",
											"nameLocations": [
												"449:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 488,
											"src": "449:6:10"
										},
										"referencedDeclaration": 488,
										"src": "449:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$488",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "DeFiStaking.StakingPool",
									"id": 1032,
									"members": [
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "stakingToken",
											"nameLocation": "505:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "498:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$488",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1013,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1012,
													"name": "IERC20",
													"nameLocations": [
														"498:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 488,
													"src": "498:6:10"
												},
												"referencedDeclaration": 488,
												"src": "498:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1017,
											"mutability": "mutable",
											"name": "rewardToken",
											"nameLocation": "535:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "528:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$488",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1016,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1015,
													"name": "IERC20",
													"nameLocations": [
														"528:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 488,
													"src": "528:6:10"
												},
												"referencedDeclaration": 488,
												"src": "528:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$488",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1019,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "565:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "557:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1018,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1021,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "632:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "624:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1020,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1023,
											"mutability": "mutable",
											"name": "rewardPerTokenStored",
											"nameLocation": "665:20:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "657:28:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1022,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1025,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "704:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "696:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1027,
											"mutability": "mutable",
											"name": "minimumStake",
											"nameLocation": "734:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "726:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1029,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "765:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "757:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "757:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1031,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "817:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "812:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1030,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "812:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingPool",
									"nameLocation": "475:11:10",
									"nodeType": "StructDefinition",
									"scope": 1980,
									"src": "468:363:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DeFiStaking.UserInfo",
									"id": 1041,
									"members": [
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "878:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "870:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1033,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "870:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "userRewardPerTokenPaid",
											"nameLocation": "904:22:10",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "896:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1038,
											"mutability": "mutable",
											"name": "rewards",
											"nameLocation": "945:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "937:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "937:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1040,
											"mutability": "mutable",
											"name": "stakedTime",
											"nameLocation": "971:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "963:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1039,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "963:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "850:8:10",
									"nodeType": "StructDefinition",
									"scope": 1980,
									"src": "843:146:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac4afa38",
									"id": 1046,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "1040:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1980,
									"src": "1001:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
										"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool)"
									},
									"typeName": {
										"id": 1045,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1042,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1009:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1001:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
											"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1044,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1043,
												"name": "StakingPool",
												"nameLocations": [
													"1020:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1032,
												"src": "1020:11:10"
											},
											"referencedDeclaration": 1032,
											"src": "1020:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
												"typeString": "struct DeFiStaking.StakingPool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1053,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1108:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1980,
									"src": "1052:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo))"
									},
									"typeName": {
										"id": 1052,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1047,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1060:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1052:48:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1051,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1048,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1079:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1071:28:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
												"typeString": "mapping(address => struct DeFiStaking.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1050,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1049,
													"name": "UserInfo",
													"nameLocations": [
														"1090:8:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1041,
													"src": "1090:8:10"
												},
												"referencedDeclaration": 1041,
												"src": "1090:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
													"typeString": "struct DeFiStaking.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f525cb68",
									"id": 1055,
									"mutability": "mutable",
									"name": "poolCount",
									"nameLocation": "1144:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1980,
									"src": "1129:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1054,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1129:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3d6aa5e1",
									"id": 1058,
									"mutability": "constant",
									"name": "REWARD_PRECISION",
									"nameLocation": "1184:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1980,
									"src": "1160:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1160:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1057,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1203:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1254:2:10",
										"statements": []
									},
									"id": 1066,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1061,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1242:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1246:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1242:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1063,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1060,
												"name": "Ownable",
												"nameLocations": [
													"1234:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1234:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1234:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:2:10"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:0:10"
									},
									"scope": 1980,
									"src": "1220:36:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b203c0a4a9d84ddde23dba31a828c25525b2e0b5fe6a0e356d983aed95961ca1",
									"id": 1080,
									"name": "PoolCreated",
									"nameLocation": "1274:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1312:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1296:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "1337:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1329:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "1368:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1360:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1398:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1390:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": false,
												"mutability": "mutable",
												"name": "minimumStake",
												"nameLocation": "1427:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1419:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockPeriod",
												"nameLocation": "1458:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1450:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:190:10"
									},
									"src": "1268:208:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 1088,
									"name": "Staked",
									"nameLocation": "1494:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1517:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1501:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1539:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1523:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1555:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1547:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:62:10"
									},
									"src": "1488:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 1096,
									"name": "Withdrawn",
									"nameLocation": "1575:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1601:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1585:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1623:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1607:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1639:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1631:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:62:10"
									},
									"src": "1569:78:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51",
									"id": 1104,
									"name": "RewardPaid",
									"nameLocation": "1659:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1686:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1670:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1708:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1692:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1724:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1716:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:62:10"
									},
									"src": "1653:79:10"
								},
								{
									"anonymous": false,
									"eventSelector": "c390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee50",
									"id": 1110,
									"name": "RewardRateUpdated",
									"nameLocation": "1744:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1778:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1762:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "1794:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1786:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:41:10"
									},
									"src": "1738:65:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b3c3c605d1520cd5bf41301dd5c04929e0ff021b02a10ea259b5a5b2d521a29c",
									"id": 1116,
									"name": "PoolStatusChanged",
									"nameLocation": "1815:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1849:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1833:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "1862:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1857:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1857:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:37:10"
									},
									"src": "1809:61:10"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1937:426:10",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1968:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "1948:24:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
															"typeString": "struct DeFiStaking.StakingPool"
														},
														"typeName": {
															"id": 1123,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1122,
																"name": "StakingPool",
																"nameLocations": [
																	"1948:11:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1032,
																"src": "1948:11:10"
															},
															"referencedDeclaration": 1032,
															"src": "1948:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"baseExpression": {
														"id": 1125,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1975:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
															"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
														}
													},
													"id": 1127,
													"indexExpression": {
														"id": 1126,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "1981:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1975:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:40:10"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1129,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1999:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2004:20:10",
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1023,
														"src": "1999:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1133,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "2042:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1132,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "2027:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2027:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1999:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "1999:50:10"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1137,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2060:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2065:14:10",
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1021,
														"src": "2060:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1140,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2082:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2088:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2082:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2060:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "2060:37:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "2122:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2141:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2133:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2133:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2133:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2122:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "2118:226:10",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "2145:199:10",
													"statements": [
														{
															"assignments": [
																1152
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1152,
																	"mutability": "mutable",
																	"name": "user",
																	"nameLocation": "2177:4:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1175,
																	"src": "2160:21:10",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																		"typeString": "struct DeFiStaking.UserInfo"
																	},
																	"typeName": {
																		"id": 1151,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1150,
																			"name": "UserInfo",
																			"nameLocations": [
																				"2160:8:10"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1041,
																			"src": "2160:8:10"
																		},
																		"referencedDeclaration": 1041,
																		"src": "2160:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1158,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1153,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "2184:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																			"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
																		}
																	},
																	"id": 1155,
																	"indexExpression": {
																		"id": 1154,
																		"name": "poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "2193:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2184:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
																		"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
																	}
																},
																"id": 1157,
																"indexExpression": {
																	"id": 1156,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "2201:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2184:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
																	"typeString": "struct DeFiStaking.UserInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2160:49:10"
														},
														{
															"expression": {
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1159,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2224:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2229:7:10",
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1038,
																	"src": "2224:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1163,
																			"name": "poolId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "2246:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1164,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "2254:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1162,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "2239:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (uint256,address) view returns (uint256)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2239:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2224:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "2224:38:10"
														},
														{
															"expression": {
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1168,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2277:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2282:22:10",
																	"memberName": "userRewardPerTokenPaid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1036,
																	"src": "2277:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1171,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "2307:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																			"typeString": "struct DeFiStaking.StakingPool storage pointer"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2312:20:10",
																	"memberName": "rewardPerTokenStored",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1023,
																	"src": "2307:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2277:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "2277:55:10"
														}
													]
												}
											},
											{
												"id": 1177,
												"nodeType": "PlaceholderStatement",
												"src": "2354:1:10"
											}
										]
									},
									"id": 1179,
									"name": "updateReward",
									"nameLocation": "1891:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1912:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1904:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1928:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1920:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:33:10"
									},
									"src": "1882:481:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "2411:81:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "2430:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1185,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2439:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2430:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2450:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2422:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2422:50:10"
											},
											{
												"id": 1190,
												"nodeType": "PlaceholderStatement",
												"src": "2483:1:10"
											}
										]
									},
									"id": 1192,
									"name": "poolExists",
									"nameLocation": "2384:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "2403:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "2395:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:16:10"
									},
									"src": "2375:117:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "2540:82:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1197,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "2559:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																		"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																	}
																},
																"id": 1199,
																"indexExpression": {
																	"id": 1198,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "2565:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2559:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																	"typeString": "struct DeFiStaking.StakingPool storage ref"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2573:6:10",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1031,
															"src": "2559:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206973206e6f7420616374697665",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2581:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
																"typeString": "literal_string \"Pool is not active\""
															},
															"value": "Pool is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
																"typeString": "literal_string \"Pool is not active\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2551:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "2551:51:10"
											},
											{
												"id": 1204,
												"nodeType": "PlaceholderStatement",
												"src": "2613:1:10"
											}
										]
									},
									"id": 1206,
									"name": "poolActive",
									"nameLocation": "2513:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "2532:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2524:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:16:10"
									},
									"src": "2504:118:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2835:882:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "2854:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2879:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2871:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2871:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2871:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2854:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2883:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															},
															"value": "Invalid staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2846:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "2846:61:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "2926:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2950:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2942:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2942:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2942:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2926:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2918:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2918:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1242,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2996:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3010:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2996:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e2030",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3013:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															},
															"value": "Reward rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2988:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "2988:62:10"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1248,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "3071:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"id": 1249,
															"name": "poolCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3077:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3071:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
															"typeString": "struct DeFiStaking.StakingPool storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1253,
																		"name": "_stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "3138:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1252,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "3131:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$488_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3131:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1256,
																		"name": "_rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "3187:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1255,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "3180:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$488_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3180:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1258,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "3227:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1259,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3269:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3275:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3269:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3321:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3350:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1263,
																"name": "_minimumStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "3380:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1264,
																"name": "_lockPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "3420:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3454:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$488",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1251,
															"name": "StakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "3090:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakingPool_$1032_storage_ptr_$",
																"typeString": "type(struct DeFiStaking.StakingPool storage pointer)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3117:12:10",
															"3167:11:10",
															"3215:10:10",
															"3253:14:10",
															"3299:20:10",
															"3337:11:10",
															"3366:12:10",
															"3408:10:10",
															"3446:6:10"
														],
														"names": [
															"stakingToken",
															"rewardToken",
															"rewardRate",
															"lastUpdateTime",
															"rewardPerTokenStored",
															"totalSupply",
															"minimumStake",
															"lockPeriod",
															"active"
														],
														"nodeType": "FunctionCall",
														"src": "3090:380:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_memory_ptr",
															"typeString": "struct DeFiStaking.StakingPool memory"
														}
													},
													"src": "3071:399:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "3071:399:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1270,
															"name": "poolCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3522:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1271,
															"name": "_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3546:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "_rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3574:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "_rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3601:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1274,
															"name": "_minimumStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "3627:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1275,
															"name": "_lockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3655:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1269,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3496:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3496:181:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "EmitStatement",
												"src": "3491:186:10"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3698:11:10",
													"subExpression": {
														"id": 1278,
														"name": "poolCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "3698:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "3698:11:10"
											}
										]
									},
									"functionSelector": "85ac165a",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1218,
												"name": "onlyOwner",
												"nameLocations": [
													"2825:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2825:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2825:9:10"
										}
									],
									"name": "createPool",
									"nameLocation": "2643:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "2672:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2664:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "2704:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2696:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "2735:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2727:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_minimumStake",
												"nameLocation": "2765:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2757:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_lockPeriod",
												"nameLocation": "2797:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2789:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:162:10"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:0:10"
									},
									"scope": 1980,
									"src": "2634:1083:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "3799:334:10",
										"statements": [
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3830:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "3810:24:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
															"typeString": "struct DeFiStaking.StakingPool"
														},
														"typeName": {
															"id": 1290,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1289,
																"name": "StakingPool",
																"nameLocations": [
																	"3810:11:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1032,
																"src": "3810:11:10"
															},
															"referencedDeclaration": 1032,
															"src": "3810:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"baseExpression": {
														"id": 1292,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3837:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
															"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
														}
													},
													"id": 1294,
													"indexExpression": {
														"id": 1293,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "3843:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3837:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3810:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1296,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "3865:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "3865:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3885:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3865:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1304,
												"nodeType": "IfStatement",
												"src": "3861:86:10",
												"trueBody": {
													"id": 1303,
													"nodeType": "Block",
													"src": "3888:59:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 1300,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "3910:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																		"typeString": "struct DeFiStaking.StakingPool storage pointer"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3915:20:10",
																"memberName": "rewardPerTokenStored",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1023,
																"src": "3910:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1288,
															"id": 1302,
															"nodeType": "Return",
															"src": "3903:32:10"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1305,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "3974:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:20:10",
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1023,
														"src": "3974:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1311,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1307,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "4019:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1308,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4025:9:10",
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "4019:15:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"expression": {
																									"id": 1309,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1291,
																									"src": "4037:4:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																										"typeString": "struct DeFiStaking.StakingPool storage pointer"
																									}
																								},
																								"id": 1310,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4042:14:10",
																								"memberName": "lastUpdateTime",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1021,
																								"src": "4037:19:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4019:37:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1312,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4018:39:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1313,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1291,
																						"src": "4060:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																							"typeString": "struct DeFiStaking.StakingPool storage pointer"
																						}
																					},
																					"id": 1314,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4065:10:10",
																					"memberName": "rewardRate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1019,
																					"src": "4060:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4018:57:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1316,
																				"name": "REWARD_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "4078:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4018:76:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4017:78:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1319,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "4098:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																			"typeString": "struct DeFiStaking.StakingPool storage pointer"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4103:11:10",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "4098:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4017:97:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1322,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4002:123:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3974:151:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1324,
												"nodeType": "Return",
												"src": "3967:158:10"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "3738:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "3761:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3753:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:16:10"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3790:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:9:10"
									},
									"scope": 1980,
									"src": "3729:404:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "4224:191:10",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4252:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "4235:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1336,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1335,
																"name": "UserInfo",
																"nameLocations": [
																	"4235:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "4235:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "4235:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1338,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4259:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1340,
														"indexExpression": {
															"id": 1339,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "4268:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4259:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1342,
													"indexExpression": {
														"id": 1341,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "4276:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4259:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4235:49:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1344,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1337,
																			"src": "4303:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																				"typeString": "struct DeFiStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4308:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1034,
																		"src": "4303:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1347,
																							"name": "poolId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1328,
																							"src": "4334:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1346,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1326,
																						"src": "4319:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 1348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4319:22:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"expression": {
																						"id": 1349,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1337,
																						"src": "4344:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																							"typeString": "struct DeFiStaking.UserInfo storage pointer"
																						}
																					},
																					"id": 1350,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4349:22:10",
																					"memberName": "userRewardPerTokenPaid",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1036,
																					"src": "4344:27:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4319:52:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1352,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4318:54:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4303:69:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1354,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4302:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1355,
															"name": "REWARD_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "4376:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4302:90:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1357,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "4395:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4400:7:10",
														"memberName": "rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1038,
														"src": "4395:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4302:105:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1360,
												"nodeType": "Return",
												"src": "4295:112:10"
											}
										]
									},
									"functionSelector": "e39c08fc",
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "4154:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "4169:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4161:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4185:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4177:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:33:10"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:9:10"
									},
									"scope": 1980,
									"src": "4145:270:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "4647:541:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "4666:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4675:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4666:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4678:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4658:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "4658:37:10"
											},
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4736:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4716:24:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
															"typeString": "struct DeFiStaking.StakingPool"
														},
														"typeName": {
															"id": 1392,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1391,
																"name": "StakingPool",
																"nameLocations": [
																	"4716:11:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1032,
																"src": "4716:11:10"
															},
															"referencedDeclaration": 1032,
															"src": "4716:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"baseExpression": {
														"id": 1394,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "4743:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
															"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
														}
													},
													"id": 1396,
													"indexExpression": {
														"id": 1395,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "4749:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4743:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4716:40:10"
											},
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4784:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4767:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1399,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1398,
																"name": "UserInfo",
																"nameLocations": [
																	"4767:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "4767:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "4767:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1401,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4791:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1403,
														"indexExpression": {
															"id": 1402,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "4800:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4791:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1406,
													"indexExpression": {
														"expression": {
															"id": 1404,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4808:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4812:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4808:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4791:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4767:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "4848:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1410,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "4858:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																		"typeString": "struct DeFiStaking.StakingPool storage pointer"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4863:12:10",
																"memberName": "minimumStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1027,
																"src": "4858:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4848:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742062656c6f77206d696e696d756d207374616b65",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5",
																"typeString": "literal_string \"Amount below minimum stake\""
															},
															"value": "Amount below minimum stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_357f9a4ef068097c1826f4cbdbdd3db8f4ec0aa76d645f6ad27fbf2b3f17e8f5",
																"typeString": "literal_string \"Amount below minimum stake\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4840:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4840:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "4840:66:10"
											},
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1416,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "4927:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4932:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "4927:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1419,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "4947:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4927:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "4927:26:10"
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1422,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "4964:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4969:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1034,
														"src": "4964:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1425,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "4980:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4964:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "4964:22:10"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1428,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "4997:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5002:10:10",
														"memberName": "stakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "4997:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1431,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5015:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5021:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5015:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4997:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "4997:33:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5086:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5090:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5086:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1444,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5106:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeFiStaking_$1980",
																		"typeString": "contract DeFiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeFiStaking_$1980",
																		"typeString": "contract DeFiStaking"
																	}
																],
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5098:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1442,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5098:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5098:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "5113:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1435,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5051:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5056:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1014,
															"src": "5051:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5069:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "5051:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$488_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5051:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "5051:69:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5153:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5157:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5153:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "5165:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1453,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "5173:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "5146:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5146:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "5141:39:10"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "nonReentrant",
												"nameLocations": [
													"4503:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "4503:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4503:12:10"
										},
										{
											"id": 1371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1370,
												"name": "whenNotPaused",
												"nameLocations": [
													"4526:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 272,
												"src": "4526:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4526:13:10"
										},
										{
											"arguments": [
												{
													"id": 1373,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1364,
													"src": "4561:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1374,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1372,
												"name": "poolExists",
												"nameLocations": [
													"4550:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "4550:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4550:18:10"
										},
										{
											"arguments": [
												{
													"id": 1376,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1364,
													"src": "4590:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1375,
												"name": "poolActive",
												"nameLocations": [
													"4579:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1206,
												"src": "4579:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4579:18:10"
										},
										{
											"arguments": [
												{
													"id": 1379,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1364,
													"src": "4621:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"expression": {
														"id": 1380,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4629:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4633:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4629:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1378,
												"name": "updateReward",
												"nameLocations": [
													"4608:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "4608:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4608:32:10"
										}
									],
									"name": "stake",
									"nameLocation": "4436:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "4450:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4442:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4466:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4458:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:32:10"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4647:0:10"
									},
									"scope": 1980,
									"src": "4427:761:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "5368:609:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "5387:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5387:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5399:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5379:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5379:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "5379:40:10"
											},
											{
												"assignments": [
													1483
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5460:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "5440:24:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
															"typeString": "struct DeFiStaking.StakingPool"
														},
														"typeName": {
															"id": 1482,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1481,
																"name": "StakingPool",
																"nameLocations": [
																	"5440:11:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1032,
																"src": "5440:11:10"
															},
															"referencedDeclaration": 1032,
															"src": "5440:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"baseExpression": {
														"id": 1484,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5467:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
															"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
														}
													},
													"id": 1486,
													"indexExpression": {
														"id": 1485,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "5473:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5467:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5440:40:10"
											},
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5508:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "5491:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1489,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1488,
																"name": "UserInfo",
																"nameLocations": [
																	"5491:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "5491:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "5491:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1491,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "5515:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1493,
														"indexExpression": {
															"id": 1492,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "5524:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5515:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1496,
													"indexExpression": {
														"expression": {
															"id": 1494,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5532:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5536:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5532:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5515:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5491:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1499,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "5572:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																		"typeString": "struct DeFiStaking.UserInfo storage pointer"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5577:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1034,
																"src": "5572:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "5588:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5572:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5596:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5564:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5564:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "5564:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1507,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5652:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5658:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5652:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1509,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "5671:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5676:10:10",
																	"memberName": "stakedTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1040,
																	"src": "5671:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1511,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "5689:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																			"typeString": "struct DeFiStaking.StakingPool storage pointer"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5694:10:10",
																	"memberName": "lockPeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "5689:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5671:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5652:52:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5719:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
																"typeString": "literal_string \"Tokens are still locked\""
															},
															"value": "Tokens are still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
																"typeString": "literal_string \"Tokens are still locked\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5630:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:125:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "5630:125:10"
											},
											{
												"expression": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1518,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5776:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool storage pointer"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5781:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "5776:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1521,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5796:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5776:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "5776:26:10"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1524,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5813:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5818:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1034,
														"src": "5813:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1527,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5829:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5813:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "5813:22:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5887:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5891:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5887:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "5899:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1530,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "5856:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5861:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1014,
															"src": "5856:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5874:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 533,
														"src": "5856:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$488_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "5856:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1541,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5942:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5946:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5942:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1543,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "5954:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1544,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "5962:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "5932:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5932:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "EmitStatement",
												"src": "5927:42:10"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1463,
												"name": "nonReentrant",
												"nameLocations": [
													"5277:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "5277:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5277:12:10"
										},
										{
											"arguments": [
												{
													"id": 1466,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1459,
													"src": "5311:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1465,
												"name": "poolExists",
												"nameLocations": [
													"5300:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "5300:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5300:18:10"
										},
										{
											"arguments": [
												{
													"id": 1469,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1459,
													"src": "5342:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"expression": {
														"id": 1470,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5350:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5354:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5350:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1468,
												"name": "updateReward",
												"nameLocations": [
													"5329:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "5329:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5329:32:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "5209:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5226:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "5218:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5242:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "5234:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:32:10"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5368:0:10"
									},
									"scope": 1980,
									"src": "5200:777:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "6142:321:10",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6170:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "6153:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1564,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1563,
																"name": "UserInfo",
																"nameLocations": [
																	"6153:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "6153:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "6153:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1566,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "6177:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1568,
														"indexExpression": {
															"id": 1567,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "6186:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6177:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1571,
													"indexExpression": {
														"expression": {
															"id": 1569,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6194:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6198:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6194:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6177:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6153:52:10"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6224:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "6216:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6216:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"expression": {
														"id": 1575,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "6233:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo storage pointer"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6238:7:10",
													"memberName": "rewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1038,
													"src": "6233:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6216:29:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "6270:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6279:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6270:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "6266:190:10",
												"trueBody": {
													"id": 1604,
													"nodeType": "Block",
													"src": "6282:174:10",
													"statements": [
														{
															"expression": {
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1581,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "6297:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6302:7:10",
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1038,
																	"src": "6297:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6297:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "6297:16:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1592,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6367:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6371:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6367:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1594,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "6379:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1587,
																				"name": "pools",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1046,
																				"src": "6328:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																					"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																				}
																			},
																			"id": 1589,
																			"indexExpression": {
																				"id": 1588,
																				"name": "poolId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "6334:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6328:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																				"typeString": "struct DeFiStaking.StakingPool storage ref"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6342:11:10",
																		"memberName": "rewardToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1017,
																		"src": "6328:25:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6354:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 533,
																	"src": "6328:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$488_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6328:58:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1596,
															"nodeType": "ExpressionStatement",
															"src": "6328:58:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1598,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6417:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6421:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6417:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1600,
																		"name": "poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "6429:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1601,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "6437:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1597,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "6406:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6406:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1603,
															"nodeType": "EmitStatement",
															"src": "6401:43:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1c4b774b",
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1552,
												"name": "nonReentrant",
												"nameLocations": [
													"6051:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "6051:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6051:12:10"
										},
										{
											"arguments": [
												{
													"id": 1555,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "6085:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1556,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1554,
												"name": "poolExists",
												"nameLocations": [
													"6074:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "6074:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6074:18:10"
										},
										{
											"arguments": [
												{
													"id": 1558,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "6116:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6124:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6128:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6124:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1557,
												"name": "updateReward",
												"nameLocations": [
													"6103:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "6103:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6103:32:10"
										}
									],
									"name": "getReward",
									"nameLocation": "5998:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6016:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "6008:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:16:10"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:10"
									},
									"scope": 1980,
									"src": "5989:474:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "6514:140:10",
										"statements": [
											{
												"assignments": [
													1614
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6542:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "6525:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1613,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1612,
																"name": "UserInfo",
																"nameLocations": [
																	"6525:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "6525:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "6525:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1615,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "6549:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1617,
														"indexExpression": {
															"id": 1616,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6558:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6549:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1620,
													"indexExpression": {
														"expression": {
															"id": 1618,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6566:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6570:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6566:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6549:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6525:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1623,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6597:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1624,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "6605:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																	"typeString": "struct DeFiStaking.UserInfo storage pointer"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6610:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1034,
															"src": "6605:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "6588:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6588:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "6588:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6639:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1628,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "6629:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "6629:17:10"
											}
										]
									},
									"functionSelector": "7f8661a1",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "6484:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6497:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "6489:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6488:16:10"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6514:0:10"
									},
									"scope": 1980,
									"src": "6475:179:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "6849:674:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1654,
																				"name": "pools",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1046,
																				"src": "6890:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																					"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																				}
																			},
																			"id": 1656,
																			"indexExpression": {
																				"id": 1655,
																				"name": "poolId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1635,
																				"src": "6896:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6890:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																				"typeString": "struct DeFiStaking.StakingPool storage ref"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6904:12:10",
																		"memberName": "stakingToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1014,
																		"src": "6890:26:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6882:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6882:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1661,
																				"name": "pools",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1046,
																				"src": "6929:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																					"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																				}
																			},
																			"id": 1663,
																			"indexExpression": {
																				"id": 1662,
																				"name": "poolId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1635,
																				"src": "6935:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6929:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																				"typeString": "struct DeFiStaking.StakingPool storage ref"
																			}
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6943:11:10",
																		"memberName": "rewardToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1017,
																		"src": "6929:25:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$488",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6921:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1659,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6921:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6921:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6882:73:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420636f6d706f756e6420646966666572656e7420746f6b656e73",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6970:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089",
																"typeString": "literal_string \"Cannot compound different tokens\""
															},
															"value": "Cannot compound different tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ec89fc4edebd57447c0758f94846fdd056d71cb1360cfb48ddd58ce88a19089",
																"typeString": "literal_string \"Cannot compound different tokens\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6860:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6860:155:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "6860:155:10"
											},
											{
												"assignments": [
													1672
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7053:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "7036:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1671,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1670,
																"name": "UserInfo",
																"nameLocations": [
																	"7036:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "7036:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "7036:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1673,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "7060:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1675,
														"indexExpression": {
															"id": 1674,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "7069:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7060:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1678,
													"indexExpression": {
														"expression": {
															"id": 1676,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7077:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7081:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7077:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7060:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7036:52:10"
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7107:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "7099:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7099:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"expression": {
														"id": 1682,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "7116:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo storage pointer"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7121:7:10",
													"memberName": "rewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1038,
													"src": "7116:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7099:29:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1685,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "7153:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7162:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7153:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1729,
												"nodeType": "IfStatement",
												"src": "7149:367:10",
												"trueBody": {
													"id": 1728,
													"nodeType": "Block",
													"src": "7165:351:10",
													"statements": [
														{
															"expression": {
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1688,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "7180:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7185:7:10",
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1038,
																	"src": "7180:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7195:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7180:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1693,
															"nodeType": "ExpressionStatement",
															"src": "7180:16:10"
														},
														{
															"expression": {
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1694,
																			"name": "pools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "7258:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																				"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																			}
																		},
																		"id": 1696,
																		"indexExpression": {
																			"id": 1695,
																			"name": "poolId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "7264:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7258:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																			"typeString": "struct DeFiStaking.StakingPool storage ref"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7272:11:10",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "7258:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1698,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "7287:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7258:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "7258:35:10"
														},
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1701,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "7308:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7313:7:10",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1034,
																	"src": "7308:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1704,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "7324:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7308:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "7308:22:10"
														},
														{
															"expression": {
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1707,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "7345:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																			"typeString": "struct DeFiStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7350:10:10",
																	"memberName": "stakedTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1040,
																	"src": "7345:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1710,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7363:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7369:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7363:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7345:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "7345:33:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1715,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7423:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7427:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7423:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1717,
																		"name": "poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "7435:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1718,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "7443:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1714,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "7412:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7412:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1720,
															"nodeType": "EmitStatement",
															"src": "7407:43:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1722,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7477:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7481:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7477:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1724,
																		"name": "poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "7489:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1725,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "7497:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1721,
																	"name": "Staked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "7470:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7470:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1727,
															"nodeType": "EmitStatement",
															"src": "7465:39:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1637,
												"name": "nonReentrant",
												"nameLocations": [
													"6729:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "6729:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6729:12:10"
										},
										{
											"arguments": [
												{
													"id": 1640,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "6763:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1639,
												"name": "poolExists",
												"nameLocations": [
													"6752:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "6752:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6752:18:10"
										},
										{
											"arguments": [
												{
													"id": 1643,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "6792:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1642,
												"name": "poolActive",
												"nameLocations": [
													"6781:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1206,
												"src": "6781:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6781:18:10"
										},
										{
											"arguments": [
												{
													"id": 1646,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "6823:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"expression": {
														"id": 1647,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6831:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6835:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6831:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1649,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1645,
												"name": "updateReward",
												"nameLocations": [
													"6810:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "6810:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6810:32:10"
										}
									],
									"name": "compound",
									"nameLocation": "6675:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6692:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "6684:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:16:10"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6849:0:10"
									},
									"scope": 1980,
									"src": "6666:857:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "7655:429:10",
										"statements": [
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7683:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1799,
														"src": "7666:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1742,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1741,
																"name": "UserInfo",
																"nameLocations": [
																	"7666:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "7666:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "7666:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1744,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "7690:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1746,
														"indexExpression": {
															"id": 1745,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "7699:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7690:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"expression": {
															"id": 1747,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7707:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7711:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7707:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7690:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7666:52:10"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7737:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1799,
														"src": "7729:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7729:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1755,
												"initialValue": {
													"expression": {
														"id": 1753,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "7746:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo storage pointer"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7751:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1034,
													"src": "7746:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7729:29:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1757,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "7787:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7796:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7787:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7799:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7779:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7779:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "7779:44:10"
											},
											{
												"expression": {
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1763,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "7844:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																	"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																}
															},
															"id": 1765,
															"indexExpression": {
																"id": 1764,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "7850:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7844:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																"typeString": "struct DeFiStaking.StakingPool storage ref"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7858:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "7844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1767,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "7873:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7844:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "7844:35:10"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1770,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "7890:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7895:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1034,
														"src": "7890:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7905:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7890:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "7890:16:10"
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1776,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "7917:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo storage pointer"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7922:7:10",
														"memberName": "rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1038,
														"src": "7917:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7932:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7917:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "7917:16:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7994:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7998:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7994:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "8006:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1782,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "7954:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																		"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																	}
																},
																"id": 1784,
																"indexExpression": {
																	"id": 1783,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "7960:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7954:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																	"typeString": "struct DeFiStaking.StakingPool storage ref"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7968:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1014,
															"src": "7954:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$488",
																"typeString": "contract IERC20"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7981:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 533,
														"src": "7954:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$488_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$488_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7954:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "7954:59:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8049:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8053:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8049:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "8061:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1796,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "8069:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1792,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "8039:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8039:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "EmitStatement",
												"src": "8034:42:10"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1735,
												"name": "nonReentrant",
												"nameLocations": [
													"7607:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "7607:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7607:12:10"
										},
										{
											"arguments": [
												{
													"id": 1738,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1733,
													"src": "7641:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1737,
												"name": "poolExists",
												"nameLocations": [
													"7630:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "7630:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7630:18:10"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7544:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "7570:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "7562:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7561:16:10"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:10"
									},
									"scope": 1980,
									"src": "7535:549:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "8272:172:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "8291:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8301:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8291:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e2030",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8304:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															},
															"value": "Reward rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															}
														],
														"id": 1819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8283:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8283:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "8283:58:10"
											},
											{
												"expression": {
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1826,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "8352:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																	"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																}
															},
															"id": 1828,
															"indexExpression": {
																"id": 1827,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "8358:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8352:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																"typeString": "struct DeFiStaking.StakingPool storage ref"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8366:10:10",
														"memberName": "rewardRate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1019,
														"src": "8352:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1830,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "8379:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8352:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "8352:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1834,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "8420:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1835,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "8428:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1833,
														"name": "RewardRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "8402:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8402:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "EmitStatement",
												"src": "8397:39:10"
											}
										]
									},
									"functionSelector": "b32534cf",
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1806,
												"name": "onlyOwner",
												"nameLocations": [
													"8184:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8184:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8184:9:10"
										},
										{
											"arguments": [
												{
													"id": 1809,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1802,
													"src": "8215:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1808,
												"name": "poolExists",
												"nameLocations": [
													"8204:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "8204:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8204:18:10"
										},
										{
											"arguments": [
												{
													"id": 1812,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1802,
													"src": "8246:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8262:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8254:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8254:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8254:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1817,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1811,
												"name": "updateReward",
												"nameLocations": [
													"8233:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "8233:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8233:32:10"
										}
									],
									"name": "updateRewardRate",
									"nameLocation": "8105:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "8130:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "8122:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8122:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "8146:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "8138:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8121:33:10"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:0:10"
									},
									"scope": 1980,
									"src": "8096:348:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "8582:97:10",
										"statements": [
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1851,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "8593:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																	"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																}
															},
															"id": 1853,
															"indexExpression": {
																"id": 1852,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "8599:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8593:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																"typeString": "struct DeFiStaking.StakingPool storage ref"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8607:6:10",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1031,
														"src": "8593:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1855,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "8616:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8593:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "8593:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1859,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "8656:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1860,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "8664:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1858,
														"name": "PoolStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "8638:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8638:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "EmitStatement",
												"src": "8633:38:10"
											}
										]
									},
									"functionSelector": "bbcaf3fe",
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1845,
												"name": "onlyOwner",
												"nameLocations": [
													"8537:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8537:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8537:9:10"
										},
										{
											"arguments": [
												{
													"id": 1848,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1841,
													"src": "8568:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1849,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1847,
												"name": "poolExists",
												"nameLocations": [
													"8557:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "8557:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8557:18:10"
										}
									],
									"name": "setPoolStatus",
									"nameLocation": "8465:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "8487:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "8479:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8479:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "8500:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "8495:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8495:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:29:10"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8582:0:10"
									},
									"scope": 1980,
									"src": "8456:223:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "9057:318:10",
										"statements": [
											{
												"assignments": [
													1888
												],
												"declarations": [
													{
														"constant": false,
														"id": 1888,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9088:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "9068:24:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
															"typeString": "struct DeFiStaking.StakingPool"
														},
														"typeName": {
															"id": 1887,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1886,
																"name": "StakingPool",
																"nameLocations": [
																	"9068:11:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1032,
																"src": "9068:11:10"
															},
															"referencedDeclaration": 1032,
															"src": "9068:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																"typeString": "struct DeFiStaking.StakingPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1892,
												"initialValue": {
													"baseExpression": {
														"id": 1889,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9095:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
															"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
														}
													},
													"id": 1891,
													"indexExpression": {
														"id": 1890,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "9101:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9095:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
														"typeString": "struct DeFiStaking.StakingPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9068:40:10"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1895,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "9149:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																			"typeString": "struct DeFiStaking.StakingPool storage pointer"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9154:12:10",
																	"memberName": "stakingToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1014,
																	"src": "9149:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9141:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1893,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9141:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9141:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1900,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "9190:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																			"typeString": "struct DeFiStaking.StakingPool storage pointer"
																		}
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9195:11:10",
																	"memberName": "rewardToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1017,
																	"src": "9190:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$488",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9182:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9182:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9182:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1903,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "9222:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9227:10:10",
															"memberName": "rewardRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1019,
															"src": "9222:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1905,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "9252:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9257:11:10",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1025,
															"src": "9252:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1907,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "9283:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9288:12:10",
															"memberName": "minimumStake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1027,
															"src": "9283:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1909,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "9315:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9320:10:10",
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1029,
															"src": "9315:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1911,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "9345:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingPool_$1032_storage_ptr",
																	"typeString": "struct DeFiStaking.StakingPool storage pointer"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9350:6:10",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1031,
															"src": "9345:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1913,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9126:241:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,address,uint256,uint256,uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 1885,
												"id": 1914,
												"nodeType": "Return",
												"src": "9119:248:10"
											}
										]
									},
									"functionSelector": "2f380b35",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1869,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "8783:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1870,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1868,
												"name": "poolExists",
												"nameLocations": [
													"8772:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "8772:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8772:18:10"
										}
									],
									"name": "getPoolInfo",
									"nameLocation": "8700:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "8720:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8712:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8712:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8711:16:10"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "8832:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8824:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8824:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "8867:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8859:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8859:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "8901:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8893:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8893:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "8934:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8926:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "minimumStake",
												"nameLocation": "8968:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8960:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8960:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "lockPeriod",
												"nameLocation": "9003:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "8995:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8995:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "9033:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "9028:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9028:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8809:241:10"
									},
									"scope": 1980,
									"src": "8691:684:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "9668:263:10",
										"statements": [
											{
												"assignments": [
													1936
												],
												"declarations": [
													{
														"constant": false,
														"id": 1936,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "9696:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "9679:26:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
															"typeString": "struct DeFiStaking.UserInfo"
														},
														"typeName": {
															"id": 1935,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1934,
																"name": "UserInfo",
																"nameLocations": [
																	"9679:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "9679:8:10"
															},
															"referencedDeclaration": 1041,
															"src": "9679:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																"typeString": "struct DeFiStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1937,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "9708:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct DeFiStaking.UserInfo storage ref))"
															}
														},
														"id": 1939,
														"indexExpression": {
															"id": 1938,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "9717:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9708:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1041_storage_$",
															"typeString": "mapping(address => struct DeFiStaking.UserInfo storage ref)"
														}
													},
													"id": 1941,
													"indexExpression": {
														"id": 1940,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "9725:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9708:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1041_storage",
														"typeString": "struct DeFiStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9679:51:10"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1943,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "9763:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																	"typeString": "struct DeFiStaking.UserInfo storage pointer"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9773:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1034,
															"src": "9763:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1946,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "9802:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1947,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "9810:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1945,
																"name": "earned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "9795:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (uint256,address) view returns (uint256)"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9795:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1949,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "9830:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																	"typeString": "struct DeFiStaking.UserInfo storage pointer"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9840:10:10",
															"memberName": "stakedTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "9830:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1951,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "9865:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1041_storage_ptr",
																		"typeString": "struct DeFiStaking.UserInfo storage pointer"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9875:10:10",
																"memberName": "stakedTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1040,
																"src": "9865:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1953,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "9888:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingPool_$1032_storage_$",
																			"typeString": "mapping(uint256 => struct DeFiStaking.StakingPool storage ref)"
																		}
																	},
																	"id": 1955,
																	"indexExpression": {
																		"id": 1954,
																		"name": "poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "9894:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9888:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingPool_$1032_storage",
																		"typeString": "struct DeFiStaking.StakingPool storage ref"
																	}
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9902:10:10",
																"memberName": "lockPeriod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1029,
																"src": "9888:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9865:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1958,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9748:175:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1959,
												"nodeType": "Return",
												"src": "9741:182:10"
											}
										]
									},
									"functionSelector": "1069f3b5",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1923,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1918,
													"src": "9493:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1922,
												"name": "poolExists",
												"nameLocations": [
													"9482:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1192,
												"src": "9482:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9482:18:10"
										}
									],
									"name": "getUserInfo",
									"nameLocation": "9396:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "9416:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9408:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9432:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9424:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9407:30:10"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9542:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9534:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9534:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "earnedAmount",
												"nameLocation": "9572:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9564:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9564:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "stakedTime",
												"nameLocation": "9607:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9599:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "9640:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "9632:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9519:142:10"
									},
									"scope": 1980,
									"src": "9387:544:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "9979:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1966,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "9990:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9990:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "9990:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1963,
												"name": "onlyOwner",
												"nameLocations": [
													"9969:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9969:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9969:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "9952:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9957:2:10"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9979:0:10"
									},
									"scope": 1980,
									"src": "9943:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "10056:29:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1975,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "10067:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10067:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "10067:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1973,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1972,
												"name": "onlyOwner",
												"nameLocations": [
													"10046:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10046:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10046:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "10027:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10034:2:10"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:10"
									},
									"scope": 1980,
									"src": "10018:67:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1981,
							"src": "363:9725:10",
							"usedErrors": [
								13,
								18,
								500
							],
							"usedEvents": [
								24,
								248,
								253,
								1080,
								1088,
								1096,
								1104,
								1110,
								1116
							]
						}
					],
					"src": "33:10055:10"
				},
				"id": 10
			}
		}
	}
}